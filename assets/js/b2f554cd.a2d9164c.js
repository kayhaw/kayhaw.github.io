"use strict";(self.webpackChunkkayhaw_github_io=self.webpackChunkkayhaw_github_io||[]).push([[1477],{10:function(r){r.exports=JSON.parse('{"blogPosts":[{"id":"/2022/06/21/FlinkX-Source-Code-Dissection-05","metadata":{"permalink":"/blog/2022/06/21/FlinkX-Source-Code-Dissection-05","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2022/06/21-FlinkX-Source-Code-Dissection-05.md","source":"@site/blog/2022/06/21-FlinkX-Source-Code-Dissection-05.md","title":"FlinkX\u6e90\u7801\u5256\u6790(5)","description":"FlinkX\u6e90\u7801\u5256\u6790(4)","date":"2022-06-21T00:00:00.000Z","formattedDate":"June 21, 2022","tags":[{"label":"FlinkX","permalink":"/blog/tags/flink-x"},{"label":"Source code dissection","permalink":"/blog/tags/source-code-dissection"}],"readingTime":12.48,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"FlinkX\u6e90\u7801\u5256\u6790(5)","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["FlinkX","Source code dissection"],"description":"FlinkX\u6e90\u7801\u5256\u6790(4)","hide_table_of_contents":false},"nextItem":{"title":"FlinkX\u6e90\u7801\u5256\u6790(4)","permalink":"/blog/2022/06/16/FlinkX-Source-Code-Dissection-04"}},"content":"\u4e0a\u4e00\u7bc7\u6587\u7ae0\u5206\u6790\u4e86FlinkX\u81ea\u5b9a\u4e49\u7684BaseRichInputFormat\u7c7b\uff0c\u5b50\u7c7b\u53ea\u9700\u8981\u5b9e\u73b0openInternal\u548cnextRecordInternal\u7b49xxxInternal\u65b9\u6cd5\u3002\u672c\u7bc7\u6587\u7ae0\u7ee7\u7eed\u5206\u6790BaseRichInputFormat\u662f\u5982\u4f55\u5b9e\u73b0\u7edf\u4e00\u7684\u6307\u6807\u6536\u96c6\u3001\u53d1\u5e03\u529f\u80fd\u3002\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## Flink Metric\\r\\n\\r\\nFlink\u672c\u8eab\u63d0\u4f9b\u4e86\u4e00\u5957\u6307\u6807\u6ce8\u518c\u3001\u53d1\u5e03\u7cfb\u7edf\uff0c\u5bf9\u4e8eRichFunction\u5b50\u7c7b\uff0c\u53ef\u4ee5\u901a\u8fc7getRuntimeContext().getMetricGroup()\u83b7\u53d6\u6307\u6807\u7ec4\u5bf9\u8c61\uff0c\u7136\u540e\u6dfb\u52a0\u6307\u6807\u3002\u66f4\u5177\u4f53\u5730\uff0cFlink\u5c06\u6307\u6807\u5206\u4e3a\u5982\u4e0b4\u79cd(\u5bf9\u5e944\u4e2a\u540c\u540d\u63a5\u53e3)\uff1a\\r\\n\\r\\n- Counter\uff1a\u6570\u503c\u7c7b\u578b(long)\u6307\u6807\uff0c\u63d0\u4f9binc\u548cdec\u65b9\u6cd5\u589e\u51cf\u6570\u503c\u3002SimpleCounter\u5b9e\u73b0Counter\u63a5\u53e3\uff0c\u6ce8\u610f\u5b83\u6ca1\u6709\u6dfb\u52a0\u4efb\u4f55\u540c\u6b65\u673a\u5236\uff1b\\r\\n- Gauge\uff1a\u6cdb\u578b\u6307\u6807\uff0c\u63d0\u4f9bgetValue\u65b9\u6cd5\u83b7\u53d6\u6307\u6807\u5bf9\u8c61\uff0c\u901a\u8fc7MetricGroup.gauge(String name, Gauge gauge)\u65b9\u6cd5\u6ce8\u518c\u6307\u6807\uff1b\\r\\n\\r\\n:::caution \u6ce8\u610f\\r\\n\u6307\u6807\u53d1\u5e03\u5668\u4f1a\u5c06Gauge\u6307\u6807\u8f6c\u4e3aString\u53d1\u5e03\uff0c\u56e0\u6b64Gauge\u7684\u6cdb\u578b\u53c2\u6570\u5fc5\u987b\u5b9e\u73b0toString\u65b9\u6cd5\u3002\\r\\n:::\\r\\n\\r\\n- Histogram\uff1a\u6570\u503c\u5206\u5e03\u6307\u6807\uff1b\\r\\n- Meter\uff1a\u6d41\u91cf\u6307\u6807\uff0c\u7edf\u8ba1\u5904\u7406event\u7684\u901f\u7387\u3002\\r\\n\\r\\n## BaseMetric\\r\\n\\r\\n### \u5b57\u6bb5\u548c\u65b9\u6cd5\\r\\n\\r\\nFlinkX\u81ea\u5b9a\u4e49BaseMetric\u7c7b\uff0c\u5b83\u662fBaseRichInputFormat\u548cBaseRichOutputFormat\u4e2d\u7edf\u8ba1\u6307\u6807\u7684\u62bd\u8c61\uff0c\u5305\u542b\u5982\u4e0b2\u4e2a\u5b57\u6bb5\u5b58\u50a8\u6307\u6807\u6570\u636e\uff1a\\r\\n\\r\\n```java\\r\\nprivate final MetricGroup flinkxOutput;\\r\\nprivate final Map<String, LongCounter> metricCounters = new HashMap<>();\\r\\n```\\r\\n\\r\\nBaseMetric\u7684\u6784\u9020\u65b9\u6cd5\u4f20\u5165RuntimContext\uff0c\u8c03\u7528\u5176getMetricGroup().addGroup\u65b9\u6cd5\u6dfb\u52a0\u5b57\u8868\uff1a\\r\\n\\r\\n```java\\r\\npublic BaseMetric(RuntimeContext runtimeContext) {\\r\\n  flinkxOutput =\\r\\n    runtimeContext\\r\\n      .getMetricGroup()\\r\\n      .addGroup(\\r\\n        Metrics.METRIC_GROUP_KEY_FLINKX, Metrics.METRIC_GROUP_VALUE_OUTPUT);\\r\\n// \u5b57\u7b26\u4e32\u5e38\u91cfMETRIC_GROUP_KEY_FLINKX\u548cMETRIC_GROUP_VALUE_OUTPUT\u5206\u522b\u662f\\r\\n// \\"flinkx\\"\u548c\\"output\\"\uff0c\u8fd9\u91cc\\"output\\"\u4e0d\u662f\u4e13\u6307OutputFormat\\r\\n}\\r\\n```\\r\\n\\r\\nMetricGroup\u63a5\u53e3\u67092\u79cd\u6dfb\u52a0\u6307\u6807\u7ec4\u7684\u65b9\u6cd5\uff1a\\r\\n\\r\\n1. `MetricGroup addGroup(String name)`\\r\\n2. `MetricGroup addGroup(String key, String value)`\\r\\n\\r\\n\u524d\u8005\u5728\u5f53\u524d\u6307\u6807\u7ec4\u4e0b\u6dfb\u52a0*name*\u6307\u6807\u7ec4\uff0c\u540e\u8005\u6dfb\u52a0*key*\u6307\u6807\u7ec4\u7136\u540e\u5728key\u7ec4\u4e0b\u53c8\u6dfb\u52a0*value*\u7ec4\uff0c`addGroup(key).addGroup(value)`\u548c`addGroup(key, value)`\u7684\u552f\u4e00\u533a\u522b\u662f\u540e\u8005\u989d\u5916\u8fd4\u56de\u4e00\u4e2a\u952e\u503c\u5bf9\u3002\\r\\n\\r\\n\u56de\u5230BaseMetric\uff0c\u63d0\u4f9baddMetric\u65b9\u6cd5\u589e\u52a0\u65b0\u6307\u6807\uff0c\u53ef\u4ee5\u770b\u5230\u6307\u6807\u5206\u522b\u6dfb\u52a0\u5230\u6210\u5458\u5b57\u6bb5flinkxOutput(MetricGroup\u7c7b\u578b)\u548cmetricCounters(Map<String, LongCounter\\\\>\u7c7b\u578b)\u4e2d\uff1a\\r\\n\\r\\n```java\\r\\npublic void addMetric(String metricName, LongCounter counter, boolean meterView) {\\r\\n  metricCounters.put(metricName, counter);\\r\\n  flinkxOutput.gauge(metricName, new SimpleAccumulatorGauge<>(counter));\\r\\n  if (meterView) {\\r\\n    flinkxOutput.meter(\\r\\n      metricName + Metrics.SUFFIX_RATE, new SimpleLongCounterMeterView(counter, 20));\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n### \u6dfb\u52a0\u4e0e\u83b7\u53d6\\r\\n\\r\\n\u5728BaseRichInputFormat\u7684initStatisticsAccumulator\u65b9\u6cd5\u4e2d\uff0c\u521b\u5efa\u4e863\u4e2aLongCounter\u5e76\u5c06\u5176\u6dfb\u52a0\u5230inputMetric\u6307\u6807\u7ec4\uff1a\\r\\n\\r\\n```java\\r\\nprivate void initStatisticsAccumulator() {\\r\\n  numReadCounter = getRuntimeContext().getLongCounter(Metrics.NUM_READS);\\r\\n  bytesReadCounter = getRuntimeContext().getLongCounter(Metrics.READ_BYTES);\\r\\n  durationCounter = getRuntimeContext().getLongCounter(Metrics.READ_DURATION);\\r\\n\\r\\n  inputMetric = new BaseMetric(getRuntimeContext());\\r\\n  inputMetric.addMetric(Metrics.NUM_READS, numReadCounter, true);\\r\\n  inputMetric.addMetric(Metrics.READ_BYTES, bytesReadCounter, true);\\r\\n  inputMetric.addMetric(Metrics.READ_DURATION, durationCounter);\\r\\n}\\r\\n```\\r\\n\\r\\n\u9664\u6b64\u4e4b\u5916\uff0cFlinkX\u8fd8\u5c06\u4ee5\u4e0a3\u4e2a\u6307\u6807\u6570\u636e\u4f5c\u4e3a\u4fdd\u5b58\u5230formatState\u4e2d\u3002Flink\u81ea\u5b9a\u4e49FormatState\u7c7b\u8868\u793aFormat\u72b6\u6001\uff0c\u5b83\u4fdd\u5b58\u4e86`Map<String, LongCounter\\\\> metric`\u3001numOfSubTask\u3001jobId\u7b49\u6570\u636e\u3002BaseRichInputFormat\u901a\u8fc7getFormatState\u65b9\u6cd5\u83b7\u53d6/\u66f4\u65b0Format\u72b6\u6001\uff1a\\r\\n\\r\\n```java\\r\\npublic FormatState getFormatState() {\\r\\n  if (formatState != null && numReadCounter != null && inputMetric != null) {\\r\\n    formatState.setMetric(inputMetric.getMetricCounters());\\r\\n  }\\r\\n  return formatState;\\r\\n}\\r\\n```\\r\\n\\r\\n## FormatState\\r\\n\\r\\n### \u66f4\u65b0\u4e0e\u4fdd\u5b58\\r\\n\\r\\n\u5c3d\u7ba1\u5728FlinkX\u5728BaseRichInputFormat\u4e0a\u5efa\u7acb\u4e86\u72b6\u6001(FormatState)\uff0c\u4f46\u662fFlink\u6846\u67b6\u63d0\u4f9b\u7684\u72b6\u6001\u4fdd\u5b58\u3001\u6062\u590d\u662f\u4f5c\u7528\u4e8e\u5176\u4e0a\u4e00\u5c42SourceFunction(\u9700\u8981\u5b9e\u73b0CheckpointedFunction\u63a5\u53e3)\u3002\u4e3a\u6b64\uff0cDtInputFormatSourceFunction\u901a\u8fc7`Map<Integer, FormatState> formatStateMap`\u5b57\u6bb5\u4fdd\u5b58\u5176\u4e0b\u6240\u6709\u5b50\u4efb\u52a1\u7684InputFormat\u72b6\u6001(key\u4e3a\u5b50\u4efb\u52a1\u7f16\u53f7)\u3002\u5177\u4f53\u5730\uff0c\u5b83\u5b9e\u73b0\u76842\u4e2aCheckpointedFunction\u63a5\u53e3\u65b9\u6cd5\u5982\u4e0b\uff1a\\r\\n\\r\\n```java\\r\\n// \u8fdb\u884c1\u6b21\u5feb\u7167\u5907\u4efd\uff0c\u6ce8\u610fgetFormatState\u4f1a\u4eceinputMetric\u4e2d\u91cd\u65b0\u83b7\u53d6\u6307\u6807\u6570\u636e\\r\\npublic void snapshotState(FunctionSnapshotContext context) throws Exception {\\r\\n    FormatState formatState = ((BaseRichInputFormat) format).getFormatState();\\r\\n    if (formatState != null) {\\r\\n      LOG.info(\\"InputFormat format state:{}\\", formatState);\\r\\n      unionOffsetStates.clear();\\r\\n      unionOffsetStates.add(formatState);\\r\\n    }\\r\\n}\\r\\n\\r\\n// \u72b6\u6001\u521d\u59cb\u5316(\u68c0\u67e5\u70b9\u6062\u590d)\\r\\npublic void initializeState(FunctionInitializationContext context) throws Exception {\\r\\n  OperatorStateStore stateStore = context.getOperatorStateStore();\\r\\n  LOG.info(\\"Start initialize input format state, is restored:{}\\", context.isRestored());\\r\\n  unionOffsetStates =\\r\\n    stateStore.getUnionListState(\\r\\n      new ListStateDescriptor<>(\\r\\n        LOCATION_STATE_NAME,\\r\\n        TypeInformation.of(new TypeHint<FormatState>() {})));\\r\\n  // \u68c0\u67e5\u70b9\u6062\u590dformatStateMap\u72b6\u6001\\r\\n  if (context.isRestored()) {\\r\\n    formatStateMap = new HashMap<>(16);\\r\\n    for (FormatState formatState : unionOffsetStates.get()) {\\r\\n      formatStateMap.put(formatState.getNumOfSubTask(), formatState);\\r\\n      LOG.info(\\"Input format state into:{}\\", formatState);\\r\\n    }\\r\\n  }\\r\\n  LOG.info(\\"End initialize input format state\\");\\r\\n}\\r\\n```\\r\\n\\r\\n:::tip \u5c0f\u7ed3\\r\\n\\r\\n1. `BaseMetric inputMetric`\u5b57\u6bb5\u662f`MetricGroup flinkxOutput`\u548c`Map<String, LongCounter> metricCounters`\u7684\u5c01\u88c5\uff0c\u53ea\u63d0\u4f9b\u6307\u6807\u6dfb\u52a0\u548c\u83b7\u53d6\uff0c\u6ce8\u610f\u4fee\u9970\u7b26\u4e3atransient\uff1b\\r\\n2. `FormatState formatState`\u662finputMetric\u4e2dmetricCounters\u548c\u5176\u4ed6\u6570\u636e(\u5b50\u4efb\u52a1\u7f16\u53f7\uff0c\u4efb\u52a1id\u7b49)\u7684\u5c01\u88c5\uff0c\u4f5c\u4e3a\u72b6\u6001\u5305\u542b\u6307\u6807\u5728\u5185\u7684\u6240\u6709\u4fe1\u606f\uff1b\\r\\n3. `Map<Integer, FormatState> formatStateMap`\u662f\u6bcf\u4e2aInputFormat\u7684formatState\u805a\u5408\u5c01\u88c5\uff0ckey\u662f\u5b50\u4efb\u52a1\u7f16\u53f7\uff0cvalue\u662f\u8be5\u5b50\u4efb\u52a1\u5bf9\u5e94\u7684InputFormat\u72b6\u6001\uff0c\u5373DtInputFormatSourceFunction\u7684\u72b6\u6001\u662f\u4e00\u7ec4FormatState\u3002\\r\\n:::\\r\\n\\r\\n### \u72b6\u6001\u751f\u547d\u5468\u671f\\r\\n\\r\\n1. \u5982\u679cDtInputFormatSourceFunction\u4ece\u68c0\u67e5\u70b9\u4e2d\u6062\u590d\uff0c\u8c03\u7528initializeState\u65b9\u6cd5\u7ed9formatStateMap\u8d4b\u503c\uff1b\\r\\n2. DtInputFormatSourceFunction\u7684open\u65b9\u6cd5\uff0c\u68c0\u67e5formatStateMap\u662f\u5426\u4e3anull\uff0c\u4e0d\u662fnull\u8fdb\u884cInputFormat\u7684\u72b6\u6001\u8bbe\u7f6e(\u8c03\u7528BaseRichInputFormat\u7684setRestoreState\u65b9\u6cd5\uff0c\u5373\u8bbe\u7f6eFormatState)\uff1b\\r\\n3. BaseRichInputFormat\u7684open\u65b9\u6cd5\u8c03\u7528initRestoreInfo\u5224\u65adFormatState\u662f\u5426\u4e3a\u7a7a\uff1a\\r\\n   1. \u4e3a\u7a7a\u8bf4\u660e\u662f\u7b2c\u4e00\u6b21\u8fd0\u884c\uff0c\u6b64\u65f6\u81ea\u5df1new\u4e00\u4e2aFormatState\\r\\n   2. \u4e0d\u4e3a\u7a7a\u8bf4\u660e\u662f\u6062\u590d\u8fd0\u884c\uff0c\u4e0a\u5c42\u7684SourceFunction\u5df2\u7ecf\u901a\u8fc7setRestoreState\u5c06\u72b6\u6001\u6062\u590d\uff0c\u6b64\u65f6\u91cd\u65b0\u5c06\u72b6\u6001\u4e2d\u7684\u7edf\u8ba1\u6307\u6807\u503c\u6dfb\u52a0\u5230\u5f53\u524d\u6307\u6807\u4e2d\uff1b\\r\\n4. DtInputFormatSourceFunction\u7684snapshotState\u65b9\u6cd5(\u68c0\u67e5\u70b9\u4fdd\u5b58)\u8c03\u7528BaseRichInputFormat\u7684getFormatState\u65b9\u6cd5\uff0c\u540e\u8005\u4eceinputMetric\u4e2d\u66f4\u65b0FormatState\u7684\u6307\u6807\u6570\u636e\u540e\u8fd4\u56de\u3002\\r\\n\\r\\n## AccumulatorCollector\\r\\n\\r\\nFlinkX\u81ea\u5b9a\u4e49AccumulatorCollector\u7c7b\u6765\u8868\u793a\u6307\u6807\u7d2f\u52a0\u5668\u6536\u96c6\u5668\uff0c\u6838\u5fc3\u662f\u4e00\u4e2a**\u5355\u7ebf\u7a0b\u6c60**\uff0c\u6bcf\u4e2aBaseRichInputFormat\u5305\u542b\u4e00\u4e2a\u8be5\u7c7b\u5b57\u6bb5accumulatorCollector\u3002\\r\\n\\r\\n### \u521d\u59cb\u5316\u548c\u542f\u52a8\\r\\n\\r\\n\u6536\u96c6\u5668accumulatorCollector\u5728InputFormat\u7684open\u65b9\u6cd5\u4e2d\u8c03\u7528initAccumulatorCollector\u5bf9\u5176\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u7ed9\u51fa\u8981\u6536\u96c6\u6307\u6807\u7684\u540d\u79f0\u5e76\u542f\u52a8\u6536\u96c6\u7ebf\u7a0b\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\\r\\n\\r\\n```java\\r\\nprivate void initAccumulatorCollector() {\\r\\n  String lastWriteLocation =\\r\\n          String.format(\\"%s_%s\\", Metrics.LAST_WRITE_LOCATION_PREFIX, indexOfSubTask);\\r\\n  String lastWriteNum =\\r\\n          String.format(\\"%s_%s\\", Metrics.LAST_WRITE_NUM__PREFIX, indexOfSubTask);\\r\\n\\r\\n  accumulatorCollector =\\r\\n    new AccumulatorCollector(\\r\\n      context,\\r\\n      Arrays.asList(\\r\\n        Metrics.NUM_READS,\\r\\n        Metrics.READ_BYTES,\\r\\n        Metrics.READ_DURATION,\\r\\n        Metrics.WRITE_BYTES,\\r\\n        Metrics.NUM_WRITES,\\r\\n        lastWriteLocation,\\r\\n        lastWriteNum));\\r\\n  accumulatorCollector.start();\\r\\n}\\r\\n```\\r\\n\\r\\n\u4ece\u4ee3\u7801\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c**accumulatorCollector\u548cintputMetric\u4ee5\u53caformatState\u6700\u5927\u7684\u4e0d\u540c\u662f\u5b83\u5305\u542b\u8bfb\u548c\u51992\u65b9\u9762\u7684\u6307\u6807\uff0c\u800c\u540e\u4e24\u8005\u5355\u72ec\u53ea\u662f\u8bfb\u76f8\u5173\u6307\u6807**\uff0c\u800cstart\u65b9\u6cd5\u4f1a\u542f\u52a8\u7ebf\u7a0b\u6c60\u5468\u671f\u6027\u5730\u6536\u96c6\u6307\u6807\u3002\\r\\n\\r\\n### \u6536\u96c6\u6307\u6807\\r\\n\\r\\nAccumulatorCollector\u4f7f\u7528ScheduledExecutorService\u7ebf\u7a0b\u6c60\uff0c\u6bcf\u6b21\u53ea\u542f\u52a8\u4e00\u4e2a\u7ebf\u7a0b\uff0cstart\u65b9\u6cd5\u8c03\u7528\u540e\u7ebf\u7a0b\u6c60\u4ee5\u56fa\u5b9a\u95f4\u9694(TaskManager\u5fc3\u8df3\u52a01\u79d2)\u8fd0\u884ccollectAccumulator\u65b9\u6cd5\u6536\u96c6\u6307\u6807\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\\r\\n\\r\\n```java\\r\\npublic void collectAccumulator() {\\r\\n  CompletableFuture<ArchivedExecutionGraph> archivedExecutionGraphFuture =\\r\\n    gateway.requestJob(Time.seconds(10));\\r\\n  ArchivedExecutionGraph archivedExecutionGraph;\\r\\n  try {\\r\\n    archivedExecutionGraph = archivedExecutionGraphFuture.get();\\r\\n  } catch (Exception e) {\\r\\n    // \u9650\u5236\u6700\u5927\u51fa\u9519\u6b21\u6570\uff0c\u8d85\u8fc7\u6700\u5927\u6b21\u6570\u5219\u4f7f\u4efb\u52a1\u5931\u8d25\uff0c\u5982\u679c\u4e0d\u5931\u8d25\uff0c\u7edf\u8ba1\u6570\u636e\u6ca1\u6709\u53ca\u65f6\u66f4\u65b0\uff0c\u4f1a\u5f71\u54cd\u901f\u7387\u9650\u5236\uff0c\u9519\u8bef\u63a7\u5236\u7b49\u529f\u80fd\\r\\n    collectErrorTimes++;\\r\\n    if (collectErrorTimes > MAX_COLLECT_ERROR_TIMES) {\\r\\n      // \u4e3b\u52a8\u5173\u95ed\u7ebf\u7a0b\u548c\u8d44\u6e90\uff0c\u9632\u6b62\u5f02\u5e38\u60c5\u51b5\u4e0b\u6ca1\u6709\u5173\u95ed\\r\\n      close();\\r\\n      throw new RuntimeException(\\r\\n        \\"The number of errors in updating statistics data exceeds the maximum limit of 100 times. To ensure the correctness of the data, the task automatically fails\\");\\r\\n    }\\r\\n    return;\\r\\n  }\\r\\n  StringifiedAccumulatorResult[] accumulatorResult =\\r\\n    archivedExecutionGraph.getAccumulatorResultsStringified();\\r\\n  for (StringifiedAccumulatorResult result : accumulatorResult) {\\r\\n    ValueAccumulator valueAccumulator = valueAccumulatorMap.get(result.getName());\\r\\n    if (valueAccumulator != null) {\\r\\n      valueAccumulator.setGlobal(Long.parseLong(result.getValue()));\\r\\n    }\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n\u53ef\u4ee5\u770b\u5230\uff0caccumulatorCollector\u7684\u6536\u96c6\u6307\u6807\u662f\u6574\u4e2aFlink\u4f5c\u4e1a\u7684\u6570\u636e\uff0c\u800c\u4e0d\u662f\u67d0\u4e2a\u5b50\u4efb\u52a1\u7684\u6307\u6807\uff0c\u8fd9\u4e9b\u5168\u5c40\u6027\u6307\u6807\u6570\u636e\u662f\u5b9e\u73b0\u6d41\u91cf\u63a7\u5236\u7684\u5173\u952e\u57fa\u7840\u3002\\r\\n\\r\\n### \u83b7\u53d6\u6307\u6807\\r\\n\\r\\nFlinkX\u4f7f\u7528ValueAccumulator\u8868\u793a\u7d2f\u52a0\u6307\u6807\uff0c\u5b83\u5305\u542b\u4e24\u4e2a2\u5b57\u6bb5\uff1alocal\u8868\u793a\u672c\u5730(InputFormat\u5b9e\u4f8b)\u7684\u6307\u6807\uff0cglobal\u8868\u793a\u5168\u5c40(Flink\u4f5c\u4e1a)\u7684\u6307\u6807\u3002\u76f8\u5e94\u5730\u5206\u522b\u67092\u4e2a\u83b7\u53d6\u6307\u6807\u65b9\u6cd5\uff1a\\r\\n\\r\\n```java\\r\\n// \u83b7\u53d6\u5168\u5c40\u6307\u6807\u503c\\r\\npublic long getAccumulatorValue(String name, boolean needWaited) {\\r\\n  if (needWaited) {\\r\\n    try {\\r\\n      TimeUnit.MILLISECONDS.wait(this.period);\\r\\n    } catch (InterruptedException e) {\\r\\n      LOG.warn(\\r\\n        \\"Interrupted when waiting for valueAccumulatorMap, e = {}\\",\\r\\n        ExceptionUtil.getErrorMessage(e));\\r\\n    }\\r\\n  }\\r\\n  ValueAccumulator valueAccumulator = valueAccumulatorMap.get(name);\\r\\n  if (valueAccumulator == null) {\\r\\n    return 0;\\r\\n  }\\r\\n  return valueAccumulator.getGlobal();\\r\\n}\\r\\n\\r\\npublic long getLocalAccumulatorValue(String name) {\\r\\n    ValueAccumulator valueAccumulator = valueAccumulatorMap.get(name);\\r\\n    if (valueAccumulator == null) {\\r\\n      return 0;\\r\\n    }\\r\\n    return valueAccumulator.getLocal().getLocalValue();\\r\\n}\\r\\n```\\r\\n\\r\\n\u6ce8\u610f\u83b7\u53d6\u5168\u5c40\u6307\u6807\u65f6\u989d\u5916\u52a0\u4e86\u4e2aneedWaited\u53c2\u6570\uff0c\u8bbe\u7f6e\u4e3atrue\u8868\u793a\u83b7\u53d6\u6700\u65b0\u4e00\u6b21\u7edf\u8ba1\u7684\u6570\u503c\u3002\\r\\n\\r\\n## ByteRateLimiter\\r\\n\\r\\nFlinkX\u4f7f\u7528ByteRateLimiter\u5bf9InputFormat\u7684\u8bfb\u53d6\u5b57\u8282\u901f\u7387\u8fdb\u884c\u9650\u5236\uff0c\u5176\u672c\u8d28\u662fRateLimiter\u548c\u4e00\u4e2a**\u5355\u7ebf\u7a0b\u6c60**\u7684\u5c01\u88c5\u3002\\r\\n\\r\\n### \u521d\u59cb\u5316\u4e0e\u542f\u52a8\\r\\n\\r\\nBaseRichInputFormat\u7c7b\u7684open\u65b9\u6cd5\u8c03\u7528initByteRateLimiter\u65b9\u6cd5\u521d\u59cb\u5316ByteRateLimiter\uff0c\u540e\u8005\u4ee3\u7801\u5982\u4e0b\uff1a\\r\\n\\r\\n```java\\r\\nprivate void initByteRateLimiter() {\\r\\n  if (config.getSpeedBytes() > 0) {\\r\\n      this.byteRateLimiter =\\r\\n        new ByteRateLimiter(accumulatorCollector, config.getSpeedBytes());\\r\\n      this.byteRateLimiter.start();\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\nByteRateLimiter\u7684\u6784\u9020\u65b9\u6cd5\u4f20\u51652\u4e2a\u53c2\u6570\uff1a\u7b2c\u4e00\u4e2a\u662f\u6307\u6807\u7d2f\u8ba1\u5668\u6536\u96c6\u5668\uff0c\u901a\u8fc7\u5176\u63d0\u4f9b\u7684\u8bfb\u53d6\u5b57\u8282\u603b\u91cf\u548c\u8bfb\u53d6\u8bb0\u5f55\u6761\u6570\u8ba1\u7b97\u5f53\u524d\u8bfb\u53d6\u8bfb\u53d6\u901f\u7387\uff0c\u56e0\u6b64initByteRateLimiter\u65b9\u6cd5\u5fc5\u987b\u5728initStatisticsAccumulator\u4e4b\u540e\u8c03\u7528\uff1b\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u4f5c\u4e1a\u914d\u7f6e\u7684\u9650\u6d41\u5927\u5c0f\u3002\u63a5\u7740\u8c03\u7528start\u65b9\u6cd5\uff0c\u542f\u52a8\u7ebf\u7a0b\u6c60\u8fd0\u884c\u4e00\u4e2a\u8ba1\u7b97\u8bfb\u53d6\u901f\u7387\u7684\u7ebf\u7a0b\u3002\\r\\n\\r\\n### \u66f4\u65b0\u8bfb\u53d6\u901f\u7387\\r\\n\\r\\n\u540c\u6837\u5730\uff0cByteRateLimiter\u4f7f\u7528ScheduledExecutorService\u7ebf\u7a0b\u6c60\uff0c\u6bcf\u6b21\u53ea\u542f\u52a8\u4e00\u4e2a\u7ebf\u7a0b\uff0cstart\u65b9\u6cd5\u8c03\u7528\u540e\u7ebf\u7a0b\u6c60\u4ee5\u56fa\u5b9a\u95f4\u9694(1\u79d2)\u8fd0\u884cupdateRate\u65b9\u6cd5\u66f4\u65b0\u8bfb\u53d6\u901f\u7387\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\\r\\n\\r\\n```java\\r\\nprivate void updateRate() {\\r\\n  // \u5168\u5c40\u8bfb\u53d6\u5b57\u8282\u603b\u6570\\r\\n  long totalBytes = accumulatorCollector.getAccumulatorValue(Metrics.READ_BYTES, false);\\r\\n  // \u5f53\u524d\u5b50\u4efb\u52a1\u793a\u4f8b\u8bfb\u53d6\u7eaa\u5f55\u6570\\r\\n  long thisRecords = accumulatorCollector.getLocalAccumulatorValue(Metrics.NUM_READS);\\r\\n  // \u5168\u5c40\u8bfb\u53d6\u8bb0\u5f55\u6570\\r\\n  long totalRecords = accumulatorCollector.getAccumulatorValue(Metrics.NUM_READS, false);\\r\\n\\r\\n  // \u8bfb\u53d6\u5360\u6bd4\\r\\n  BigDecimal thisWriteRatio =\\r\\n    BigDecimal.valueOf(totalRecords == 0 ? 0 : thisRecords / (double) totalRecords);\\r\\n\\r\\n  // \u81f3\u5c11\u8fbe\u52301000\u6761\u3001\u8bfb\u53d6\u5b57\u8282\u91cf\u4e0d\u4e3a0\u3001\u5f53\u524d\u4efb\u52a1\u6709\u8bfb\u53d6\u8bb0\u5f55\u65f6\u624d\u66f4\u65b0\\r\\n  if (totalRecords > MIN_RECORD_NUMBER_UPDATE_RATE\\r\\n        && totalBytes != 0\\r\\n        && thisWriteRatio.compareTo(BigDecimal.ZERO) != 0) {\\r\\n    // \u5f53\u524d\u5b57\u8282\u901f\u7387\\r\\n    double bpr = totalBytes / (double) totalRecords;\\r\\n    // \u5f53\u524d\u9650\u5b9a\u5b57\u8282\u901f\u7387=\u7ed9\u5b9a\u9650\u5236\u901f\u7387 / \u5f53\u524d\u5b57\u8282\u901f\u7387 * \u8bfb\u53d6\u5360\u6bd4\\r\\n    double permitsPerSecond = expectedBytePerSecond / bpr * thisWriteRatio.doubleValue();\\r\\n    rateLimiter.setRate(permitsPerSecond);\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n### \u9650\u6d41\u4f7f\u7528\\r\\n\\r\\nByteRateLimiter\u672c\u8d28\u4f7f\u7528Flink\u63d0\u4f9b\u7684RateLimiter\u4f5c\u4e3a\u9650\u6d41\u5668\u5b9e\u73b0\uff0c\u540e\u8005\u6765\u81eaGuava\u5de5\u5177\u5305\u3002RateLimiter\u7684\u57fa\u672c\u4f7f\u7528\u5982\u4e0b\u4ee3\u7801\u6240\u793a\uff0c\u7b2c\u4e00\u6b65\u901a\u8fc7create(double permitsPerSecond)\u9759\u6001\u65b9\u6cd5\u6784\u9020RateLimiter\u5bf9\u8c61\uff0c\u8868\u793a\u6bcf\u79d2\u949f\u4e0d\u80fd\u83b7\u53d6\u8d85\u8fc7permitsPerSecond\u4e2a\u4ee4\u724c\uff0c\u7b2c\u4e8c\u6b65\u5728\u5f00\u59cb\u5de5\u4f5c\u524d\u8c03\u7528**\u540c\u4e00\u4e2aRateLimiter\u5bf9\u8c61**\u7684acquire(int permit)\u65b9\u6cd5\u8868\u83b7\u53d6permit\u4e2a\u4ee4\u724c\u3010\u6ce8\uff1aacquire()\u7b49\u6548\u4e8eacquire(1)\u3011\uff0cacquire\u65b9\u6cd5\u5c06\u4f1a\u963b\u585e\u76f4\u5230\u6709\u53ef\u7528permit\uff0c\u7531\u6b64\u5b9e\u73b0\u9650\u6d41\u3002\\r\\n\\r\\n```java\\r\\n// rate is \\"2 permits per second\\"\\r\\nfinal RateLimiter rateLimiter = RateLimiter.create(2.0);\\r\\nvoid submitTasks(List<Runnable> tasks, Executor executor) {\\r\\n  for (Runnable task : tasks) {\\r\\n    rateLimiter.acquire(); // may wait\\r\\n    executor.execute(task);\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\nBaseRichInputFormat\u7684nextRecord\u65b9\u6cd5\u4e2d\u83b7\u53d6\u4e0b\u6761\u8bb0\u5f55\u524d\uff0c\u5148\u8c03\u7528byteRateLimiter.acquire()\u5c1d\u8bd5\u83b7\u53d6\uff0c\u5982\u679c\u8d85\u8fc7\u7279\u5b9a\u9891\u7387\u5219acquire()\u65b9\u6cd5\u963b\u585e\u76f4\u5230\u5408\u9002\u65f6\u95f4\uff0c\u7531\u6b64\u5b9e\u73b0InputFormat\u8bfb\u53d6\u901f\u7387\u7684\u9650\u5236\u3002\u901a\u8fc7\u4ee3\u7801\u5f97\u5230\u5982\u4e0bpermitsPerSecond\u8ba1\u7b97\u516c\u5f0f\uff1a\\r\\n\\r\\n$$\\\\begin{matrix}\\r\\npermit &= configBytePerSecond \\\\div \\\\frac{totalBytes}{totalRecords} \\\\times \\\\frac{localRecords}{totalRecords}\\\\\\\\\\r\\n&= configBytePerSecond \\\\times \\\\frac{totalRecords}{totalBytes} \\\\times \\\\frac{localRecords}{totalRecords}\\\\\\\\\\r\\n&= configBytePerSecond \\\\times \\\\frac{localRecords}{totalBytes}\\\\\\\\\\r\\n&= \\\\frac{totalBytes}{second} \\\\times \\\\frac{localRecords}{totalBytes}\\\\\\\\\\r\\n&= \\\\frac{localRecords}{second}\\r\\n\\\\end{matrix}\\r\\n$$\\r\\n\\r\\n\u7ecf\u8fc7\u5982\u4e0a\u516c\u5f0f\u8f6c\u6362\u53ef\u77e5\uff0c\u8ba1\u7b97\u5f97\u5230\u7684permit\u542b\u4e49\u662f\u6bcf\u79d2\u6700\u5927\u8bfb\u53d6\u8bb0\u5f55\u6761\u6570\uff0c\u56e0\u6b64\u4f7f\u7528acquire(1)\u800c\u4e0d\u662facquire(localBytes)\u3002\u540c\u65f6FlinkX\u6839\u636e\u5f53\u524d\u5b50\u4efb\u52a1\u5b9e\u4f8b\u5728\u5168\u5c40\u6d41\u91cf\u7684\u5360\u6bd4\u6765\u8bbe\u7f6erate\uff0c\u8fd9\u6837\u5b9e\u73b0\u7684\u6d41\u91cf\u63a7\u5236\u662f\u9762\u5411\u5168\u5c40\u7684\u800c\u4e0d\u662f\u9488\u5bf9\u5f53\u524d\u5b50\u4efb\u52a1\u3002"},{"id":"/2022/06/16/FlinkX-Source-Code-Dissection-04","metadata":{"permalink":"/blog/2022/06/16/FlinkX-Source-Code-Dissection-04","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2022/06/16-FlinkX-Source-Code-Dissection-04.md","source":"@site/blog/2022/06/16-FlinkX-Source-Code-Dissection-04.md","title":"FlinkX\u6e90\u7801\u5256\u6790(4)","description":"FlinkX\u6e90\u7801\u5256\u6790(4)","date":"2022-06-16T00:00:00.000Z","formattedDate":"June 16, 2022","tags":[{"label":"FlinkX","permalink":"/blog/tags/flink-x"},{"label":"Source code dissection","permalink":"/blog/tags/source-code-dissection"}],"readingTime":11.61,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"FlinkX\u6e90\u7801\u5256\u6790(4)","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["FlinkX","Source code dissection"],"description":"FlinkX\u6e90\u7801\u5256\u6790(4)","hide_table_of_contents":false},"prevItem":{"title":"FlinkX\u6e90\u7801\u5256\u6790(5)","permalink":"/blog/2022/06/21/FlinkX-Source-Code-Dissection-05"},"nextItem":{"title":"FlinkX\u6e90\u7801\u5256\u6790(3)","permalink":"/blog/2022/06/12/FlinkX-Source-Code-Dissection-03"}},"content":"\u4e0a\u4e00\u7bc7\u6587\u7ae0\u5206\u6790\u4e86DtOutputFormatSinkFunction\uff0c\u5176run\u65b9\u6cd5\u672c\u8d28\u8fd8\u662f\u8c03\u7528InputFormat.nextRecord\u751f\u6210\u8f93\u51fa\u8bb0\u5f55\u3002\u7531\u4e8eFlinkX\u8fde\u63a5\u5668\u63d2\u4ef6\u7684xxxInputFormat\u90fd\u7ee7\u627f\u81ea\u5b9a\u4e49\u7684BaseRichInputFormat\u7c7b(\u7ee7\u627f\u5173\u7cfb\u5982\u4e0b\u56fe\u6240\u793a)\uff0c\u8fd9\u7bc7\u6587\u7ae0\u7ee7\u7eed\u6309\u7167\u8be5\u56fe\u4ece\u4e0a\u5230\u4e0b\u5730\u89e3\u6790\u6e90\u7801\u3002\\r\\n\\r\\n![BaseRichInputFormat](/img/blog/FlinkXDissection/BaseRichInputFormat.png)\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## InputSplit\\r\\n\\r\\nInputFormat\u5e76\u4e0d\u662f\u4e00\u80a1\u8111\u5730\u8f93\u51fa\u6240\u6709\u8bb0\u5f55\uff0c\u800c\u662f\u6309\u7167\u67d0\u79cd\u903b\u8f91\u5212\u5206\u4e3asplit(\u5206\u7247)\uff0c\u53ea\u8d1f\u8d23\u5206\u914d\u5230\u81ea\u5df1\u7684split\u3002\u987e\u540d\u601d\u4e49\uff0cInputSplit\u662f\u5212\u5206\u7ed9InputFormat\u7684split\u7684\u57fa\u672c\u62bd\u8c61\uff0c\u8be5\u63a5\u53e3**\u53ea\u5b9a\u4e49\u4e86\u4e00\u4e2a\u65b9\u6cd5getSplitNumber**\uff0c\u7528\u4e8e\u8fd4\u56desplit\u7684\u5e8f\u53f7\uff1a\\r\\n\\r\\n```java\\r\\npublic interface InputSplit extends Serializable {\\r\\n  int getSplitNumber();\\r\\n}\\r\\n```\\r\\n\\r\\n## InputSplitSource\\r\\n\\r\\nInputSplitSource**\u6cdb\u578b\u63a5\u53e3**\u662f\u521b\u5efaInputSplit\u7684\u62bd\u8c61\u8868\u8fbe\uff0c\u6e90\u7801\u5982\u4e0b\uff1a\\r\\n\\r\\n```java\\r\\npublic interface InputSplitSource<T extends InputSplit> extends Serializable {\\r\\n\\r\\n  T[] createInputSplits(int minNumSplits) throws Exception;\\r\\n  \\r\\n  InputSplitAssigner getInputSplitAssigner(T[] inputSplits);\\r\\n\\r\\n}\\r\\n```\\r\\n\\r\\n- `T[] createInputSplits(int minNumSplits) throws Exception`\\r\\n\\r\\n\u521b\u5efa\u4e0d\u5c11\u4e8eminNumSplits\u4e2a\u7684InputSplit\uff0c\u8fd4\u56de\u6570\u7ec4\u3002\\r\\n\\r\\n- `InputSplitAssigner getInputSplitAssigner(T[] inputSplits)`\\r\\n\\r\\n\u4f20\u5165InputSplit\u6570\u7ec4\uff0c\u8fd4\u56de\u5b89\u6392\u54ea\u4e9bInputSplit\u5230\u54ea\u4e9bInputFormat\u7684\u5206\u914d\u5668InputSplitAssigner\uff0c\u8fd9\u91cc\u53c8\u5f15\u51fa\u4e86\u4e00\u4e2a\u65b0\u63a5\u53e3\u3002\\r\\n\\r\\n### InputSplitAssigner\\r\\n\\r\\nInputSplitAssigner\u8d1f\u8d23\u5c06InputSplit\u5206\u914d\u5230\u6570\u636e\u6e90\u7684\u4e0d\u540c\u5b9e\u4f8b\uff0c\u5b9a\u4e49\u4e86\u5982\u4e0b2\u4e2a\u65b9\u6cd5\uff1a\\r\\n\\r\\n- `InputSplit getNextInputSplit(String host, int taskId)`\\r\\n\\r\\n\u8fd4\u56de\u6307\u5b9aid\u4efb\u52a1\u7684\u4e0b\u4e00\u4e2aInputSplit\uff0c\u5982\u679c\u6ca1\u6709\u5219\u8fd4\u56denull\u3002**\u6ce8\u610f\u8fd9\u91cc\u4e5f\u5c06\u4efb\u52a1\u793a\u4f8b\u6240\u5904ip\u4e5f\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\uff0c\u4ece\u800c\u5b9e\u73b0\u672c\u5730\u5206\u914d\u3002**\\r\\n\\r\\n- `void returnInputSplit(List<InputSplit> splits, int taskId)`\\r\\n\\r\\n**\u5931\u8d25\u56de\u8c03\u65b9\u6cd5**\uff0c\u7531\u6307\u5b9aid\u7684\u4efb\u52a1\u901a\u77e5InputSplitAssigner\u54ea\u4e9bInputSplits\u5b83\u5904\u7406\u5931\u8d25\u4e86\u3002\\r\\n\\r\\n## InputFormat\\r\\n\\r\\nSourceFunction\u662fFlink**\u6d41**\u6570\u636e\u6e90\u7684\u57fa\u672c\u63a5\u53e3\uff0c\u800cInputFormat\u63a5\u53e3\u662f**\u751f\u6210\u8bb0\u5f55\u7684\u6570\u636e\u6e90\u7684\u57fa\u672c\u63a5\u53e3**(\u6765\u81ea\u6e90\u7801\u6ce8\u91ca\uff0c\u6709\u70b9\u54ac\u6587\u56bc\u5b57\u4e86)\uff0c\u540e\u8005\u8d1f\u8d23\u5982\u4e0b\u529f\u80fd\uff1a\\r\\n\\r\\n- \u63cf\u8ff0\u5982\u4f55\u5c06input\u5206\u6210split\uff1b\\r\\n- \u63cf\u8ff0\u5982\u4f55\u4ecesplit\u4e2d\u8bfb\u53d6\u8bb0\u5f55\uff1b\\r\\n- \u63cf\u8ff0\u5982\u4f55\u4eceinput\u4e2d\u6536\u96c6\u7edf\u8ba1\u6307\u6807\u3002\\r\\n\\r\\n\u5177\u4f53\u5730\uff0cInputFormat\u751f\u547d\u5468\u671f\u5982\u4e0b\uff1a\\r\\n\\r\\n1. \u901a\u8fc7\u65e0\u53c2\u6784\u9020\u5668\u5b9e\u4f8b\u5316\uff0c\u7531configure\u65b9\u6cd5\u8fdb\u884c\u914d\u7f6e\uff1b\\r\\n2. [\u53ef\u9009]\u751f\u6210\u57fa\u672c\u7edf\u8ba1\u6307\u6807\uff1b\\r\\n3. \u751f\u6210InputSplit\uff1b\\r\\n4. \u6bcf\u4e2a\u5e76\u884c\u4efb\u52a1\u521b\u5efa\u4e00\u4e2aInputFormat\u5b9e\u4f8b\uff0c\u6839\u636e\u6307\u5b9asplit\u914d\u7f6e\u3001\u6253\u5f00\u5b9e\u4f8b\uff1b\\r\\n5. \u4eceInputFormat\u4e2d\u8bfb\u53d6\u8bb0\u5f55\uff1b\\r\\n6. \u5173\u95edInputFormat\u3002\\r\\n\\r\\n:::caution \u6ce8\u610f\\r\\nInputFormat\u793a\u4f8b\u5173\u95ed\u540e\u5fc5\u987b\u80fd\u591f\u91cd\u65b0\u6253\u5f00\uff0c\u56e0\u4e3a\u8be5\u793a\u4f8b\u8d1f\u8d23\u5904\u7406**\u591a\u4e2a**split\u3002\u5f53\u5904\u7406\u5b8c\u4e00\u4e2asplit\u540e\uff0cInputFormat\u7684close\u65b9\u6cd5\u88ab\u8c03\u7528\uff0c\u5982\u679c\u6709\u4e0b\u4e00\u4e2asplit\u5f85\u5904\u7406\uff0c\u91cd\u65b0\u8c03\u7528open\u65b9\u6cd5\u6253\u5f00\u3002\\r\\n:::\\r\\n\\r\\nInputFormat**\u6cdb\u578b**\u63a5\u53e3\u7b7e\u540d\u5982\u4e0b\uff0c\u6cdb\u578b\u53c2\u6570OT\u8868\u793a\u8f93\u51fa\u7c7b\u578b\uff0cT\u8868\u793aInputSplit\u7c7b\u578b\u3002\\r\\n\\r\\n```java\\r\\npublic interface InputFormat<OT, T extends InputSplit> \\r\\n  extends InputSplitSource<T>, Serializable {\\r\\n    ...\\r\\n}\\r\\n```\\r\\n\\r\\nInputFormat\u63a5\u53e3\u58f0\u660e\u5982\u4e0b\u65b9\u6cd5\uff1a\\r\\n\\r\\n- `void configure(Configuration parameters)`\\r\\n\\r\\n\u7531\u4e8eInputFormat\u901a\u8fc7\u65e0\u53c2\u6784\u9020\u5668\u5b9e\u4f8b\u5316\uff0c\u9700\u8981\u901a\u8fc7Configuration\u63d0\u4f9b\u57fa\u672c\u7684\u914d\u7f6e\uff0c\u8be5\u65b9\u6cd5\u5728InputFormat\u5b9e\u4f8b\u5316\u540e\u7acb\u5373\u8c03\u7528\u3002\\r\\n\\r\\n- `BaseStatistics getStatistics(BaseStatistics cachedStatistics) throws IOException`\\r\\n\\r\\n\u4f20\u5165\u7f13\u5b58\u7edf\u8ba1\u503c\uff0c\u8fd4\u56de\u6700\u65b0\u7edf\u8ba1\u503c\u3002\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56denull\u6216\u8005cachedStatistics\uff0c\u4fdd\u8bc1\u5728configure\u65b9\u6cd5\u4e4b\u540e\u8c03\u7528\u3002\\r\\n\\r\\n- `T[] createInputSplits(int minNumSplits) throws IOException`\\r\\n- `InputSplitAssigner getInputSplitAssigner(T[] inputSplits)`\\r\\n\\r\\n\u7ee7\u627f\u81eaInputSplitSource\u63a5\u53e3\u7684\u65b9\u6cd5\uff0c\u89c1[InputSplitSource](#inputsplitsource)\u3002\\r\\n\\r\\n- `void open(T split) throws IOException`\\r\\n\\r\\n\u6839\u636e\u6307\u5b9asplit\u5206\u7247\u6253\u5f00\u4e00\u4e2a\u5e76\u884cInputFormat\u793a\u4f8b\uff0c\u4fdd\u8bc1\u5728configure\u65b9\u6cd5\u4e4b\u540e\u8c03\u7528\u3002\\r\\n\\r\\n- `boolean reachedEnd() throws IOException`\\r\\n\\r\\n\u68c0\u67e5\u5f53\u524dsplit\u5904\u7406\u662f\u5426\u5df2\u7ecf\u5b8c\u6bd5\uff0c\u4fdd\u8bc1\u5728configure\u65b9\u6cd5\u4e4b\u540e\u8c03\u7528\u3002\\r\\n\\r\\n- `OT nextRecord(OT reuse) throws IOException`\\r\\n\\r\\n\u8f93\u51fa\u4e0b\u4e00\u6761\u8bb0\u5f55\uff0c\u4fdd\u8bc1\u5728configure\u65b9\u6cd5\u4e4b\u540e\u8c03\u7528\u3002\\r\\n\\r\\n- `void close() throws IOException`\\r\\n\\r\\n\u5f53\u524dsplit\u5904\u7406\u5b8c\u6bd5\u540e\u8c03\u7528\uff0c\u7528\u4e8e\u5173\u95ed\u901a\u9053\u3001\u91ca\u653e\u8d44\u6e90\u3002\u53ea\u6709\u5f53\u8be5\u65b9\u6cd5\u6210\u529f\u8fd4\u56de\u540e\uff0cInputFormat\u624d\u7b97\u6b63\u786e\u8bfb\u53d6\u8bb0\u5f55\u3002\\r\\n\\r\\n### BaseStatistics\\r\\n\\r\\nBaseStatistics\u662fInputFormat\u57fa\u672c\u7edf\u8ba1\u6307\u6807\u7684\u62bd\u8c61\u63a5\u53e3\uff0c\u58f0\u660e\u5982\u4e0b\u65b9\u6cd5\uff1a\\r\\n\\r\\n- `public long getTotalInputSize()`\\r\\n\\r\\n\u83b7\u53d6InputFormat\u603b\u5171\u8f93\u51fa\u7684\u6570\u636e\u5927\u5c0f(\u5355\u4f4d\uff1a\u5b57\u8282)\u3002\\r\\n\\r\\n- `public long getNumberOfRecords()`\\r\\n\\r\\n\u83b7\u53d6InputFormat\u603b\u5171\u8f93\u51fa\u7684\u8bb0\u5f55\u6761\u6570\u3002\\r\\n\\r\\n- `public float getAverageRecordWidth()`\\r\\n\\r\\n\u83b7\u53d6InputFormat\u5e73\u5747\u8f93\u51fa\u7684\u8bb0\u5f55\u5927\u5c0f(\u5355\u4f4d\uff1a\u5b57\u8282)\u3002\\r\\n\\r\\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u7edf\u8ba1\u6307\u6807\u65b9\u6cd5\u8fd4\u56de\u57fa\u672c\u7c7b\u578b\u800c\u4e0d\u662f\u5305\u88c5\u7c7b\uff0c\u56e0\u6b64\u4e0d\u80fd\u8fd4\u56denull\u8868\u793a\u8be5\u6307\u6807\u65e0\u6cd5\u7edf\u8ba1\uff0cBaseStatistics\u5185\u5b9a\u4e49\u4e86\u5982\u4e0b\u5e38\u91cf\u6765\u8868\u793a\u8fd9\u79cd\u60c5\u51b5\uff1a\\r\\n\\r\\n```java\\r\\n/** Constant indicating that the input size is unknown. */\\r\\n@PublicEvolving public static final long SIZE_UNKNOWN = -1;\\r\\n\\r\\n/** Constant indicating that the number of records is unknown; */\\r\\n@PublicEvolving public static final long NUM_RECORDS_UNKNOWN = -1;\\r\\n\\r\\n/** Constant indicating that average record width is unknown. */\\r\\n@PublicEvolving public static final float AVG_RECORD_BYTES_UNKNOWN = -1.0f;\\r\\n```\\r\\n\\r\\n:::tip\\r\\nBaseStatistics\u7684\u6e90\u7801\u6ce8\u91ca\u4e3a*Interface describing the basic statistics that can be obtained from the input*\uff0c\u67e5\u770bOutputFormat\u6e90\u7801\u53d1\u73b0\u5b83\u6ca1\u6709\u58f0\u660egetStatistics\u65b9\u6cd5\uff0c\u54ea\u4e3a\u4ec0\u4e48OutputFormat\u6ca1\u6709\u6307\u6807\u7edf\u8ba1\u65b9\u6cd5\uff1f\\r\\n:::\\r\\n\\r\\n## RichInputFormat\\r\\n\\r\\nRichInputFormat**\u62bd\u8c61\u7c7b**\u5b9e\u73b0InputFormat\u63a5\u53e3(\u4f46\u6ca1\u6709\u5b9e\u73b0\u5176\u4efb\u4f55\u65b9\u6cd5)\uff0c\u901a\u8fc7\u6dfb\u52a0runtimeContext\u5b57\u6bb5\u5b9e\u73b0\u5bf9\u8fd0\u884c\u4e0a\u4e0b\u6587\u73af\u5883\u7684\u8bbf\u95ee(\u5373Rich\u7684\u542b\u4e49)\uff0c\u5e76\u989d\u5916\u6dfb\u52a0\u5982\u4e0b\u65b9\u6cd5\uff1a\\r\\n\\r\\n- `public void setRuntimeContext(RuntimeContext t)`\\r\\n- `public RuntimeContext getRuntimeContext()`\\r\\n\\r\\n\u8fd0\u884c\u65f6\u4e0a\u4e0b\u6587\u7684setter\u548cgetter\u65b9\u6cd5\\r\\n\\r\\n- `public void openInputFormat() throws IOException`\\r\\n\\r\\n\u6253\u5f00InputFormat\u5b9e\u4f8b\uff0c**\u4ec5\u5728\u6bcf\u4e2a\u5e76\u884cformat\u5b9e\u4f8b\u4e0a\u8c03\u7528\u4e00\u6b21\uff0c\u7528\u4e8e\u5206\u914d\u8d44\u6e90\uff0c\u6bd4\u5982\u6570\u636e\u5e93\u8fde\u63a5\u7b49**\u3002\u65b9\u6cd5\u4f53\u4e3a\u7a7a\uff0c\u7531\u5b50\u7c7b\u5b9e\u73b0\u3002\\r\\n\\r\\n- `public void closeInputFormat() throws IOException`\\r\\n\\r\\n\u5173\u95edInputFormat\u5b9e\u4f8b\uff0c**\u4ec5\u5728\u6bcf\u4e2a\u5e76\u884cformat\u5b9e\u4f8b\u4e0a\u8c03\u7528\u4e00\u6b21\uff0c\u7528\u4e8e\u5173\u95edopenInputFormat\u4e2d\u7684\u8d44\u6e90**\u3002\u65b9\u6cd5\u4f53\u4e3a\u7a7a\uff0c\u7531\u5b50\u7c7b\u5b9e\u73b0\u3002\\r\\n\\r\\n### InputFormat\u5bf9\u6bd4RichInputFormat\\r\\n\\r\\n1. \u4ece\u7ee7\u627f\u5173\u7cfb\u4e0a\u770b\uff0cRichInputFormat\u62bd\u8c61\u7c7b\u5b9e\u73b0\u4e86InputFormat\u63a5\u53e3\uff1b\\r\\n2. \u4ece\u529f\u80fd\u7279\u6027\u4e0a\u770b\uff0cRichInputFormat\u5f15\u5165runtimeContext\u5b57\u6bb5\uff0c\u5e76\u901a\u8fc7setter/getter\u65b9\u6cd5\u5b9e\u73b0\u8fd0\u884c\u73af\u5883\u7684\u8bbf\u95ee\uff1b\u800cInputFormat\u63a5\u53e3**\u4e0d\u5177\u5907**\u8fd9\u79cdRich\u7279\u6027\uff1b\\r\\n3. \u4ece\u58f0\u660e\u65b9\u6cd5\u4e0a\u770b\uff0cRichInputFormat\u7ee7\u627f\u4e86InputFormat\u6240\u6709\u65b9\u6cd5\uff0c\u4f46\u90fd\u6ca1\u6709\u5b9e\u73b0\uff1b\u76f8\u53cd\uff0c\u8fd8\u81ea\u884c\u5f15\u5165\u4e86openInputFormat\u548ccloseInputFormat\u65b9\u6cd5\u3002\\r\\n\\r\\n:::tip\\r\\nInputFormat\u7684open/close\u65b9\u6cd5\u5904\u7406\u5bf9\u8c61\u662fInputSplit(\u8303\u56f4\u7684\u62bd\u8c61)\uff0c\u6240\u4ee5open\u65b9\u6cd5\u9700\u8981\u4f20\u5165\u53c2\u6570\uff0c\u800cRichInputFormat\u7684openInputFormat/closeInputFormat\u65b9\u6cd5\u5904\u7406\u5bf9\u8c61\u662f\u6570\u636e\u8d44\u6e90(\u6570\u636e\u5e93\u8fde\u63a5\u7b49)\uff0c\u4e14\u4e24\u4e2a\u65b9\u6cd5\u90fd\u662f\u65e0\u53c2\u3002\\r\\n:::\\r\\n\\r\\n## BaseRichInputFormat\\r\\n\\r\\nBaseRichInputFormat\u662fFlinkX\u4e2d\u6240\u6709\u81ea\u5b9a\u4e49InputFormat\u7684\u62bd\u8c61\u57fa\u7c7b\uff0c\u7ee7\u627f\u81ea`RichInputFormat<RowData, InputSplit>`\uff0c\u56e0\u6b64\u6240\u6709\u8f93\u51fa\u8bb0\u5f55\u7c7b\u578b\u4e3aRowData\u3002\u5b9a\u4e49\u5982\u4e0b\u5b57\u6bb5\u548c\u65b9\u6cd5\uff1a\\r\\n\\r\\n### \u6210\u5458\u53d8\u91cf\\r\\n\\r\\n|\u4fee\u9970\u7b26|\u7c7b\u578b|\u540d\u79f0|\u8bf4\u660e|\\r\\n|-----|----|----|---|\\r\\n|private final|AtomicBoolean|isClosed|\u6807\u5fd7InputFormat\u662f\u5426\u8f93\u51fa\u6240\u6709\u8bb0\u5f55|\\r\\n|protected|StreamingRuntimeContext|context|\u8fd0\u884c\u73af\u5883\uff0c\u672c\u8d28\u662f\u7236\u7c7bRichInputFormat\u7684RuntimeContext\u8f6c\u6362\u800c\u6765|\\r\\n|protected|String|jobName|\u4efb\u52a1\u540d\u79f0\uff0c\u9ed8\u8ba4defaultJobName|\\r\\n|protected|String|jobId|\u4efb\u52a1id|\\r\\n|protected|int|indexOfSubTask|\u5f53\u524d\u4efb\u52a1\u7d22\u5f15|\\r\\n|protected|long|startTime|\u4efb\u52a1\u5f00\u59cb\u65f6\u95f4|\\r\\n|protected|FlinkxCommonConf|config|\u4efb\u52a1\u914d\u7f6e|\\r\\n|protected|AbstractRowConverter|rowConverter|\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u5668|\\r\\n|protected transient|BaseMetric|inputMetric|\u7edf\u8ba1\u6307\u6807\u5bf9\u8c61|\\r\\n|protected transient|CustomReporter|customReporter|\u6307\u6807\u53d1\u5e03\u5668|\\r\\n|protected|AccumulatorCollector|accumulatorCollector|\u7d2f\u52a0\u5668|\\r\\n|protected|FormatState|formatState|\u68c0\u67e5\u70b9\u72b6\u6001\u7f13\u5b58|\\r\\n|protected|LongCounter|numReadCounter|\u8bfb\u53d6\u8bb0\u5f55\u6761\u6570|\\r\\n|protected|LongCounter|bytesReadCounter|\u8bfb\u53d6\u8bb0\u5f55\u5b57\u8282\u6570|\\r\\n|protected|LongCounter|durationCounter|\u8bfb\u53d6\u8bb0\u5f55\u65f6\u957f|\\r\\n|protected|ByteRateLimiter|byteRateLimiter|\u9650\u6d41\u5668|\\r\\n|private|boolean|initialized|BaseRichInputFormat\u662f\u5426\u521d\u59cb\u5316\uff0c\u9ed8\u8ba4false|\\r\\n|protected|List<String\\\\>|columnNameList|\u4efb\u52a1\u914d\u7f6e\u975e\u5e38\u91cf\u5b57\u6bb5\u7684\u540d\u79f0\u5217\u8868|\\r\\n|protected|List<String\\\\>|columnTypeList|\u4efb\u52a1\u914d\u7f6e\u975e\u5e38\u91cf\u5b57\u6bb5\u7684\u7c7b\u578b\u5217\u8868|\\r\\n\\r\\n### \u6210\u5458\u65b9\u6cd5\\r\\n\\r\\n- configure\uff1a\u65b9\u6cd5\u4f53\u8fd8\u662f\u4e3a\u7a7a\uff0c\u6709\u70b9\u9e21\u808b:baby_chick:\uff1b\\r\\n- getStatistics\uff1a\u8fd4\u56denull\uff0c\u7edf\u8ba1\u6307\u6807\u5df2\u7ecf\u5728\u4e0a\u9762\u7684\u5b9a\u4e49\u5b57\u6bb5\u4e2d\u6709\u4e86\uff0c\u8fd9\u91cc\u4e0d\u7528Flink\u63d0\u4f9b\u7684BaseStatistics\u63a5\u53e3\uff1b\\r\\n- createInputSplits\uff1a\u8c03\u7528\u81ea\u5b9a\u4e49\u65b9\u6cd5createInputSplitsInternal\u5b9e\u73b0\uff1b\\r\\n\\r\\n:::info \u63e3\u6d4b\\r\\n\u4e3a\u4ec0\u4e48BaseRichInputFormat\u8981\u81ea\u5df1\u5b9a\u4e49createInputSplitsInternal\u7136\u540ecreateInputSplits\u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u8fd9\u6837\u5305\u4e00\u5c42\u7684\u610f\u4e49\u662f\u4ec0\u4e48\uff1f\u539f\u56e0\u662fFlinkX\u7684JDBC\u8bfb\u63d2\u4ef6\u9700\u8981\u8fde\u63a5\u6570\u636e\u5e93\u67e5\u8be2\uff0c\u5bf9\u4e8e\u53ef\u80fd\u629b\u51fa\u7684SQLException\uff0ccreateInputSplits\u7b7e\u540d\u4e2d\u7684throw IOException\u65e0\u6cd5\u8ba9\u4e0a\u5c42\u4ee3\u7801\u611f\u77e5\uff0c\u6240\u4ee5\u65b0\u589ecreateInputSplitsInternal\u65b9\u6cd5\uff0c\u7b7e\u540d\u4f7f\u7528throw Exception\u3002\\r\\n:::\\r\\n\\r\\n- getInputSplitAssigner\uff1a\u4f7f\u7528Flink\u63d0\u4f9b\u7684DefaultInputSplitAssigner\uff0c\u6309\u7167\u987a\u5e8f\u4f9d\u6b21\u5206\u7ec4\uff1b\\r\\n- open\uff1a\u7ee7\u627f\u81eaInputFormat\u7684\u65b9\u6cd5\uff1b\\r\\n\\r\\n```java\\r\\npublic void open(InputSplit inputSplit) throws IOException {\\r\\n  this.context = (StreamingRuntimeContext) getRuntimeContext();\\r\\n\\r\\n  if (inputSplit instanceof ErrorInputSplit) {\\r\\n    throw new RuntimeException(((ErrorInputSplit) inputSplit).getErrorMessage());\\r\\n  }\\r\\n\\r\\n  // \u4e00\u4e9b\u8f85\u52a9\u5de5\u5177\u7684\u521d\u59cb\u5316\u5de5\u4f5c\uff0c\u5148\u8df3\u8fc7\\r\\n  if (!initialized) {\\r\\n    initAccumulatorCollector();\\r\\n    initStatisticsAccumulator();\\r\\n    initByteRateLimiter();\\r\\n    initRestoreInfo();\\r\\n    initialized = true;\\r\\n  }\\r\\n\\r\\n  openInternal(inputSplit);\\r\\n\\r\\n  LOG.info(\\r\\n    \\"[{}] open successfully, \\\\ninputSplit = {}, \\\\n[{}]: \\\\n{} \\",\\r\\n    this.getClass().getSimpleName(),\\r\\n    inputSplit,\\r\\n    config.getClass().getSimpleName(),\\r\\n    JsonUtil.toPrintJson(config));\\r\\n}\\r\\n```\\r\\n\\r\\nopen\u65b9\u6cd5\u5b8c\u6210\u516c\u5171\u64cd\u4f5c\uff0c\u6bd4\u5982\u7ed9\u81ea\u5df1\u7684context\u5b57\u6bb5\u8d4b\u503c\uff0c\u68c0\u67e5InputSplit\u662f\u5426\u4e3aErrorInputSplit\uff0c\u8fdb\u884c\u521d\u59cb\u5316\u5de5\u4f5c\u5e76\u8bbe\u7f6einitialized\u4e3atrue\uff0c\u6700\u540e\u8c03\u7528\u81ea\u5b9a\u4e49\u65b9\u6cd5openInternal\u5f00\u59cb\u8bfb\u53d6\u8bb0\u5f55\uff0c\u800copenInternal\u62bd\u8c61\u65b9\u6cd5\u53c8\u7531\u5b50\u7c7b\u5b9e\u73b0\u3002\\r\\n\\r\\n- openInputFormat\uff1a\u7ee7\u627f\u81eaRichInputFormat\uff0c\u5b8c\u6210\u90e8\u5206\u5b57\u6bb5\u7684\u521d\u59cb\u5316\u5de5\u4f5c\uff1b\\r\\n\\r\\n```java\\r\\npublic void openInputFormat() throws IOException {\\r\\n    Map<String, String> vars = getRuntimeContext().getMetricGroup().getAllVariables();\\r\\n    if (vars != null) {\\r\\n      jobName = vars.getOrDefault(Metrics.JOB_NAME, \\"defaultJobName\\");\\r\\n      jobId = vars.get(Metrics.JOB_NAME);\\r\\n      indexOfSubTask = Integer.parseInt(vars.get(Metrics.SUBTASK_INDEX));\\r\\n    }\\r\\n\\r\\n    if (useCustomReporter()) {\\r\\n      customReporter =\\r\\n        DataSyncFactoryUtil.discoverMetric(\\r\\n          config, getRuntimeContext(), makeTaskFailedWhenReportFailed());\\r\\n      customReporter.open();\\r\\n    }\\r\\n\\r\\n    startTime = System.currentTimeMillis();\\r\\n}\\r\\n```\\r\\n\\r\\n- nextRecord\uff1a\u901a\u8fc7\u8c03\u7528nextRecordInternal\u8bfb\u53d6\u4e00\u6761\u8bb0\u5f55\uff0c\u7136\u540e\u66f4\u65b0durationCounter\uff1b\\r\\n- close\uff1a\u5173\u95edInputFormat\u7684\u76f8\u5173\u8d44\u6e90\uff0c\u8c03\u7528closeInteral\u5b9e\u73b0\uff1b\\r\\n- closeInputFormat\uff1a\u5173\u95ed\u9650\u901f\u5668\u3001\u7d2f\u52a0\u5668\u548c\u6307\u6807\u53d1\u5e03\u5668\uff1b\\r\\n- initAccumulatorCollector\uff1a\u521d\u59cb\u5316\u7d2f\u52a0\u5668\u65b9\u6cd5\uff1b\\r\\n- initByteRateLimiter\uff1a\u9650\u6d41\u5668\u521d\u59cb\u5316\u65b9\u6cd5\uff1b\\r\\n- initStatisticsAccumulator\uff1a\u7d2f\u52a0\u6307\u6807\u521d\u59cb\u5316\u65b9\u6cd5\uff1b\\r\\n- initRestoreInfo\uff1a\u4ece\u68c0\u67e5\u70b9\u4e2d\u6062\u590d\u6307\u6807\u6570\u636e\uff1b\\r\\n- getFormatState\uff1a\u8fd4\u56deFormatState\uff0c\u6ca1\u6709\u5219\u91cd\u65b0\u8bbe\u7f6e\uff1b\\r\\n\\r\\n\u589e\u91cf\u540c\u6b65\u76f8\u5173\u4e24\u4e2a\u81ea\u5b9a\u4e49\u65b9\u6cd5\uff1a\\r\\n\\r\\n- useCustomReporter\uff1a\u662f\u5426\u5c06\u6307\u6807\u8f93\u51fa\u5230\u53d1\u5e03\u5668customReporter\uff1b\\r\\n- makeTaskFailedWhenReportFailed\uff1a\u53d1\u5e03\u6307\u6807\u5931\u8d25\u65f6\u662f\u5426\u5c06\u4efb\u52a1\u7f6e\u4e3a\u5931\u8d25\uff1b\\r\\n\\r\\n\u5269\u4f59\u7684\u662f\u5b57\u6bb5setter\u3001getter\u65b9\u6cd5\u548c\u7559\u7ed9\u5b50\u7c7b\u5b9e\u73b0\u7684openInternal\u3001nextRecordInternal\u65b9\u6cd5\uff0c\u4e0d\u518d\u590d\u8ff0\u3002\u4e0b\u7bc7\u6587\u7ae0\u5206\u6790BaseRichInputFormat\u63d0\u4f9b\u63d2\u4ef6\u901a\u7528\u529f\u80fd\uff1a\u9650\u6d41\u3001\u6307\u6807\u7edf\u8ba1\u3001\u6307\u6807\u53d1\u5e03\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u3002\\r\\n\\r\\n## \u603b\u7ed3\\r\\n\\r\\n1. InputFormat\u6839\u636eInputSplit\u5212\u5206\u8bfb\u53d6\u8bb0\u5f55\u7684\u8303\u56f4\uff0c\u800cInputSplitSource\u53ef\u4ee5\u770b\u6210InputSplit\u7684\u5de5\u5382\u62bd\u8c61\u3002\\r\\n2. InputFormat\u7684\u751f\u547d\u5468\u671f\uff1a**\u521d\u59cb\u5316\u914d\u7f6e(configure)\u3001\u6253\u5f00\u8d44\u6e90(openInputFormat)\u3001\u6253\u5f00InputSplit\u8bfb\u53d6(open)\u3001\u662f\u5426\u8bfb\u53d6\u5b8c\u6bd5(reacheEnd)\u3001\u5173\u95edInputSplit(close)\u3001\u5173\u95ed\u8d44\u6e90(closeInputFormat)**\uff1b\\r\\n3. FlinkX\u7684BaseRichInputFormat\u662f\u6240\u6709\u8bfb\u63d2\u4ef6InputFormat\u7684\u62bd\u8c61\u57fa\u7c7b\uff0c\u7edf\u4e00\u5b9e\u73b0\u4e86\u6307\u6807\u6536\u96c6\u3001\u53d1\u5e03\u548c\u9650\u6d41\u7684\u529f\u80fd\uff0c\u800c\u5b50\u7c7b\u53ea\u9700\u8981\u5b9e\u73b0createInputSplitsInternal\u3001openInternal\u3001closeInternal\u548cnextRecordInternal\u65b9\u6cd5\u3002"},{"id":"/2022/06/12/FlinkX-Source-Code-Dissection-03","metadata":{"permalink":"/blog/2022/06/12/FlinkX-Source-Code-Dissection-03","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2022/06/12-FlinkX-Source-Code-Dissection-03.md","source":"@site/blog/2022/06/12-FlinkX-Source-Code-Dissection-03.md","title":"FlinkX\u6e90\u7801\u5256\u6790(3)","description":"FlinkX\u6e90\u7801\u5256\u6790(3)","date":"2022-06-12T00:00:00.000Z","formattedDate":"June 12, 2022","tags":[{"label":"FlinkX","permalink":"/blog/tags/flink-x"},{"label":"Source code dissection","permalink":"/blog/tags/source-code-dissection"}],"readingTime":13.695,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"FlinkX\u6e90\u7801\u5256\u6790(3)","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["FlinkX","Source code dissection"],"description":"FlinkX\u6e90\u7801\u5256\u6790(3)","hide_table_of_contents":false},"prevItem":{"title":"FlinkX\u6e90\u7801\u5256\u6790(4)","permalink":"/blog/2022/06/16/FlinkX-Source-Code-Dissection-04"},"nextItem":{"title":"Flink\u4e2dRow\u548cRowData\u533a\u522b","permalink":"/blog/2022/05/19/Row&RowData-in-Flink"}},"content":"\u5bf9\u4e8eJDBC\u8bfb\u63d2\u4ef6\u5de5\u5382\u7c7bJdbcSourceFactory\uff0c\u5176createSource\u65b9\u6cd5\u8c03\u7528createInput\u65b9\u6cd5\uff0c\u8fd4\u56deDataStream\u5b8c\u6210\u8f93\u5165\u6d41\u63a5\u5165\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\\r\\n\\r\\n```java\\r\\nprotected DataStream<RowData> createInput(\\r\\n        InputFormat<RowData, InputSplit> inputFormat, String sourceName) {\\r\\n    Preconditions.checkNotNull(sourceName);\\r\\n    Preconditions.checkNotNull(inputFormat);\\r\\n    /**\\r\\n      * \u6784\u9020source\u7b97\u5b50\u63d0\u4f9b\u4e00\u4e2aInputFormat\u548c\u4e00\u4e2aTypeInformation\\r\\n      * DtInputFormatSourceFunction\u7c7b\u6ca1\u6709\u88ab\u7ee7\u627f\uff0c\\r\\n      * \u56e0\u6b64\u662f\u6240\u6709\u6570\u636e\u6e90SourceFunction\u7684\u5305\u88c5\u7c7b\\r\\n      * \u5b83\u5c01\u88c5\u4e86inputFormat\u548cTypeInformation\uff0c\u4ea7\u751f\u6570\u636e\u6d41\u7531inputFormat\u63d0\u4f9b\\r\\n      * \u6240\u4ee5inputFormat\u624d\u662fsourceconnector\u5f02\u5316\u7684\u672c\u8d28\\r\\n      */\\r\\n    DtInputFormatSourceFunction<RowData> function =\\r\\n            new DtInputFormatSourceFunction<>(inputFormat, getTypeInformation());\\r\\n    // \u6dfb\u52a0source\u7b97\u5b50\uff0c\u7b97\u5b50\u540d\u79f0\u662f\u5de5\u5382\u7c7b\u540d\u7684\u5168\u5c0f\u5199\u6a21\u5f0f\uff0c\u5982mysqlsourcefactory\\r\\n    return env.addSource(function, sourceName, getTypeInformation());\\r\\n}\\r\\n```\\r\\n\\r\\n\u7531\u4e8eJdbcSourceFactory\u7684\u5b50\u7c7b\u5982MysqlSourceFactory\u7b49\u90fd\u6ca1\u6709\u91cd\u5199createSource\u65b9\u6cd5\uff0c\u56e0\u6b64env.addSource\u6dfb\u52a0\u7684SourceFunction\u90fd\u662fDtInputFormatSourceFunction\uff0c\u53ea\u4e0d\u8fc7\u5404\u5b50\u7c7bInputFormat\u4e0d\u540c\u800c\u8868\u73b0\u5dee\u5f02\u5316\u3002DtInputFormatSourceFunction\u7c7b\u7ee7\u627f\u5173\u7cfb\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u672c\u7bc7\u6587\u7ae0\u5c31\u5176\u6d89\u53ca\u7684Flink\u6838\u5fc3\u7c7b\u6309\u4ece\u4e0a\u5230\u4e0b\u7684\u987a\u5e8f\u8fdb\u884c\u6e90\u7801\u89e3\u6790\uff0c\u8fdb\u4e00\u6b65\u719f\u6089Flink API\u3002\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n![DtInputFormatSourceFunction](/img/blog/FlinkXDissection/DtInputFormatSourceFunction.png)\\r\\n\\r\\n## Function\\r\\n\\r\\nFunction\u63a5\u53e3\u4f4d\u4e8eorg.apache.flink.api.common.functions\u5305\u4e0b\uff0c\u662fFlink\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570(UDF)\u7684\u6700\u57fa\u672c\u63a5\u53e3\u3002\u4f46\u8be5\u63a5\u53e3\u672c\u8eab**\u6ca1\u6709\u58f0\u660e\u4efb\u4f55\u65b9\u6cd5**\uff0c\u8fd9\u6837\u5176\u5b50\u63a5\u53e3\u5c31\u53ef\u4ee5\u53ea\u6dfb\u52a0\u4e00\u4e2a\u65b9\u6cd5\u58f0\u660e(Single Abstract Method)\u4ece\u800c\u53ef\u4ee5\u4f7f\u7528Java 8 Lambda\u8bed\u6cd5\u3002\\r\\n\\r\\n```java\\r\\n/**\\r\\n * The base interface for all user-defined functions.\\r\\n *\\r\\n * <p>This interface is empty in order to allow extending interfaces to be SAM (single abstract\\r\\n * method) interfaces that can be implemented via Java 8 lambdas.\\r\\n */\\r\\n@Public\\r\\npublic interface Function extends java.io.Serializable {}\\r\\n```\\r\\n\\r\\n## RichFunction\\r\\n\\r\\nRichFunction\u63a5\u53e3\u7ee7\u627f\u81eaFunction\u63a5\u53e3\uff0c\u662f\u6240\u6709\u5bcc\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570(rich user-defined functions)\u7684\u57fa\u7840\u63a5\u53e3\u3002**\u5bcc**\u51fd\u6570\u7684rich\u8868\u73b0\u5728\u5176\u58f0\u660e\u4e86\u591a\u4e2a\u7ba1\u7406function\u751f\u547d\u5468\u671f\u7684\u65b9\u6cd5\uff0c**\u4ee5\u53ca\u80fd\u591f\u8bbf\u95eefunction\u6240\u5904context\u7684\u65b9\u6cd5**\uff1a\\r\\n\\r\\n- `void open(Configuration parameters) throws Exception`\\r\\n\\r\\n\u51fd\u6570\u7684\u521d\u59cb\u5316\u65b9\u6cd5\uff0c\u5728\u8ba1\u7b97\u65b9\u6cd5(\u5982map\u3001join)\u524d\u88ab\u8c03\u7528\uff0c\u7528\u4e8e**\u4e00\u6b21\u6027\u7684\u8bbe\u7f6e\u5de5\u4f5c**\u3002\u4f20\u5165\u7684parameters\u53c2\u6570\u63d0\u4f9b\u521d\u59cb\u5316\u7684\u5404\u9879\u8bbe\u7f6e\u503c\uff0c\u4e00\u822c\u5b9e\u73b0\u5b50\u7c7b\u4e0d\u4f1a\u5728\u8be5\u51fd\u6570\u505a\u4efb\u4f55\u4e8b\u3002\\r\\n\\r\\n```java\\r\\npublic class MyFilter extends RichFilterFunction<String> {\\r\\n  private String searchString;\\r\\n  public void open(Configuration parameters) {\\r\\n    this.searchString = parameters.getString(\\"foo\\");\\r\\n  }\\r\\n    \\r\\n  public boolean filter(String value) {\\r\\n    return value.equals(searchString);\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n- `void close() throws Exception`\\r\\n\\r\\n\u51fd\u6570\u7684\u5378\u8f7d\u65b9\u6cd5\uff0c\u7528\u4e8e\u8ba1\u7b97\u540e\u7684\u6e05\u7406\u5de5\u4f5c\u3002\\r\\n\\r\\n- `RuntimeContext getRuntimeContext()`\\r\\n\\r\\n\u83b7\u53d6\u51fd\u6570\u7684\u8fd0\u884c\u65f6\u4e0a\u4e0b\u6587\u73af\u5883RuntimeContext\uff0c\u5b83\u5305\u542b\u51fd\u6570\u7684\u5e76\u53d1\u6570(parallelism)\u3001\u5b50\u4efb\u52a1\u5e8f\u53f7\u3001\u4efb\u52a1\u540d\u79f0\u7b49\u4fe1\u606f\u3002\u540c\u65f6RuntimeContext\u4e5f\u63d0\u4f9bAccumulator(\u7d2f\u52a0\u5668)\u548cDistributedCache(\u5206\u5e03\u5f0f\u7f13\u5b58)\u3002\\r\\n\\r\\n- `IterationRuntimeContext getIterationRuntimeContext()`\\r\\n\\r\\n\u83b7\u53d6\u8fed\u4ee3RuntimeContext\uff0c\u5305\u542b\u51fd\u6570\u6267\u884c\u7684\u8fed\u4ee3\u4fe1\u606f\u3002\u53ea\u6709\u5728\u51fd\u6570\u4f7f\u7528\u8fed\u4ee3\u7b97\u6cd5\u65f6([IterateExample.java](https://github.com/apache/flink/blob/master/flink-examples/flink-examples-streaming/src/main/java/org/apache/flink/streaming/examples/iteration/IterateExample.java))\u624d\u6709\u7528\uff0c\u5426\u5219\u629b\u51fa\u5f02\u5e38\u3002\\r\\n\\r\\n- `void setRuntimeContext(RuntimeContext t)`\\r\\n\\r\\n\u8bbe\u7f6e\u51fd\u6570\u7684\u4e0a\u4e0b\u6587\uff0c\u7531Flink\u6846\u67b6\u8c03\u7528\u3002\\r\\n\\r\\n### AbstractRichFunction\\r\\n\\r\\nAbstractRichFunction\u662f\u5b9e\u73b0RichFunction\u7684\u62bd\u8c61\u7c7b\uff0c\u4f5c\u4e3a\u5177\u4f53udf\u7c7b\u548cRichFunction\u63a5\u53e3\u4e2d\u7684\u4e00\u79cd\u8fc7\u6e21\u5f62\u6001\uff0c\u901a\u8fc7`private transient RuntimeContext runtimeContext`\u58f0\u660e\u8fd0\u884c\u65f6\u4e0a\u4e0b\u6587\u73af\u5883\uff0c\u7ee7\u800c\u5b9e\u73b0\u4e86RichFunction\u7684setRuntimeContext\u3001\\r\\ngetRuntimeContext\u548cgetIterationRuntimeContext\u65b9\u6cd5\u3002\\r\\n\\r\\n```java\\r\\n@Override\\r\\npublic void setRuntimeContext(RuntimeContext t) {\\r\\n  this.runtimeContext = t;\\r\\n}\\r\\n\\r\\n@Override\\r\\npublic RuntimeContext getRuntimeContext() {\\r\\n  if (this.runtimeContext != null) {\\r\\n    return this.runtimeContext;\\r\\n  } else {\\r\\n    throw new IllegalStateException(\\"The runtime context has not been initialized.\\");\\r\\n  }\\r\\n}\\r\\n\\r\\n@Override\\r\\npublic IterationRuntimeContext getIterationRuntimeContext() {\\r\\n  if (this.runtimeContext == null) {\\r\\n    throw new IllegalStateException(\\"The runtime context has not been initialized.\\");\\r\\n  } else if (this.runtimeContext instanceof IterationRuntimeContext) {\\r\\n    return (IterationRuntimeContext) this.runtimeContext;\\r\\n  } else {\\r\\n    throw new IllegalStateException(\\"This stub is not part of an iteration step function.\\");\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n## SourceFunction\\r\\n\\r\\nSourceFunction\u63a5\u53e3\u4e5f\u7ee7\u627f\u81eaFunction\uff0c\u5e76\u6dfb\u52a0\u4e86\u8868\u793a\u8f93\u51fa\u5143\u7d20\u7c7b\u578b\u7684\u6cdb\u578b\u53c2\u6570\uff0c\u662f\u6240\u6709source\u6570\u636e\u6d41\u7684\u63a5\u53e3\u3002\u5f53\u9700\u8981\u53d1\u9001\u6570\u636e\u65f6\uff0cSourceFunction\u7684run\u65b9\u6cd5\u88ab\u8c03\u7528\uff0c\u901a\u8fc7\u5faa\u73af\u4e0d\u65ad\u5730\u751f\u6210\u6570\u636e\uff0c\u8c03\u7528cancel\u65b9\u6cd5\u540e\u5faa\u73af\u88ab\u6253\u65ad\u3002\\r\\n\\r\\n- `void run(SourceContext<T> ctx) throws Exception`\\r\\n\\r\\n\u5f00\u542fsource\u6570\u636e\u6d41\uff0c\u901a\u8fc7ctx\u53d1\u9001\u6570\u636e\uff0c\u6ce8\u610f\u5b9e\u73b0\u68c0\u67e5\u70b9\u7684SourceFunction\u5fc5\u987b\u4f7f\u7528\u540c\u6b65\u9501\u6765\u53d1\u9001\u6570\u636e\u3002\\r\\n\\r\\n- `void cancel()`\\r\\n\\r\\n\u53d6\u6d88source\u6570\u636e\u6d41\u3002\u4e00\u822crun\u65b9\u6cd5\u5b9e\u73b0\u662f\u901a\u8fc7while\u5faa\u73af\u53d1\u9001\u6570\u636e\uff0c\u800ccancel\u65b9\u6cd5\u8c03\u7528\u540ewhile\u5faa\u73af\u4f1a\u88ab\u4e2d\u65ad\u3002\u5178\u578b\u5b9e\u73b0\u662f\u5c06\u58f0\u660e\u4e3avolatile\u7684boolean\u53d8\u91cfisRunning\u8bbe\u7f6e\u4e3afalse\uff0c\u800c\u8be5\u53d8\u91cf\u4f5c\u4e3arun\u65b9\u6cd5\u4e2dwhile\u5faa\u73af\u7684\u6761\u4ef6\u63a7\u5236\u3002\u5f53source\u6570\u636e\u6d41\u53d6\u6d88\u540e\uff0c\u8fd0\u884c\u7ebf\u7a0b\u4f1a\u629b\u51fa\u4e2d\u65ad\u5f02\u5e38\uff0c\u56e0\u6b64\u4e2d\u65ad\u5904\u7406\u5668\u53ef\u4ee5\u5224\u65adcancel\u65b9\u6cd5\u5df2\u7ecf\u6267\u884c\u5b8c\u6bd5\uff0c\u5efa\u8bae\u5c06\u8fd0\u884c\u72b6\u6001\u53d8\u91cf\u58f0\u660e\u4e3avolatile\u4ee5\u786e\u4fdd\u53ef\u89c1\u6027\u3002\\r\\n\\r\\n### CheckpointedFunction\\r\\n\\r\\n\u5f53SourceFunction\u5b9e\u73b0\u68c0\u67e5\u70b9\u529f\u80fd\u65f6\uff0c\u9700\u8981\u989d\u5916\u5b9e\u73b0CheckpointedFunction\u63a5\u53e3\u3002\u6b64\u65f6\u8981\u786e\u4fdd\u72b6\u6001\u66f4\u65b0\u548c\u53d1\u9001\u5143\u7d20\u4e0d\u4f1a\u540c\u65f6\u53d1\u751f\uff0cFlink\u901a\u8fc7\u68c0\u67e5\u70b9\u9501\u5bf9\u8c61\u6765\u5c06\u4e24\u8005\u9694\u79bb\u5f00\uff1a\\r\\n\\r\\n```java\\r\\npublic class ExampleCountSource implements SourceFunction<Long>, CheckpointedFunction {\\r\\n  private long count = 0L;\\r\\n  private volatile boolean isRunning = true;\\r\\n\\r\\n  private transient ListState<Long> checkpointedCount;\\r\\n\\r\\n  public void run(SourceContext<T> ctx) {\\r\\n    while (isRunning && count < 1000) {\\r\\n      // this synchronized block ensures that state checkpointing,\\r\\n      // internal state updates and emission of elements are an atomic operation\\r\\n      synchronized (ctx.getCheckpointLock()) {\\r\\n        ctx.collect(count);\\r\\n        count++;\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n\\r\\n  public void cancel() {\\r\\n    isRunning = false;\\r\\n  }\\r\\n\\r\\n  public void initializeState(FunctionInitializationContext context) {\\r\\n    this.checkpointedCount = context\\r\\n        .getOperatorStateStore()\\r\\n        .getListState(new ListStateDescriptor<>(\\"count\\", Long.class));\\r\\n\\r\\n    if (context.isRestored()) {\\r\\n      for (Long count : this.checkpointedCount.get()) {\\r\\n        this.count += count;\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n\\r\\n  public void snapshotState(FunctionSnapshotContext context) {\\r\\n    this.checkpointedCount.clear();\\r\\n    this.checkpointedCount.add(count);\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n### SourceContext\\r\\n\\r\\nSourceFunction\u63a5\u53e3\u5185\u90e8\u81ea\u5e26SourceContext\u63a5\u53e3\uff0c\u58f0\u660e\u5982\u4e0b\u65b9\u6cd5\uff1a\\r\\n\\r\\n- `void collect(T element)`\uff1a\u4ecesource\u6570\u636e\u6d41\u53d1\u9001\u4e00\u4e2a\u5143\u7d20\u3002\\r\\n\\r\\n- `void collectWithTimestamp(T element, long timestamp)`\uff1a\u4ecesource\u6570\u636e\u6d41\u53d1\u9001\u4e00\u4e2a\u5143\u7d20\uff0c\u540c\u65f6\u7ed9\u8be5\u5143\u7d20\u6253\u4e0a\u65f6\u95f4\u6233\uff0c**\u4ec5\u5728EventTime\u8bed\u4e49\u4e0b\u6709\u6548**\u3002\\r\\n\\r\\n- `void emitWatermark(Watermark mark)`\uff1a\u53d1\u9001\u6307\u5b9a\u6c34\u5370\uff0c\u6c34\u5370t\u8868\u793a\u65e9\u4e8e\u65f6\u95f4t\u7684\u5143\u7d20\u90fd\u5df2\u7ecf\u53d1\u9001\uff0c\u4e4b\u540e\u65f6\u95f4\u65e9\u4e8et\u7684\u5143\u7d20\u89c6\u4e3a\u5ef6\u8fdf\u6570\u636e\uff0c**\u4ec5\u5728EventTime\u8bed\u4e49\u4e0b\u6709\u6548**\u3002\\r\\n\\r\\n- `void markAsTemporarilyIdle()`\uff1a\u6807\u8bb0source\u6570\u636e\u6d41\u4f1a\u6682\u65f6\u505c\u6b62\u53d1\u9001\u5143\u7d20\u548c\u6c34\u5370\uff0c**\u4ec5\u5728IngestionTime\u8bed\u4e49\u4e0b\u6709\u6548**\u3002\\r\\n\\r\\n- `Object getCheckpointLock()`\uff1a\u83b7\u53d6\u68c0\u67e5\u70b9\u540c\u6b65\u9501\u3002\\r\\n\\r\\n- `void close()`\uff1a\u5173\u95ed\u4e0a\u4e0b\u6587\u73af\u5883\u3002\\r\\n\\r\\n### ParallelSourceFunction\\r\\n\\r\\nParallelSourceFunction\u63a5\u53e3\u7ee7\u627f\u81eaSourceFunction\u63a5\u53e3\uff0c\u4f46\u5e76\u6ca1\u6709\u58f0\u660e\u5176\u4ed6\u65b9\u6cd5\u6216\u5b57\u6bb5\u3002\u4f5c\u4e3a\u4e00\u4e2a\u6807\u8bb0\u63a5\u53e3\uff0c\u5b83\u544a\u8bc9Flink\u6846\u67b6\u8be5source function\u53ef\u4ee5\u5e76\u884c\u6267\u884c\u3002\u5f53\u4e0d\u540c\u5b9e\u4f8b\u6267\u884c\u4e0d\u540ctask\u65f6\uff0c\u901a\u8fc7RichParallelSourceFunction\u83b7\u53d6\u8fd0\u884c\u73af\u5883\uff0c\u91cc\u9762\u5305\u542b\u6240\u6709\u5e76\u884c\u4efb\u52a1\u7684\u4e2a\u6570\u548c\u5f53\u524d\u4efb\u52a1\u7f16\u53f7\u3002\\r\\n\\r\\n```java\\r\\npublic interface ParallelSourceFunction<OUT> extends SourceFunction<OUT> {}\\r\\n```\\r\\n\\r\\n## RichParallelSourceFunction\\r\\n\\r\\nRichParallelSourceFunctionk\u62bd\u8c61\u7c7b\u7ee7\u627f\u81eaAbstractRichFunction\u62bd\u8c61\u7c7b\uff0c\u5b9e\u73b0\u4e86ParallelSourceFunction\u63a5\u53e3\uff0c**\u5373RichFunction\u548cSourceFunction\u7684\u7ed3\u5408\u4f53**\u3002\u4f5c\u4e3a\u5e76\u884c\u6570\u636e\u6e90\u7684\u57fa\u7c7b\uff0c\u65e2\u53ef\u4ee5\u83b7\u53d6\u4e0a\u4e0b\u6587\u4fe1\u606f\uff0c\u53c8\u63d0\u4f9b\u7ba1\u7406\u51fd\u6570\u58f0\u660e\u5468\u671f\u7684open\u548cclose\u65b9\u6cd5\u3002\\r\\n\\r\\n```java\\r\\npublic abstract class RichParallelSourceFunction<OUT> extends AbstractRichFunction\\r\\n    implements ParallelSourceFunction<OUT> {\\r\\n\\r\\n  private static final long serialVersionUID = 1L;\\r\\n}\\r\\n```\\r\\n\\r\\n### InputFormatSourceFunction\\r\\n\\r\\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u9664\u4e86RichParallelSourceFunction\u5e72\u4e86\u70b9\u5c0f\u4e8b\u5916\uff0c\u5176\u4ed6\u6d89\u53ca\u7684\u63a5\u53e3\u3001\u62bd\u8c61\u7c7b\u90fd\u6ca1\u5e72\u5565\u4e8b\u3002\u4f5c\u4e3a\u6df7\u8840\u513f\u62bd\u8c61\u7c7bRichParallelSourceFunction\u7684\u5b50\u7c7b\uff0cInputFormatSourceFunction\u603b\u7b97\u5f00\u59cb\u5e72\u6d3b\u4e86(\u5b9e\u73b0\u63a5\u53e3\u65b9\u6cd5)\u3002\\r\\n\\r\\n\u7c7b\u5982\u5176\u540d\uff0cInputFormatSourceFunction\u901a\u8fc7InputFormat\u6765\u5b9e\u73b0\u6570\u636e\u8bfb\u53d6\uff0c\u5177\u4f53\u5730\uff0c\u5b83\u58f0\u660e\u4e86\u5982\u4e0b\u51e0\u4e2a\u79c1\u6709\u5b57\u6bb5\uff1a\\r\\n\\r\\n```java\\r\\nprivate TypeInformation<OUT> typeInfo;\\r\\nprivate transient TypeSerializer<OUT> serializer;\\r\\nprivate InputFormat<OUT, InputSplit> format;\\r\\nprivate transient InputSplitProvider provider;\\r\\nprivate transient Iterator<InputSplit> splitIterator;\\r\\nprivate volatile boolean isRunning = true;\\r\\n```\\r\\n\\r\\n\u7531\u4e8eInputFormatSourceFunction\u517c\u5177\u4e86RichFunction\u548cSourceFunction\u63a5\u53e3\uff0c\u73b0\u5728\u8981\u5b9e\u73b0\u5b83\u4eec\u58f0\u660e\u7684\u65b9\u6cd5\u3002\u5bf9\u4e8eRichFunction\u90e8\u5206\uff0c\u9700\u8981\u5b9e\u73b0open\u548cclose\u65b9\u6cd5\uff1a\\r\\n\\r\\n```java\\r\\npublic void open(Configuration parameters) throws Exception {\\r\\n  StreamingRuntimeContext context = (StreamingRuntimeContext) getRuntimeContext();\\r\\n\\r\\n  if (format instanceof RichInputFormat) {\\r\\n    ((RichInputFormat) format).setRuntimeContext(context);\\r\\n  }\\r\\n  format.configure(parameters);\\r\\n\\r\\n  provider = context.getInputSplitProvider();\\r\\n  serializer = typeInfo.createSerializer(getRuntimeContext().getExecutionConfig());\\r\\n  splitIterator = getInputSplits();\\r\\n  isRunning = splitIterator.hasNext();\\r\\n}\\r\\n\\r\\npublic void close() throws Exception {\\r\\n  format.close();\\r\\n  if (format instanceof RichInputFormat) {\\r\\n    ((RichInputFormat) format).closeInputFormat();\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n\u7531\u4e8e\u662f\u501f\u52a9\u4e8eInputFormat\u5b9e\u73b0\u6570\u636e\u8bfb\u53d6\u529f\u80fd\uff0c\u56e0\u6b64\u5728open\u65b9\u6cd5\u91cc\u9762\u662f\u8fdb\u884cformat\u7684\u521d\u59cb\u5316\u914d\u7f6e(\u8c03\u7528format.configure(parameters)\uff0c\u53c2\u6570\u7c7b\u578b\u4e5f\u521a\u597d\u662fConfiguration\uff0c\u90fd\u662f\u8bbe\u8ba1\u597d:smirk:)\uff0c\u63a5\u7740\u521d\u59cb\u5316\u5176\u4ed6\u5b57\u6bb5\u3002\u540c\u6837\u5730\uff0c\u5728close\u65b9\u6cd5\u8c03\u7528\u7684\u4e5f\u662fformat.close()\u3002\u8fd9\u91cc\u8981\u6ce8\u610f\u5728open\u548cclose\u4e2d\uff0c\u901a\u8fc7instanceof\u68c0\u67e5format\u662f\u5426\u4e3aRichInputFormat\uff0c\u5982\u679c\u662f\u7684\u8bdd\u8fd8\u8981\u5728\u5206\u522b\u8c03\u7528setRuntimeContext(\u4e0d\u662fopenInputFormat)\u548ccloseInputFormat()\u65b9\u6cd5\u3002\\r\\n\\r\\n\u5bf9\u4e8eSourceFunction\u90e8\u5206\uff0c\u9700\u8981\u5b9e\u73b0run\u548ccancel\u65b9\u6cd5\u3002cancel\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u5c06isRunning\u7f6e\u4e3afalse\uff0c\u91cd\u70b9\u5206\u6790run\u65b9\u6cd5\u3002\\r\\n\\r\\n```java title=InputFormatSourceFunction.run\\r\\npublic void run(SourceContext<OUT> ctx) throws Exception {\\r\\n  try {\\r\\n\\r\\n    Counter completedSplitsCounter =\\r\\n      getRuntimeContext().getMetricGroup().counter(\\"numSplitsProcessed\\");\\r\\n    if (isRunning && format instanceof RichInputFormat) {\\r\\n      ((RichInputFormat) format).openInputFormat();\\r\\n    }\\r\\n\\r\\n    OUT nextElement = serializer.createInstance();\\r\\n    while (isRunning) {\\r\\n      format.open(splitIterator.next());\\r\\n\\r\\n      // for each element we also check if cancel\\r\\n      // was called by checking the isRunning flag\\r\\n\\r\\n      while (isRunning && !format.reachedEnd()) {\\r\\n        nextElement = format.nextRecord(nextElement);\\r\\n        if (nextElement != null) {\\r\\n          ctx.collect(nextElement);\\r\\n        } else {\\r\\n          break;\\r\\n        }\\r\\n      }\\r\\n      format.close();\\r\\n      completedSplitsCounter.inc();\\r\\n\\r\\n      // \u4e0d\u662fcancel\u8c03\u7528\u6253\u65ad\u7684(\u5f53\u524dformat\u5df2\u7ecf\u8f93\u51fa\u7ed3\u675f)\uff0c\u5904\u7406\u4e0b\u4e00\u4e2asplit\\r\\n      if (isRunning) {\\r\\n        isRunning = splitIterator.hasNext();\\r\\n      }\\r\\n    }\\r\\n  } finally {\\r\\n    format.close();\\r\\n    if (format instanceof RichInputFormat) {\\r\\n      ((RichInputFormat) format).closeInputFormat();\\r\\n    }\\r\\n    isRunning = false;\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n1. \u83b7\u53d6numSplitsProcessed\u6307\u6807\uff0c\u5728format\u8f93\u51fa\u5b8c\u6210\u5173\u95ed\u540e\u52a01\uff1b\\r\\n2. \u5982\u679cformat\u662fRichInputFormat\uff0c\u5219\u8c03\u7528\u5176openInputFormat\u65b9\u6cd5\uff1b\\r\\n3. \u8c03\u7528serializer.createInstance()\u65b9\u6cd5\u521b\u5efa\u4e00\u4e2a\u793a\u4f8b\u6570\u636e\u5bf9\u8c61nextElement\uff1b\u5bf9\u4e8ePojoSerializer\u4f1a\u901a\u8fc7\u53cd\u5c04\u8c03\u7528\u5176\u65e0\u53c2\u6784\u9020\u51fd\u6570\u8fd4\u56de\u5bf9\u8c61(\u63a5\u53e3\u6216\u62bd\u8c61\u7c7b\u8fd4\u56denull)\uff0c\u5bf9\u4e8e\u57fa\u672c\u7c7b\u578b\u4f1a\u8fd4\u56de\u5176**\u96f6\u503c**(\u6570\u503c\u7c7b\u578b\u662f0\uff0cString\u7c7b\u578b\u662f\u7a7a\u5b57\u7b26\u4e32)\uff1b\u8fd9\u91cc\u662f\u4e3a\u4e86\u5f97\u5230\u4e00\u4e2a\\"\u521d\u59cb\u72b6\u6001\\"\u7684\u5bf9\u8c61\uff0c\u56e0\u4e3a\u5728\u540e\u9762\u7684\u5faa\u73af\u4e2dnextElement\u4f1a\u4e0d\u65ad\u88ab\u8bbe\u7f6e\u65b0\u6570\u636e\uff1b\\r\\n4. while\u5faa\u73af\u53d1\u9001\u6570\u636e\uff1a\\r\\n   1. \u8c03\u7528format.open\u65b9\u6cd5\uff0c\u6ce8\u610f\u53c2\u6570\u5fc5\u987b\u662fInputSplit\u7684\u5b50\u7c7b\uff0c\u5373InputFormat\u5de5\u4f5c\u548cInputSplit\u5f3a\u7ed1\u5b9a\u5728\u4e00\u8d77\uff1b\\r\\n   2. \u518d\u6b21while\u5faa\u73af\uff0c**\u8fd9\u91cc\u4e0d\u80fd\u6539\u6210`if(isRunning && !format.reachedEnd())`**\uff01\u7531format.nextRecord\u751f\u6210\u65b0\u8bb0\u5f55\uff0c\u7136\u540e\u8c03\u7528ctx.collect\u53d1\u9001\uff1b\\r\\n   3. \u5173\u95edformat;\\r\\n   4. numSplitsProcessed\u52a01\uff1b\\r\\n   5. \u5355\u72ec\u5224\u65adisRunning\u3002\\r\\n5. finally\u5757\u5173\u95edformat\uff0cisRunning\u8bbe\u7f6e\u4e3afalse\u3002\\r\\n\\r\\n\u6700\u540e\u662f\u4e24\u4e2agettter\u65b9\u6cd5\u5206\u522b\u8fd4\u56deformat\u548csplitIterator\uff0c**\u6ce8\u610f\u6ca1\u6709\u76f4\u63a5\u8fd4\u56desplitIterator**\u800c\u662fnew\u4e86\u4e00\u4e2aIterator<InputSplit\\\\>\u5bf9\u8c61\u8fd4\u56de\u3002\\r\\n\\r\\n:::tip :confused: Q&A\\r\\n\\r\\n1. format.nextRecord\u65b9\u6cd5\u4e3a\u4ec0\u4e48\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u7a7a\u5bf9\u8c61\u53c2\u6570\uff0c\u5b83\u81ea\u5df1new\u4e00\u4e2a\u8fd4\u56de\u4e0d\u5c31\u884c\u4e86\u5417\uff1f\u5bf9\u8c61\u91cd\u7528\uff01\\r\\n2. \u8fd0\u884c\u72b6\u6001\u7684\u5224\u65ad\uff0c\u4e3a\u4ec0\u4e48format\u5173\u95ed\u540e\u8fd8\u8981\u5355\u72ec\u8fdb\u884cisRunning\u7684\u72b6\u6001\u8bbe\u7f6e\uff0c\u4e0d\u5e94\u8be5\u76f4\u63a5\u8bbe\u7f6e\u4e3afalse\u5417\uff1fformat\u5173\u95ed\u540e\u53ea\u662f\u5f53\u524d\u7684split\u8303\u56f4\u5185\u6570\u636e\u4ee5\u53d1\u9001\uff0c\u4f46split\u6709\u591a\u4e2a\uff0c\u53ea\u6709\u5f53\u6240\u6709split\u90fd\u5904\u7406\u540e\u624d\u5173\u95ed\u3002\\r\\n3. RichFormat\u7684close\u548cclaseInputFormat\u65b9\u6cd5\u6709\u4ec0\u4e48\u533a\u522b\uff1f\\r\\n4. \u4e3a\u4ec0\u4e48getFormat\u76f4\u63a5return format\u800cgetInputSplits\u8981new Iterator<InputSplit\\\\>\uff1f\u8fed\u4ee3\u5668\u6a21\u5f0f\u4e0b\u6bcf\u6b21\u83b7\u53d6\u7684Iterator\u662f\u4e0d\u53ef\u590d\u7528\u7684\uff0c\u6bcf\u6b21\u9700\u8981\u8fd4\u56de\u65b0\u7684\uff01\\r\\n:::\\r\\n\\r\\n## DtInputFormatSourceFunction\\r\\n\\r\\n\u6700\u540e\u56de\u5230DtInputFormatSourceFunction\uff0c\u5b83\u7ee7\u627f\u81eaInputFormatSourceFunction\u5e76\u4e14**\u5b9e\u73b0\u4e86CheckpointedFunction**\uff0c\u56e0\u6b64\u9700\u8981\u5b9e\u73b0snapshotState\u548cinitializeState\u65b9\u6cd5\uff1a\\r\\n\\r\\n```java\\r\\npublic void snapshotState(FunctionSnapshotContext context) throws Exception {\\r\\n  FormatState formatState = ((BaseRichInputFormat) format).getFormatState();\\r\\n  if (formatState != null) {\\r\\n    LOG.info(\\"InputFormat format state:{}\\", formatState);\\r\\n    unionOffsetStates.clear();\\r\\n    unionOffsetStates.add(formatState);\\r\\n  }\\r\\n}\\r\\n\\r\\npublic void initializeState(FunctionInitializationContext context) throws Exception {\\r\\n  OperatorStateStore stateStore = context.getOperatorStateStore();\\r\\n  LOG.info(\\"Start initialize input format state, is restored:{}\\", context.isRestored());\\r\\n  unionOffsetStates =\\r\\n    stateStore.getUnionListState(\\r\\n      new ListStateDescriptor<>(\\r\\n        LOCATION_STATE_NAME,\\r\\n        TypeInformation.of(new TypeHint<FormatState>() {})));\\r\\n  if (context.isRestored()) {\\r\\n    formatStateMap = new HashMap<>(16);\\r\\n    for (FormatState formatState : unionOffsetStates.get()) {\\r\\n      formatStateMap.put(formatState.getNumOfSubTask(), formatState);\\r\\n      LOG.info(\\"Input format state into:{}\\", formatState);\\r\\n    }\\r\\n  }\\r\\n  LOG.info(\\"End initialize input format state\\");\\r\\n}\\r\\n```\\r\\n\\r\\nDtInputFormatSourceFunction\u4f7f\u7528\u5217\u8868\u72b6\u6001\u4fdd\u5b58\u5176\u6bcf\u4e2aInputFormat\u7684\u72b6\u6001\uff0c\u72b6\u6001\u57fa\u672c\u7c7b\u578b\u65f6FormatState\uff0c\u5b83\u6765\u81eaBaseRichInputFormat\u3002initializeState\u662f\u72b6\u6001\u521d\u59cb\u5316\u65b9\u6cd5\uff0c\u9996\u5148\u4ece\u4e0a\u4e0b\u6587\u73af\u5883\u4e2d\u83b7\u53d6\u5217\u8868\u72b6\u6001\u4fdd\u5b58\u5230unionOffsetStates\uff0c\u7136\u540e\u5c06\u5176\u8f6c\u4e3a\u952e\u503c\u5bf9\u5f62\u5f0f\u7684formatStateMap\u4fbf\u4e8e\u5feb\u901f\u5b9a\u4f4d\u72b6\u6001(\u6ca1\u6709map\u7c7b\u578b\u72b6\u6001\u5417:confused:\uff1f)\u3002snapshotState\u662f\u4fdd\u5b58\u72b6\u6001\u65b9\u6cd5\uff0c\u6ce8\u610f\u4f1a\u6e05\u7a7aunionOffsetStates\u3002\u5173\u4e8eInputFormat\u7684\u89e3\u6790\u89c1\u4e0b\u7bc7\u6587\u7ae0\u3002\\r\\n\\r\\n## \u603b\u7ed3\\r\\n\\r\\n1. RichFunction\u548cSourceFunction\u90fd\u7ee7\u627f\u81eaFunction\u63a5\u53e3\uff0c\u4f46\u540e\u8005\u6dfb\u52a0\u4e86\u8868\u793a\u8f93\u51fa\u7c7b\u578b\u7684\u6cdb\u578b\u53c2\u6570\uff1b\\r\\n2. RichFunction\u5173\u952e\u65b9\u6cd5\uff1bopen\u548cclose\uff1bSourceFunction\u5173\u952e\u65b9\u6cd5\uff1arun\u548ccancel\uff1b\\r\\n3. [To be done]RichInputFormat\u7684open\u548copenInputFormat\u65b9\u6cd5\u533a\u522b\uff1b\\r\\n4. DtInputFormatSourceFunction\u4f7f\u7528\u81ea\u5b9a\u4e49BaseRichInputFormat\u5b9e\u73b0\u6570\u636e\u8f93\u51fa\u548c\u72b6\u6001\u4fdd\u5b58\u3002"},{"id":"/2022/05/19/Row&RowData-in-Flink","metadata":{"permalink":"/blog/2022/05/19/Row&RowData-in-Flink","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2022/05/19-Row&RowData-in-Flink.md","source":"@site/blog/2022/05/19-Row&RowData-in-Flink.md","title":"Flink\u4e2dRow\u548cRowData\u533a\u522b","description":"Flink\u4e2dRow\u548cRowData\u533a\u522b","date":"2022-05-19T00:00:00.000Z","formattedDate":"May 19, 2022","tags":[{"label":"Flink","permalink":"/blog/tags/flink"},{"label":"Fliny\u5f00\u53d1\u7b14\u8bb0","permalink":"/blog/tags/fliny\u5f00\u53d1\u7b14\u8bb0"}],"readingTime":6.23,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"Flink\u4e2dRow\u548cRowData\u533a\u522b","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["Flink","Fliny\u5f00\u53d1\u7b14\u8bb0"],"description":"Flink\u4e2dRow\u548cRowData\u533a\u522b","hide_table_of_contents":false},"prevItem":{"title":"FlinkX\u6e90\u7801\u5256\u6790(3)","permalink":"/blog/2022/06/12/FlinkX-Source-Code-Dissection-03"},"nextItem":{"title":"Java\u5b9e\u73b0LRU\u548cLFU","permalink":"/blog/2022/04/06/Java_Implement_of_LRU&LFU"}},"content":"\u5f00\u53d1Flinky\u65f6\u53d1\u73b0\uff0cFlinkX\u7684BashRichInputFormat\u7c7b\u4f7f\u7528RowData\u4f5c\u8f93\u51fa\u7c7b\u578b\uff0c\u800cFlink JDBC connector\u6a21\u5757\u7684JdbcInputFormat\u7c7b\u4f7f\u7528Row\u4f5c\u4e3a\u8f93\u51fa\u7c7b\u578b\u3002\u4eca\u5929\u5c31\u5199\u7bc7\u6587\u7ae0\u7814\u7a76\u4e0b\u5b83\u4eec\u7684\u533a\u522b\uff0c\u6700\u540e\u7ed9\u51faFlinky\u5230\u5e95\u8be5\u4f7f\u7528Row\u8fd8\u662fRowData\u3002\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## Row\\r\\n\\r\\nRow\u7c7b\u7684\u5168\u8def\u5f84\u4e3a`org.apache.flink.types.Row`\uff0c\u5e76\u4e14\u88ab\u4fee\u9970\u4e3a`final`\uff0c\u5373\u4e0d\u53ef\u88ab\u7ee7\u627f\u3002\u6e90\u7801\u6ce8\u91ca\u7ffb\u8bd1\u5982\u4e0b\uff1a\\r\\n\\r\\n> Row\u662f\u4e00\u79cd\u56fa\u5b9a\u957f\u5ea6\u3001\u53ef\u4e3anull\u7684\u590d\u5408\u7c7b\u578b\uff0c\u6309\u7167\u56fa\u5b9a\u5b57\u6bb5\u987a\u5e8f\u5b58\u50a8\u591a\u4e2a\u503c\u3002\u6bcf\u4e2a\u5b57\u6bb5\u90fd\u53ef\u4ee5\u4e3anull\uff0c\u4f46\u5b57\u6bb5\u7c7b\u578b\u4e0d\u80fd\u81ea\u52a8\u63a8\u5bfc\uff0c\u56e0\u6b64\u9700\u8981\u63d0\u4f9b\u7c7b\u578b\u4fe1\u606f\u3002\\r\\n>\\r\\n> Row\u88ab\u8bbe\u8ba1\u7684\u4e3b\u8981\u76ee\u7684\u662f\u4f5c\u4e3aFlink Table/SQL API\u548c\u5176\u4ed6API\u7684\u6865\u6881\uff0c\u56e0\u6b64Row\u4e0d\u4ec5\u5305\u542bschema\u90e8\u5206(\u63d0\u4f9b\u5b57\u6bb5\u6570\u636e)\uff0c\u8fd8\u5305\u542b\u4e00\u4e2akind\u5b57\u6bb5\u6765\u8bb0\u5f55changelog\u7c7b\u578b\u3002\u6bd4\u5982\u5728\u6279\u5904\u7406\u573a\u666f\u4e0b\uff0cchanglog\u662f\u5305\u542b\u63d2\u5165\u884c\u7684\u6709\u754c\u6d41\uff0c\u5176kind\u5b57\u6bb5\u503c\u4e3a\u679a\u4e3e\u503cRowKind.INSERT\u3002kind\u5b57\u6bb5\u63d0\u4f9bgetter\u548csetter\u65b9\u6cd5\u3002\\r\\n>\\r\\n> \u83b7\u53d6Row\u5b57\u6bb5\u6570\u636e\u6709\u57fa\u4e8e\u7d22\u5f15\u548c\u57fa\u4e8e\u540d\u79f0\u4e24\u79cd\u6a21\u5f0f\uff0c\u5f00\u53d1\u8005\u81ea\u884c\u9009\u62e9\u54ea\u79cd\u6a21\u5f0f\u3002\u7531Flink\u6846\u67b6\u4ea7\u751f\u7684Row\u540c\u65f6\u652f\u6301\u4e24\u79cd\u6a21\u5f0f\u3002\\r\\n>\\r\\n> \u57fa\u4e8e\u7d22\u5f15\u7684\u5b57\u6bb5\u6a21\u5f0f\uff1a\u901a\u8fc7`withPositions(int)`\u9759\u6001\u65b9\u6cd5\u521b\u5efa**\u56fa\u5b9a\u957f\u5ea6**\u7684Row\u5bf9\u8c61\u3002\u5b57\u6bb5\u901a\u8fc7`getField(int)`\u548c`setField(int, Object)`\u65b9\u6cd5\u8fdb\u884c\u83b7\u53d6\u548c\u8bbe\u7f6e\uff0c\u9ed8\u8ba4\u6bcf\u4e2a\u5b57\u6bb5\u521d\u59cb\u5316\u4e3anull\u3002\\r\\n>\\r\\n> \u57fa\u4e8e\u540d\u79f0\u7684\u5b57\u6bb5\u6a21\u5f0f\uff1a\u901a\u8fc7`withNames()`\u9759\u6001\u65b9\u6cd5\u521b\u5efa**\u53ef\u53d8\u957f\u5ea6**\u7684Row\u5bf9\u8c61\u3002\u5b57\u6bb5\u901a\u8fc7`getField(String)`\u548c`setField(String,Object)`\u65b9\u83b7\u8fdb\u884c\u83b7\u53d6\u548c\u8bbe\u7f6e\uff0c\u540c\u65f6\u6bcf\u4e2a\u5b57\u6bb5\u7531setField\u8bbe\u7f6e\u521d\u59cb\u503c\u3002Flink\u6846\u67b6\u5c06\u7f3a\u5931\u5b57\u6bb5\u8bbe\u7f6e\u4e3anull\uff0c\u5e76\u4e14\u5728\u5e8f\u5217\u5316\u6216\u8f93\u5165\u8f6c\u6362\u65f6\u5bf9\u5b57\u6bb5\u6392\u5e8f\uff0c\u6700\u540e\u53d8\u6210\u56fa\u5b9a\u957f\u5ea6\u7684\u590d\u5408\u7c7b\u578b\u3002\u56e0\u6b64\u57fa\u4e8e\u540d\u79f0\u7684Row\u6027\u80fd\u5f31\u4e8e\u57fa\u4e8e\u7d22\u5f15\u7684\uff0c\u4f46\u662f\u7b80\u5316\u4e86Row\u521b\u5efa\u548c\u4ee3\u7801\u53ef\u8bfb\u6027\u3002\\r\\n>\\r\\n> \u6df7\u5408\u6a21\u5f0f\uff1a\u7531Flink\u6846\u67b6\u8fdb\u884c\u53cd\u5e8f\u5217\u5316\u6216\u8005\u8f93\u51fa\u8f6c\u6362\u540e\u7684Row\u540c\u65f6\u517c\u5bb9\u4e24\u79cd\u6a21\u5f0f\u770b\uff0c\u901a\u8fc7`getField(int)`\u3001`setField(int, Object)`\u3001`getField(String)`\u548c`setField(String,Object)`\u6765\u83b7\u53d6\u548c\u8bbe\u7f6e\u5b57\u6bb5\u503c\u3002\u4f46\u662f\uff0c\u4e0d\u80fd\u901a\u8fc7`setField(String,Object)`\u6765\u6dfb\u52a0\u65b0\u5b57\u6bb5\uff0chashCode()\u65b9\u6cd5\u53ea\u5bf9\u57fa\u4e8e\u7d22\u5f15\u7684Row\u6709\u6548\u3002\\r\\n>\\r\\n> Row\u5bf9\u8c61\u5b9e\u73b0Serializable\u63a5\u53e3\uff0c\u53ef\u4ee5\u5305\u542b\u975e\u5e8f\u5217\u5316\u5b57\u6bb5\uff0c\u4f46\u5e8f\u5217\u5316\u4f1a\u5931\u8d25\uff0c\u9664\u975e\u4f7f\u7528Flink\u5e8f\u5217\u5316\u6808\u3002\\r\\n\\r\\n\u4ece\u6e90\u7801\u5206\u6790\uff0cRow\u7c7b\u5305\u542b\u5982\u4e0b\u5b57\u6bb5\uff1a\\r\\n\\r\\n```java\\r\\n/** The kind of change a row describes in a changelog. */\\r\\nprivate RowKind kind;\\r\\n\\r\\n/** Fields organized by position. Either this or {@link #fieldByName} is set. */\\r\\nprivate final @Nullable Object[] fieldByPosition;\\r\\n\\r\\n/** Fields organized by name. Either this or {@link #fieldByPosition} is set. */\\r\\nprivate final @Nullable Map<String, Object> fieldByName;\\r\\n\\r\\n/** Mapping from field names to positions. Requires {@link #fieldByPosition} semantics. */\\r\\nprivate final @Nullable LinkedHashMap<String, Integer> positionByName;\\r\\n```\\r\\n\\r\\n\u5f53\u4f7f\u7528\u9759\u6001\u65b9\u6cd5withPositions\u6216\u8005withNames\u521b\u5efaRow\u5bf9\u8c61\u65f6\uff0c\u5bf9\u5e94\u5730fieldByName\u6216\u8005fieldByPosition\u4e3a\u7a7a\uff0cFlink\u6839\u636e\u8fd9\u4e2a\u6761\u4ef6\u5224\u65adRow\u5904\u4e8e\u54ea\u79cd\u8bbf\u95ee\u6a21\u5f0f\uff0c\u800cRowKind\u4f5c\u4e3a\u679a\u4e3e\u7c7b\u5177\u6709`INSERT`\u3001`UPDATE_BEFORE`\u3001`UPDATE_AFTER`\u548c`DELETE`4\u4e2a\u503c\u3002\\r\\n\\r\\n## RowData\\r\\n\\r\\nRowData\u4f5c\u4e3a\u63a5\u53e3\uff0c\u5176\u7c7b\u5168\u8def\u5f84\u4e3a`org.apache.flink.table.data.RowData`\uff0c\u6e90\u7801\u6ce8\u91ca\u7ffb\u8bd1\u5982\u4e0b\uff1a\\r\\n\\r\\n> RowData\u662fFlink Table\u7cfb\u7edf\u4e2d\u8868\u793aRowType\u6570\u636e\u7684\u57fa\u672c\u6570\u636e\u63a5\u53e3\uff0c\u6240\u6709\u5728Table API/SQL\u6d41\u6c34\u7ebf\u4f20\u8f93\u7684\u9876\u5c42\u8bb0\u5f55\u90fd\u5b9e\u73b0RowData\u63a5\u53e3\uff0c\u5b83\u4e5f\u5305\u542b\u4e00\u4e2aRowKind\u5b57\u6bb5\u8868\u793achangelog\u7c7b\u578b\u3002\u6ce8\u610fRowData\u7684\u5b57\u6bb5\u7c7b\u578b\u90fd\u5fc5\u987b\u662fFlink\u5185\u90e8\u6570\u636e\u7c7b\u578b\u3002\\r\\n>\\r\\n> \u5728\u4e0d\u540c\u573a\u666f\u4e0b\uff0cRowData\u63a5\u53e3\u6709\u7740\u4e0d\u540c\u7684\u5b9e\u73b0\u7c7b\uff1a\u6bd4\u5982BinaryRowData\u9762\u5411\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u4f9d\u8d56\u4e8eMemeorySegment\u7c7b\u800c\u4e0d\u662fJava\u5bf9\u8c61\u6765\u51cf\u5c11\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u5f00\u9500\uff1bGenericRowData\u9762\u5411\u5bf9\u8c61\u6570\u636e\uff0c\u4f9d\u8d56\u4e8eObject\u6570\u7ec4\u5b9e\u73b0\u9ad8\u6548\u66f4\u65b0\u548c\u6613\u4e8e\u6784\u5efa\u3002\u5f53\u8981\u6c42\u4f7f\u7528Flink\u5185\u90e8\u6570\u636e\u7ed3\u6784\u65f6\uff0c\u63a8\u8350\u4f7f\u7528GenericRowData\u3002Flink API/SQL\u6570\u636e\u7c7b\u578b\u5bf9\u5e94\u7684Flink\u5185\u90e8\u6570\u636e\u7c7b\u578b\u5982\u4e0b\u8868\u6240\u793a(\u7565...)\\r\\n\\r\\n\u4ece\u6e90\u7801\u5206\u6790\uff0cRowData\u63a5\u53e3\u5e76\u6ca1\u6709\u5305\u542b\u4efb\u4f55\u5b57\u6bb5(RowKind\u5b57\u6bb5\u653e\u5230\u4e86\u5b9e\u73b0\u7c7b\u4e2d)\uff0c\u5927\u90e8\u5206\u662f\u58f0\u660egetXxx\u65b9\u6cd5**(\u57fa\u4e8e\u7d22\u5f15\u83b7\u53d6\u5b57\u6bb5)**\uff0c\u5176\u4e2dXxx\u662fJava\u57fa\u672c\u7c7b\u578b\u6216\u8005Flink\u5185\u90e8\u7c7b\u578b\uff1a\\r\\n\\r\\n```java\\r\\n...\\r\\n/** Returns the double value at the given position. */\\r\\ndouble getDouble(int pos);\\r\\n\\r\\n/** Returns the string value at the given position. */\\r\\nStringData getString(int pos);\\r\\n\\r\\n/**\\r\\n  * Returns the decimal value at the given position.\\r\\n  *\\r\\n  * <p>The precision and scale are required to determine whether the decimal value was stored in\\r\\n  * a compact representation (see {@link DecimalData}).\\r\\n  */\\r\\nDecimalData getDecimal(int pos, int precision, int scale);\\r\\n\\r\\n/**\\r\\n  * Returns the timestamp value at the given position.\\r\\n  *\\r\\n  * <p>The precision is required to determine whether the timestamp value was stored in a compact\\r\\n  * representation (see {@link TimestampData}).\\r\\n  */\\r\\nTimestampData getTimestamp(int pos, int precision);\\r\\n...\\r\\n```\\r\\n\\r\\n## \u603b\u7ed3\\r\\n\\r\\nRow\u548cRowData\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff1a\\r\\n\\r\\n1. Row\u662ffinal class\uff0c\u4f4d\u4e8eflink-core\u5305\uff1bRowData\u662f\u63a5\u53e3\uff0c\u4f4d\u4e8eflink-table-common\u5305\uff1b\\r\\n2. Row\u5305\u542b\u5b57\u6bb5\u6570\u636e\u548cRowKind\uff0c\u800cRowData\u53ea\u58f0\u660e\u65b9\u6cd5\uff0c\u5b57\u6bb5\u6570\u636e\u548cRowKind\u5728\u5176\u5b50\u7c7b\u4e2d\u58f0\u660e\uff1b\\r\\n3. Row\u63d0\u4f9b2\u79cd\u5b57\u6bb5\u6a21\u5f0f\uff0c\u800cRowData\u53ea\u57fa\u4e8e\u7d22\u5f15\u3002\\r\\n\\r\\nFlinkX\u63d0\u4f9b\u4ee5Flink SQL\u6267\u884c\u540c\u6b65\u4efb\u52a1\u7684\u529f\u80fd\uff0c\u56e0\u6b64\u8f93\u51fa\u7c7b\u578b\u9009\u62e9\u548cFlink Table/SQL API\u66f4\u52a0\u8d34\u8fd1\u7684RowData\u3002\u8fd9\u91cc\u6211\u8fd8\u662f\u5148\u9009\u62e9\u4f7f\u7528Row\u4f5c\u4e3aFlinky\u7684\u8f93\u51fa\u8f93\u5165\u7c7b\u578b\uff0c\u4ee5\u540e\u518d\u6269\u5c55\u63a5\u5165Flink Table/SQL API\u3002"},{"id":"/2022/04/06/Java_Implement_of_LRU&LFU","metadata":{"permalink":"/blog/2022/04/06/Java_Implement_of_LRU&LFU","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2022/04/06-Java_Implement_of_LRU&LFU.md","source":"@site/blog/2022/04/06-Java_Implement_of_LRU&LFU.md","title":"Java\u5b9e\u73b0LRU\u548cLFU","description":"Java\u5b9e\u73b0LRU\u548cLFU","date":"2022-04-06T00:00:00.000Z","formattedDate":"April 6, 2022","tags":[{"label":"LRU","permalink":"/blog/tags/lru"},{"label":"LFU","permalink":"/blog/tags/lfu"}],"readingTime":16.215,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"Java\u5b9e\u73b0LRU\u548cLFU","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["LRU","LFU"],"description":"Java\u5b9e\u73b0LRU\u548cLFU","hide_table_of_contents":false},"prevItem":{"title":"Flink\u4e2dRow\u548cRowData\u533a\u522b","permalink":"/blog/2022/05/19/Row&RowData-in-Flink"},"nextItem":{"title":"HashMap\u77e5\u8bc6\u70b9\u603b\u7ed3","permalink":"/blog/2022/03/12/HashMapSummary"}},"content":":pencil:\u5982\u4f55\u7528Java\u6765\u5b9e\u73b0LRU\u548cLFU\u4e24\u79cd\u7b97\u6cd5\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## LRU\\r\\n\\r\\n\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u7b97\u6cd5(Least Recently Used, LRU)\u662f\u6700\u5e38\u7528\u7684\u7f13\u5b58\u6dd8\u6c70\u7b97\u6cd5\uff1a\u5f53\u7f13\u5b58\u7a7a\u95f4\u4e0d\u591f\u65f6\uff0c\u5c06\u4e0a\u4e00\u6b21\u8bbf\u95ee\u65f6\u95f4\u6700\u65e9\u7684\u8bb0\u5f55\u6dd8\u6c70\u540e\u52a0\u5165\u65b0\u8bb0\u5f55\u3002[Leetcode 146. LRU \u7f13\u5b58](https://leetcode-cn.com/problems/lru-cache/)\u8981\u6c42\u5b9e\u73b0\u5305\u542b\u5982\u4e0b\u65b9\u6cd5\u7684LRUCache\u7c7b\u6765\u6a21\u62dfLRU\u7f13\u5b58\uff1a\\r\\n\\r\\n1. `LRUCache(int capacity)`\uff1a\u4ee5\u6b63\u6574\u6570capacity\u4f5c\u4e3a\u5bb9\u91cf\u521d\u59cb\u5316LRU\u7f13\u5b58\uff1b\\r\\n2. `int get(int key)`\uff1a\u5982\u679c\u5173\u952e\u5b57key\u5b58\u5728\u4e8e\u7f13\u5b58\u4e2d\uff0c\u5219\u8fd4\u56de\u5bf9\u5e94\u503c\uff0c\u5426\u5219\u8fd4\u56de-1\uff1b\\r\\n3. `void put(int key, int value)`\uff1a\u5982\u679c\u5173\u952e\u5b57key\u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u66f4\u65b0\u5bf9\u5e94\u503c\u4e3avalue\uff1b\u5982\u679ckey\u4e0d\u5b58\u5728\u5219\u5411\u7f13\u5b58\u4e2d\u63d2\u5165key-value\uff0c\u5982\u679c\u63d2\u5165\u540e\u952e\u503c\u5bf9\u4e2a\u6570\u8d85\u8fc7capacity\uff0c\u5219\u6dd8\u6c70\u6700\u4e45\u672a\u4f7f\u7528\u7684\u952e\u503c\u5bf9\u3002\\r\\n\\r\\n### \u54c8\u5e0c\u8868\u52a0\u53cc\u5411\u94fe\u8868\\r\\n\\r\\n\u53ef\u4ee5\u901a\u8fc7\u54c8\u5e0c\u8868\u6765\u7ef4\u62a4\u952e\u503c\u5bf9\u7684\u552f\u4e00\u6027\u3001\u53cc\u5411\u94fe\u8868\u6765\u7ef4\u62a4\u5143\u7d20\u8bbf\u95ee\u987a\u5e8f\u4ece\u800c\u5b9e\u73b0LRU\u7f13\u5b58\u3002\u8bbe\u8ba1\u53cc\u5411\u94fe\u8868\u7684\u9996\u8282\u70b9\u662f\u6700\u65b0\u521a\u88ab\u8bbf\u95ee\u7684\u8282\u70b9\uff0c\u5c3e\u8282\u70b9\u662f\u6700\u4e45\u672a\u88ab\u8bbf\u95ee\u7684\u8282\u70b9\uff0c\u6ce8\u610f\u201c**\u8bbf\u95ee**\u201d\u5305\u542b\u67e5\u8be2\u3001\u66f4\u65b0\u3001\u65b0\u589e3\u79cd\u64cd\u4f5c\uff0c\u56e0\u6b64\u6bcf\u6b21\u8fdb\u884c\u5982\u4e0a\u64cd\u4f5c\u65f6\u90fd\u9700\u8981\u5c06\u5bf9\u5e94\u8282\u70b9\u4ece\u53cc\u5411\u94fe\u8868\u4e2d\u5220\u9664\u5e76\u632a\u52a8\u4e3a\u5934\u8282\u70b9\u3002\u5177\u4f53\u5730\uff0c\u5bf9\u4e8eget\u3001put\u65b9\u6cd5\uff0c\u8bbe\u8ba1\u903b\u8f91\u5982\u4e0b\uff1a\\r\\n\\r\\n1. get\u65b9\u6cd5\u5148\u5224\u65adkey\u662f\u5426\u5b58\u5728\uff1b\\r\\n   1. key\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de-1\uff1b\\r\\n   2. key\u5b58\u5728\uff0c\u8fd4\u56devalue\u3002**\u6b64\u65f6key\u662f\u6700\u8fd1\u88ab\u4f7f\u7528\u7684\u8282\u70b9\uff0c\u5c06\u5176\u632a\u5230\u53cc\u5411\u94fe\u8868\u7684\u5934\u90e8**\u3002\\r\\n2. put\u65b9\u6cd5\u5148\u5224\u65adkey\u662f\u5426\u5b58\u5728\uff1a\\r\\n   1. key\u4e0d\u5b58\u5728\uff0c\u76f4\u63a5\u63d2\u5165\u5230\u54c8\u5e0c\u8868\uff0c**\u63a5\u7740\u5224\u65ad\u662f\u5426\u8d85\u8fc7\u7f13\u5b58\u5927\u5c0f\uff0c\u662f\u7684\u8bdd\u5c31\u6dd8\u6c70\u94fe\u8868\u5c3e\u90e8\u7684\u952e\u503c\u5bf9**\uff1b\\r\\n   2. key\u5b58\u5728\uff0c\u5219\u66f4\u65b0\u54c8\u5e0c\u8868\u4e2d\u5bf9\u5e94value\uff0c\u5e76\u5c06\u5176\u632a\u5230\u94fe\u8868\u5934\u90e8\uff1b\\r\\n   3. \u5c06\u65b0\u589ekey\u5bf9\u5e94\u8282\u70b9\u79fb\u5230\u94fe\u8868\u5934\u90e8\u3002\\r\\n\\r\\n:::info \u603b\u7ed3\\r\\n\u9664\u4e86get\u65b9\u6cd5key\u4e0d\u5b58\u5728\u5916\uff0c\u5176\u4ed6\u60c5\u51b5\u90fd\u9700\u8981\u66f4\u65b0key\u4e3a\u53cc\u5411\u4fe9\u8868\u7684\u5934\u8282\u70b9(\u522b\u5fd8\u4e86\u8fd9\u4e2a\u903b\u8f91)\u3002\u5f53\u63d2\u5165key\u5b58\u5728\u65f6\u8fd8\u9700\u8981\u5224\u65ad\u662f\u5426\u9700\u8981\u6dd8\u6c70key\u3002\\r\\n:::\\r\\n\\r\\n```java\\r\\npublic class LRUCache {\\r\\n    private Map<Integer, Integer> map;\\r\\n    private Deque<Integer> queue;\\r\\n    private int capacity;\\r\\n\\r\\n    public LRUCache(int capacity) {\\r\\n        this.map = new HashMap<>();\\r\\n        this.queue = new LinkedList<>();\\r\\n        this.capacity = capacity;\\r\\n    }\\r\\n\\r\\n    public int get(int key) {\\r\\n        if(map.containsKey(key)) {\\r\\n            removeToFirst(key);\\r\\n            return map.get(key);\\r\\n        } else {\\r\\n            return -1;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public void put(int key, int value) {\\r\\n        if(map.containsKey(key)) {\\r\\n            removeToFirst(key);\\r\\n            map.put(key, value);\\r\\n        } else {\\r\\n            queue.addFirst(key);\\r\\n            map.put(key, value);\\r\\n            if(map.size() > capacity) {\\r\\n                int last = queue.removeLast();\\r\\n                map.remove(last);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public void removeToFirst(int key) {\\r\\n        queue.remove(key);\\r\\n        queue.addFirst(key);\\r\\n    }\\r\\n\\r\\n}\\r\\n```\\r\\n\\r\\n### \u7ee7\u627fLinkedHashMap\\r\\n\\r\\n\u5b9e\u9645\u4e0a\uff0cJava\u5185\u7f6e\u7684LinkedHashMap\u7c7b\u5df2\u7ecf\u5c06\u5176\u6240\u6709\u952e\u503c\u5bf9\u7ef4\u62a4\u6210\u53cc\u5411\u94fe\u8868\uff0c\u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7\u7ee7\u627fLinkedHashMap\u6765\u5feb\u901f\u5730\u5b9e\u73b0LRUCache\u7c7b\u3002LinkedHashMap\u901a\u8fc7\u5982\u4e0b3\u4e2a\u56de\u8c03\u51fd\u6570\u7ef4\u62a4\u53cc\u5411\u94fe\u8868\u7684\u987a\u5e8f\uff1a\\r\\n\\r\\n1. `void afterNodeAccess(Node<K,V> e)`\uff1a\u8bbf\u95ee\u8282\u70b9e\u540e\uff0c\u5c06\u8282\u70b9e\u632a\u81f3\u53cc\u5411\u94fe\u8868\u5c3e\u90e8\uff1b\\r\\n\\r\\n```java\\r\\nvoid afterNodeAccess(Node<K,V> e) { // move node to last\\r\\n    LinkedHashMap.Entry<K,V> last;\\r\\n    if (accessOrder && (last = tail) != e) {\\r\\n        LinkedHashMap.Entry<K,V> p =\\r\\n            (LinkedHashMap.Entry<K,V>)e, b = p.before, a = p.after;\\r\\n        p.after = null;\\r\\n        if (b == null)\\r\\n            head = a;\\r\\n        else\\r\\n            b.after = a;\\r\\n        if (a != null)\\r\\n            a.before = b;\\r\\n        else\\r\\n            last = b;\\r\\n        if (last == null)\\r\\n            head = p;\\r\\n        else {\\r\\n            p.before = last;\\r\\n            last.after = p;\\r\\n        }\\r\\n        tail = p;\\r\\n        ++modCount;\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n2. `void afterNodeRemoval(Node<K,V> e)`\uff1a\u5220\u9664\u8282\u70b9e\u540e\uff0c\u5c06\u8282\u70b9e\u4ece\u53cc\u5411\u94fe\u8868\u4e2d\u5220\u9664\uff1b\\r\\n\\r\\n```java\\r\\nvoid afterNodeRemoval(Node<K,V> e) { // unlink\\r\\n    LinkedHashMap.Entry<K,V> p =\\r\\n        (LinkedHashMap.Entry<K,V>)e, b = p.before, a = p.after;\\r\\n    p.before = p.after = null;\\r\\n    if (b == null)\\r\\n        head = a;\\r\\n    else\\r\\n        b.after = a;\\r\\n    if (a == null)\\r\\n        tail = b;\\r\\n    else\\r\\n        a.before = b;\\r\\n}\\r\\n```\\r\\n\\r\\n3. `void afterNodeInsertion(boolean evict)`\uff1a\u63d2\u5165\u8282\u70b9e\u540e\uff0c\u5224\u65ad\u662f\u5426\u5c06\u5934\u8282\u70b9\u4ece\u53cc\u5411\u94fe\u8868\u4e2d\u5220\u9664\u3002\\r\\n\\r\\n```java\\r\\nvoid afterNodeInsertion(boolean evict) { // possibly remove eldest\\r\\n    LinkedHashMap.Entry<K,V> first;\\r\\n    if (evict && (first = head) != null && removeEldestEntry(first)) {\\r\\n        K key = first.key;\\r\\n        removeNode(hash(key), key, null, false, true);\\r\\n    }\\r\\n}\\r\\n\\r\\nprotected boolean removeEldestEntry(Map.Entry<K,V> eldest) {\\r\\n    return false;\\r\\n}\\r\\n```\\r\\n\\r\\n\u53ef\u4ee5\u770b\u5230\uff0c\u6210\u5458\u53d8\u91cfaccessOrder\u548c\u65b9\u6cd5removeEldestEntry\u5f71\u54cd\u7740\u8bbf\u95ee\u548c\u63d2\u5165\u8282\u70b9\u540e\u7684\u56de\u8c03\u51fd\u6570\u884c\u4e3a\u3002\u5176\u4e2daccessOrder\u9ed8\u8ba4\u4e3afalse\uff0c\u8868\u793a\u5143\u7d20\u8bbf\u95ee\u4e0d\u5f71\u54cd\u5b83\u5728\u53cc\u5411\u94fe\u8868\u4e2d\u7684\u4f4d\u7f6e(\u6309\u7167\u63d2\u5165\u987a\u5e8f\u6392\u5e8f\u800c\u4e0d\u662f\u8bbf\u95ee\u987a\u5e8f)\uff0c\u800cLRU\u7b97\u6cd5\u8981\u6c42\u6309\u7167\u8bbf\u95ee\u987a\u5e8f\u7ef4\u62a4\u53cc\u5411\u94fe\u8868\uff0c**\u56e0\u6b64\u9700\u8981\u5c06\u5176\u8bbe\u7f6e\u4e3atrue**\uff0c\u6b64\u65f6\u53ea\u80fd\u901a\u8fc7`public LinkedHashMap(int initialCapacity,float loadFactor,boolean accessOrder)`\u6784\u9020\u51fd\u6570\u6765\u8bbe\u7f6e\u3002\\r\\n\\r\\n\u53e6\u5916\uff0cremoveEldestEntry\u65b9\u6cd5\u9ed8\u8ba4\u8fd4\u56defalse\uff0c\u8868\u793a\u5143\u7d20\u63d2\u5165\u540e\u4e0d\u6dd8\u6c70\u6700\u8001\u7684\u8282\u70b9\uff0c\u800cLRU\u7b97\u6cd5\u8981\u6c42\u7f13\u5b58\u5bb9\u91cf\u6ee1\u65f6\u5220\u9664\u6700\u8001\u8282\u70b9\uff0c\u56e0\u6b64\u9700\u8981\u91cd\u5199\u8be5\u65b9\u6cd5\u3002\u7efc\u4e0a\u6240\u8ff0\uff0c\u5b9e\u73b0\u7ee7\u627f\u81eaLinkedHashMap\u7684LRUCache\u7c7b\u4ee3\u7801\u5982\u4e0b\uff1a\\r\\n\\r\\n```java\\r\\nclass LRUCache extends LinkedHashMap<Integer, Integer>{\\r\\n    private int capacity;\\r\\n    \\r\\n    public LRUCache(int capacity) {\\r\\n        super(capacity, 0.75F, true);\\r\\n        this.capacity = capacity;\\r\\n    }\\r\\n\\r\\n    public int get(int key) {\\r\\n        return super.getOrDefault(key, -1);\\r\\n    }\\r\\n\\r\\n    // \u8fd9\u4e2a\u53ef\u4e0d\u5199\\r\\n    public void put(int key, int value) {\\r\\n        super.put(key, value);\\r\\n    }\\r\\n\\r\\n    @Override\\r\\n    protected boolean removeEldestEntry(Map.Entry<Integer, Integer> eldest) {\\r\\n        return size() > capacity; \\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n:::caution \u6ce8\u610f\\r\\n\u5728LinkHashMap\u4e2d\uff0c\u53cc\u5411\u94fe\u8868\u7684\u5934\u8282\u70b9\u8868\u793a\u6700\u8001\u7684\u8282\u70b9\uff0c\u800c\u5c3e\u8282\u70b9\u624d\u8868\u793a\u6700\u65b0\u7684\u8282\u70b9\u3002\\r\\n:::\\r\\n\\r\\n## LFU\\r\\n\\r\\n\u6700\u4e0d\u7ecf\u5e38\u4f7f\u7528(Least Recently Used, LRU)\u7b97\u6cd5\uff1a\u5f53\u7f13\u5b58\u7a7a\u95f4\u4e0d\u591f\u65f6\uff0c\u5c06\u8bbf\u95ee\u9891\u7387\u6700\u4f4e\u7684\u8bb0\u5f55\u6dd8\u6c70\u540e\u52a0\u5165\u65b0\u8bb0\u5f55\u3002[Leetcode 460. LFU\u7f13\u5b58](https://leetcode-cn.com/problems/lfu-cache/)\u8981\u6c42\u5b9e\u73b0\u5305\u542b\u5982\u4e0b\u65b9\u6cd5\u7684LFUCache\u7c7b\u6765\u6a21\u62dfLFU\u7f13\u5b58\uff1a\\r\\n\\r\\n1. `LFUCache(int capacity)`\uff1a\u4ee5\u6b63\u6574\u6570capacity\u4f5c\u4e3a\u5bb9\u91cf\u521d\u59cb\u5316LFU\u7f13\u5b58\uff1b\\r\\n2. `int get(int key)`\uff1a\u5982\u679c\u5173\u952e\u5b57key\u5b58\u5728\u4e8e\u7f13\u5b58\u4e2d\uff0c\u5219\u8fd4\u56de\u5bf9\u5e94\u503c\uff0c\u5426\u5219\u8fd4\u56de-1\uff1b\\r\\n3. `void put(int key, int value)`\uff1a\u5982\u679c\u5173\u952e\u5b57key\u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u66f4\u65b0\u5bf9\u5e94\u503c\u4e3avalue\uff1b\u5982\u679ckey\u4e0d\u5b58\u5728\u5219\u5411\u7f13\u5b58\u4e2d\u63d2\u5165key-value\uff0c\u5982\u679c\u63d2\u5165\u540e\u952e\u503c\u5bf9\u4e2a\u6570\u8d85\u8fc7capacity\uff0c\u5219\u6dd8\u6c70\u6700\u4e0d\u7ecf\u5e38\u4f7f\u7528\u7684\u952e\u503c\u5bf9\uff0c**\u5982\u679c\u4f7f\u7528\u9891\u7387\u76f8\u540c\uff0c\u5219\u6dd8\u6c70\u6700\u8fd1\u6700\u4e45\u672a\u4f7f\u7528\u7684\u952e\u503c\u5bf9**\u3002\\r\\n\\r\\n### \u54c8\u5e0c\u8868\u52a0\u5e73\u8861\u4e8c\u53c9\u6811\\r\\n\\r\\n\u4e0e\u5b9e\u73b0LRU\u7b97\u6cd5\u4ec5\u9760\u53cc\u5411\u94fe\u8868\u5c31\u53ef\u4ee5\u5b9e\u73b0\u6309\u7167\u8bbf\u95ee\u65f6\u95f4\u5148\u540e\u6392\u5e8f\u540c\u6b65\uff0cLFU\u7b97\u6cd5\u9700\u8981\u5148\u6bd4\u9891\u7387\u518d\u6bd4\u8bbf\u95ee\u65f6\u95f4\uff0c\u8fd9\u91cc\u9009\u62e9\u5e73\u8861\u4e8c\u53c9\u6811\u6309\u7167\u8be5\u6bd4\u8f83\u903b\u8f91\u6765\u7ef4\u62a4\u952e\u503c\u5bf9\u7684\u987a\u5e8f\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u6dfb\u52a0\u5c5e\u6027freq\u548ctime\u5206\u522b\u8868\u793a\u5bf9\u5e94key\u7684\u8bbf\u95ee\u6b21\u6570\u548c\u8bbf\u95ee\u65f6\u95f4\uff1afreq\u8d8a\u5927\u8868\u793a\u8bbf\u95ee\u9891\u7387\u8d8a\u9ad8\uff0ctime\u8d8a\u5927\u8868\u793a\u8bbf\u95ee\u65f6\u95f4\u6700\u65b0\u3002\u5177\u4f53\u5730\uff0c\u5bf9\u4e8eget\u3001put\u65b9\u6cd5\uff0c\u8bbe\u8ba1\u903b\u8f91\u5982\u4e0b\uff1a\\r\\n\\r\\n1. get\u65b9\u6cd5\u5148\u5224\u65adkey\u662f\u5426\u5b58\u5728\uff1b\\r\\n   1. key\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de-1\uff1b\\r\\n   2. key\u5b58\u5728\uff0c\u8fd4\u56devalue\u3002**\u6b64\u65f6key\u8bbf\u95ee\u6b21\u6570\u52a01\uff0c\u8bbf\u95ee\u65f6\u95f4\u52a01**\uff0c\u5e76\u4e14\u7531\u4e8e\u8fd9\u4e24\u4e2a\u5c5e\u6027\u503c\u6539\u53d8\uff0c\u9700\u8981\u91cd\u65b0\u5c06\u5176\u4ece\u5e73\u8861\u4e8c\u53c9\u6811\u4e2d\u5220\u9664\u518d\u63d2\u5165\uff0c\u4ee5\u7ef4\u6301\u4e8c\u53c9\u6811\u7684\u6709\u5e8f\u6027\u3002\\r\\n2. put\u65b9\u6cd5\u5148\u5224\u65adkey\u662f\u5426\u5b58\u5728\uff1a\\r\\n   1. key\u4e0d\u5b58\u5728\uff0c**\u5148\u5224\u65ad\u662f\u5426\u7f13\u5b58\u662f\u5426\u5df2\u6ee1\uff0c\u662f\u7684\u8bdd\u5c31\u6dd8\u6c70\u4e8c\u53c9\u6811\u4e2d\u6700\u5c0f\u7684\u8282\u70b9**\uff0c\u63a5\u7740\u8bbe\u7f6e\u65b0\u8282\u70b9freq=1\uff0ctime=1\u540e\u63d2\u5165\u5230\u5e73\u8861\u4e8c\u53c9\u6811\u4e2d\uff1b\\r\\n   2. key\u5b58\u5728\uff0c\u5219\u66f4\u65b0\u54c8\u5e0c\u8868\u4e2d\u5bf9\u5e94value\uff0c\u540c\u65f6\u8bbf\u95ee\u6b21\u6570\u52a01\uff0c\u8bbf\u95ee\u65f6\u95f4\u52a01\uff0c\u66f4\u65b0\u4e8c\u53c9\u6811(\u5148\u5220\u9664\u518d\u63d2\u5165)\uff1b\\r\\n\\r\\n```java\\r\\npublic class LFUCache {\\r\\n    private Map<Integer, Node> map;\\r\\n    private SortedSet<Node> avl;\\r\\n    private int capacity;\\r\\n    // \u53ea\u6709\u65b0\u589e\u8bb0\u5f55\u65f6time\u624d\u4f1a\u52a01\\r\\n    private int time;\\r\\n\\r\\n    public LFUCache(int capacity) {\\r\\n        this.map = new HashMap<>();\\r\\n        this.avl = new TreeSet<>();\\r\\n        this.capacity = capacity;\\r\\n        this.time = 0;\\r\\n    }\\r\\n\\r\\n    public int get(int key) {\\r\\n        if(capacity == 0 || !map.containsKey(key)) {\\r\\n            return -1;\\r\\n        }\\r\\n        // \u901a\u8fc7\u54c8\u5e0c\u8868\u627e\u5230Node\uff0c\u66f4\u65b0\u5176\u9891\u7387\u548c\u8bbf\u95ee\u65f6\u95f4\uff0c\u8c03\u6574\u8282\u70b9\u5728TreeSet\u4e2d\u4f4d\u7f6e(\u5148\u5220\u9664\u540e\u52a0\u5165)\\r\\n        Node node = map.get(key);\\r\\n        avl.remove(node);\\r\\n        node.freq += 1;\\r\\n        node.time = ++time;\\r\\n        avl.add(node);\\r\\n        return node.value;\\r\\n    }\\r\\n\\r\\n    public void put(int key, int value) {\\r\\n        if(capacity == 0) {\\r\\n            return;\\r\\n        }\\r\\n        // 1. \u5df2\u7ecf\u5b58\u5728\u5219\u66f4\u65b0\u9891\u7387\u548c\u8bbf\u95ee\u65f6\u95f4\uff0c\u903b\u8f91\u540cget\u547d\u4e2d\\r\\n        if(map.containsKey(key)) {\\r\\n            Node node = map.get(key);\\r\\n            avl.remove(node);\\r\\n            node.freq += 1;\\r\\n            node.time = ++time;\\r\\n            node.value = value;\\r\\n            avl.add(node);\\r\\n            map.put(key, node);      // put\u548creturn\u522b\u6f0f\u4e86\uff01\\r\\n            return;\\r\\n        }\\r\\n        // 2. \u5982\u679c\u7f13\u5b58\u5df2\u6ee1\uff0c\u5148\u4ece\u4ece\u54c8\u5e0c\u8868\u548c\u5e73\u8861\u4e8c\u53c9\u6811\u4e2d\u5220\u9664\u6700\u4e0d\u5e38\u8bbf\u95ee\u8282\u70b9\\r\\n        if(map.size() == capacity) {\\r\\n            Node exile = avl.first();\\r\\n            map.remove(exile.key);\\r\\n            avl.remove(exile);\\r\\n        }\\r\\n        // 3. \u6784\u9020\u65b0\u8282\u70b9\u52a0\u5165\u5230\u54c8\u5e0c\u8868\u548c\u5e73\u8861\u4e8c\u53c9\u6811\u4e2d\\r\\n        Node node = new Node(1, ++time, key, value);\\r\\n        map.put(key, node);\\r\\n        avl.add(node);\\r\\n    }\\r\\n\\r\\n    private class Node implements Comparable<Node> {\\r\\n        private int freq;\\r\\n        private int time;\\r\\n        private int key;\\r\\n        private int value;\\r\\n\\r\\n        private Node(int freq, int time, int key, int value) {\\r\\n            this.freq = freq;\\r\\n            this.time = time;\\r\\n            this.key = key;\\r\\n            this.value = value;\\r\\n        }\\r\\n\\r\\n        // \u7531\u4e8eNode\u4f5c\u4e3aTreeSet\u7684\u5143\u7d20\uff0c\u5fc5\u987b\u91cd\u5199equals\u548chashcode\u65b9\u6cd5\\r\\n        public boolean equals(Object object) {\\r\\n            if(this == object) {\\r\\n                return true;\\r\\n            }\\r\\n            if(object instanceof Node) {\\r\\n                Node node = (Node) object;\\r\\n                return this.freq == node.freq && this.time == node.time;\\r\\n            }\\r\\n            return false;\\r\\n        }\\r\\n\\r\\n        public int hashCode() {\\r\\n            return freq * 1000000007 + time;\\r\\n        }\\r\\n\\r\\n        @Override\\r\\n        public int compareTo(Node another) {\\r\\n            return (this.freq == another.freq) ? this.time - another.time : this.freq - another.freq;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n\u5728\u7f16\u7a0b\u65f6\u8981\u6ce8\u610f\u5982\u4e0b\u51e0\u70b9\uff1a\\r\\n\\r\\n1. Node\u5fc5\u987b\u91cd\u5199equals\u548chashCode\u65b9\u6cd5\uff0c\u5b9e\u73b0comparable\u63a5\u53e3\uff1b\\r\\n2. \u8282\u70b9\u8bbf\u95ee\u65f6\u95f4\u5e94\u8be5\u4f7f\u7528LFUCache\u7edf\u4e00\u7ef4\u62a4\u7684\u65f6\u949f\uff0c\u5c24\u5176\u6ce8\u610f\u66f4\u65b0\u8282\u70b9\u7684time\u4e0d\u80fd\u7b80\u5355\u5199\u6210`node.time += 1`\uff1b\\r\\n3. \u5220\u9664\u3001\u66f4\u65b0\u4e8c\u53c9\u6811\u8282\u70b9\u65f6\u4e0d\u8981\u5fd8\u8bb0\u5bf9\u54c8\u5e0c\u8868\u8fdb\u884c\u76f8\u540c\u64cd\u4f5c\uff1b\\r\\n4. \u8be5\u4ee3\u7801\u5b9e\u73b0\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(logN)\uff0c\u6ca1\u80fd\u8fbe\u5230\u539f\u9898\u8981\u6c42\u7684O(1)\u3002\\r\\n\\r\\n### \u53cc\u54c8\u5e0c\u8868\\r\\n\\r\\n\u5bf9\u4e8eLRU\u548cLFU\u7b97\u6cd5\u4e0d\u96be\u53d1\u73b0\uff1a**\u5f53\u4f7f\u7528\u9891\u7387\u76f8\u540c\u65f6\uff0cLFU\u5c31\u9000\u5316\u6210\u4e86LRU\uff1b\u5f53\u4f7f\u7528\u9891\u7387\u4e0d\u540c\u65f6\uff0c\u53ea\u5173\u5fc3\u4f7f\u7528\u9891\u7387\u6700\u4f4e\u7684**\u3002\u501f\u9274LRU\u7684\u601d\u8def\uff0c\u8bbe\u8ba1\u4e24\u4e2a\u54c8\u5e0c\u8868freqMap\u548ckeyMap\uff0c\u524d\u8005key\u4e3a\u4f7f\u7528\u9891\u7387\u800cvalue\u4e3a\u53cc\u5411\u94fe\u8868\u8282\u70b9\uff0c\u540e\u8005\u7528\u4e8e\u5b58\u50a8\u7f13\u5b58\uff0c\u5e76\u4e14\u4f7f\u7528minFreq\u4fdd\u5b58\u5f53\u524d\u6700\u4f4e\u7684\u4f7f\u7528\u9891\u7387\u3002\u5177\u4f53\u5730\uff0c\u5bf9\u4e8eget\u3001put\u65b9\u6cd5\uff0c\u8bbe\u8ba1\u903b\u8f91\u5982\u4e0b\uff1a\\r\\n\\r\\n1. get\u65b9\u6cd5\u5148\u5224\u65adkey\u662f\u5426\u5b58\u5728\u4e8ekeyMap\u4e2d\uff1b\\r\\n   1. key\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de-1\uff1b\\r\\n   2. key\u5b58\u5728\uff0c\u8fd4\u56devalue\u3002**\u6b64\u65f6key\u8bbf\u95ee\u6b21\u6570\u52a01**\uff0c\u5e76\u4e14\u9700\u8981\u5c06\u5176\u632a\u52a8\u5230\u5bf9\u5e94freq\u7684\u53cc\u5411\u94fe\u8868\u7684\u5934\u90e8\uff1b\\r\\n   3. \u66f4\u65b0minFreq\u3002\\r\\n2. put\u65b9\u6cd5\u5148\u5224\u65adkey\u662f\u5426\u5b58\u5728\uff1a\\r\\n   1. key\u4e0d\u5b58\u5728\uff0c**\u5148\u5224\u65ad\u662f\u5426\u7f13\u5b58\u662f\u5426\u5df2\u6ee1\uff0c\u662f\u7684\u8bdd\u5c31\u6dd8\u6c70freqMap\u4e2dfreq\u5bf9\u5e94\u94fe\u8868\u7684\u5c3e\u8282\u70b9**\uff0c\u63a5\u7740\u8bbe\u7f6e\u65b0\u8282\u70b9freq=1\uff0c\u63d2\u5165\u5230freqMap\u548ckeyMap\uff1b\\r\\n   2. key\u5b58\u5728\uff0c\u5219\u66f4\u65b0keyMap\u4e2d\u5bf9\u5e94value\uff0c\u5269\u4f59\u64cd\u4f5c\u540cget\u65b9\u6cd5\u547d\u4e2d\uff1b\\r\\n   3. \u66f4\u65b0minFreq\u3002\\r\\n\\r\\n```java\\r\\npublic class LFUCache {\\r\\n    private Map<Integer, Deque<Node>> freqMap;\\r\\n    private Map<Integer, Node> keyMap;\\r\\n    private int minFreq;\\r\\n    private int capacity;\\r\\n\\r\\n    public LFUCache(int capacity) {\\r\\n        freqMap = new HashMap<>();\\r\\n        keyMap = new HashMap<>();\\r\\n        minFreq = 0;\\r\\n        this.capacity = capacity;\\r\\n    }\\r\\n\\r\\n    public int get(int key) {\\r\\n        if(capacity == 0 || !keyMap.containsKey(key)) {\\r\\n            return -1;\\r\\n        }\\r\\n        /**\\r\\n         * \u7f13\u5b58\u547d\u4e2d\\r\\n         * 1. \u4ecekeyMap\u548cfreqMap\u4e2d\u5220\u9664\u5bf9\u5e94node\\r\\n         * 2. \u5982\u679cfreqMap\u5220\u9664node\u540e\u7684\u961f\u5217\u4e3a\u7a7a\u8868\u793a\u5df2\u7ecf\u6ca1\u6709\u8be5\u9891\u7387\u7684\u7f13\u5b58\uff0c\u6b64\u65f6\u8fdb\u4e00\u6b65\u5224\u65ad\u66f4\u65b0minFreq\\r\\n         * 3. \u66f4\u65b0freqMap\uff0c\u5c06node\u9891\u7387\u52a01\uff0c\u63d2\u5165\u5230\u5bf9\u5e94\u961f\u5217\u4e2d\\r\\n         */\\r\\n        Node node = keyMap.get(key);\\r\\n        int val = node.value, freq = node.freq;\\r\\n        Deque<Node> originQueue = freqMap.get(freq);\\r\\n        originQueue.remove(node);\\r\\n        if(originQueue.isEmpty()) {\\r\\n            freqMap.remove(freq);\\r\\n            if(minFreq == freq) {\\r\\n                minFreq += 1;\\r\\n            }\\r\\n        }\\r\\n        Deque<Node> currentQueue = freqMap.getOrDefault(freq+1, new LinkedList<>());\\r\\n        Node newNode = new Node(key, val, freq+1);\\r\\n        currentQueue.offerFirst(newNode);\\r\\n        keyMap.put(key, newNode);\\r\\n        freqMap.put(freq+1, currentQueue);\\r\\n        return node.value;\\r\\n    }\\r\\n\\r\\n    public void put(int key, int value) {\\r\\n        if(capacity == 0)   return;\\r\\n        // \u547d\u4e2d\u7f13\u5b58\u5219\u66f4\u65b0value\u503c\uff0c\u5176\u4ed6\u903b\u8f91\u540cget\u547d\u4e2d\uff0c\\r\\n        if(keyMap.containsKey(key)) {\\r\\n            Node node = keyMap.get(key);\\r\\n            Deque<Node> originQueue = freqMap.get(node.freq);\\r\\n            originQueue.remove(node);\\r\\n            if(originQueue.isEmpty()) {\\r\\n                freqMap.remove(node.freq);\\r\\n                if(minFreq == node.freq) {\\r\\n                    minFreq += 1;\\r\\n                }\\r\\n            }\\r\\n            node.value = value;\\r\\n            node.freq++;\\r\\n            Deque<Node> newQueue = freqMap.getOrDefault(node.freq, new LinkedList<>());\\r\\n            newQueue.offerFirst(node);\\r\\n            freqMap.put(node.freq, newQueue);\\r\\n        } else {\\r\\n            /**\\r\\n             * \u589e\u52a0\u7f13\u5b58\u4e4b\u524d\u5148\u5224\u65ad\u662f\u5426\u5df2\u6ee1\uff0c\u6dd8\u6c70\u903b\u8f91\\r\\n             * 1. \u627e\u5230minFreq\u5bf9\u5e94\u7684queue\\r\\n             * 2. queue\u5220\u9664\u5176\u5c3e\u8282\u70b9\\r\\n             * 3. keyMap\u5220\u9664\u8282\u70b9\\r\\n             * 4. \u5982\u679cqueue\u5220\u9664\u540e\u4e3a\u7a7a\u9700\u8981\u79fb\u9664\u6574\u4e2a\u961f\u5217\\r\\n             * 5. \u91cd\u65b0\u8bbe\u7f6eminFreq\u4e3a1\\r\\n             */\\r\\n            if(keyMap.size() == capacity) {\\r\\n                Deque<Node> minQueue = freqMap.get(minFreq);\\r\\n                Node exile = minQueue.getLast();\\r\\n                keyMap.remove(exile.key);\\r\\n                minQueue.removeLast();\\r\\n                // \u4e0d\u9700\u8981\u79fb\u9664\uff0c\u590d\u7528\u961f\u5217\\r\\n                // if(minQueue.isEmpty()) {\\r\\n                //    freqMap.remove(minFreq);\\r\\n                // }\\r\\n            }\\r\\n            /**\\r\\n             * \u65b0\u589e\u8282\u70b9\u903b\u8f91\\r\\n             * 1. \u521d\u59cbfreq\u4e3a1\\r\\n             * 2. keyMap\u548cqueue\u6dfb\u52a0\u8282\u70b9\\r\\n             * 3. \u8bbe\u7f6eminFreq\u4e3a1\\r\\n             */\\r\\n            Node node = new Node(key, value, 1);\\r\\n            Deque<Node> minQueue = freqMap.getOrDefault(1, new LinkedList<>());\\r\\n            minQueue.addFirst(node);\\r\\n            keyMap.put(key, node);\\r\\n            freqMap.put(1, minQueue);\\r\\n            minFreq = 1;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private class Node {\\r\\n        public int key;\\r\\n        public int value;\\r\\n        public int freq;\\r\\n\\r\\n        public Node(int key, int value, int freq) {\\r\\n            this.key = key;\\r\\n            this.value = value;\\r\\n            this.freq = freq;\\r\\n        }\\r\\n    }\\r\\n\\r\\n}\\r\\n```\\r\\n\\r\\n\u5728\u7f16\u7a0b\u65f6\u8981\u6ce8\u610f\u5982\u4e0b\u51e0\u70b9\uff1a\\r\\n\\r\\n1. Map\u63a5\u53e3\u7684getOrDefault\u65b9\u6cd5\u4e0d\u4f1a\u5c06\u9ed8\u8ba4\u8fd4\u56de\u503c\u52a0\u5165\u5230\u54c8\u5e0c\u8868\uff0c\u4e00\u5f00\u59cb\u81ea\u8ba4\u4e3a\u4f1a\u81ea\u52a8\u52a0\u5165\u5bfc\u81f4\u4ee3\u7801\u62a5\u7a7a\u6307\u9488\u5f02\u5e38:clown_face:\uff1b\\r\\n2. freqMap\u7684key\u4e3a\u9891\u7387\u5927\u5c0f\u800c\u4e0d\u662f\u7f13\u5b58key\uff0c\u624b\u5feb\u5199\u6210freqMap.put(key, queue)\uff0c\u6b63\u786e\u5e94\u4e3afreqMap.put(freq, queue)\uff1b\\r\\n3. put\u65b9\u6cd5\u6ca1\u6709\u8003\u8651capacity=0\u60c5\u51b5\uff0c\u5bfc\u81f4\u4e00\u4e0a\u6765\u5c31\u662fput\u64cd\u4f5c\u65f6\u51fa\u73b0\u7a7a\u6307\u9488\u5f02\u5e38\u3002\\r\\n\\r\\n## \u603b\u7ed3\\r\\n\\r\\n1. LinkHashMap\u5728\u5143\u7d20\u8bbf\u95ee\u3001\u5220\u9664\u3001\u63d2\u5165\u5206\u522b\u5bf9\u5e943\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u901a\u8fc7\u4fee\u6539\u5f71\u54cd\u8fd93\u4e2a\u56de\u8c03\u51fd\u6570\u7684\u53d8\u91cf\u548c\u65b9\u6cd5\u6765\u5b9e\u73b0\u81ea\u5b9a\u4e49LRU\u7c7b\uff1b\\r\\n2. LinkHashMap\u7684\u53cc\u5411\u94fe\u8868\u5934\u8282\u70b9\u662f\u6700\u8001\u7684\u8282\u70b9\uff0c\u800c\u5c3e\u8282\u70b9\u624d\u662f\u6700\u65b0\u7684\u8282\u70b9\uff0c\u6216\u8005\u76f8\u53cd\uff0c\u4f46\u603b\u4e4b\u4e00\u5b9a\u8981\u5220\u9664\u6700\u65e7\u8282\u70b9\uff1b\\r\\n3. **\u672a\u6765\u5f00\u53d1sourcesflow\u65f6\uff0c\u5404\u79cd\u8bfb\u5199\u63d2\u4ef6\u52a0\u8f7d\u540e\u7684\u7ef4\u62a4\u4e5f\u9700\u8981\u7528\u5230LRU\u7b97\u6cd5**\uff1b\\r\\n4. \u4f7f\u7528\u54c8\u5e0c\u8868\u52a0FIFO\u961f\u5217\u5b9e\u73b0LRU\uff0c\u4f7f\u7528\u54c8\u5e0c\u8868\u52a0AVL\u6216\u8005\u53cc\u54c8\u5e0c\u8868(\u522b\u5fd8\u4e86minFreq)\u5b9e\u73b0LFU\u3002\u5b9e\u73b0\u7b97\u6cd5\u90fd\u662f\u7c7b\u4f3c\u7684\uff1a\u7528\u4e00\u4e2a\u54c8\u5e0c\u8868\u7ef4\u62a4\u7f13\u5b58\u66f4\u65b0\uff0c\u7528\u53e6\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u7f13\u5b58\u6392\u5e8f\uff1b\\r\\n5. **\u65e0\u8bba\u662fget\u8fd8\u662fput\u65b9\u6cd5\uff0c\u90fd\u8981\u89c6\u4e3a\u201c\u8bbf\u95ee\u201d\u6b21\u6570\u52a01**\u3002"},{"id":"/2022/03/12/HashMapSummary","metadata":{"permalink":"/blog/2022/03/12/HashMapSummary","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2022/03/12-HashMapSummary.md","source":"@site/blog/2022/03/12-HashMapSummary.md","title":"HashMap\u77e5\u8bc6\u70b9\u603b\u7ed3","description":"HashMap\u77e5\u8bc6\u70b9\u603b\u7ed3","date":"2022-03-12T00:00:00.000Z","formattedDate":"March 12, 2022","tags":[{"label":"HashMap","permalink":"/blog/tags/hash-map"},{"label":"Summary","permalink":"/blog/tags/summary"}],"readingTime":3.855,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"HashMap\u77e5\u8bc6\u70b9\u603b\u7ed3","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["HashMap","Summary"],"description":"HashMap\u77e5\u8bc6\u70b9\u603b\u7ed3","hide_table_of_contents":false},"prevItem":{"title":"Java\u5b9e\u73b0LRU\u548cLFU","permalink":"/blog/2022/04/06/Java_Implement_of_LRU&LFU"},"nextItem":{"title":"MySQL\u77e5\u8bc6\u70b9\u603b\u7ed3","permalink":"/blog/2022/03/02/MySQLSummary"}},"content":":pencil:HashMap\u77e5\u8bc6\u70b9\u603b\u7ed3\uff1a\u5305\u542bHashTable\u3001HashMap\u3001ConcurrentHashMap\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## HashTable\\r\\n\\r\\n## HashMap\\r\\n\\r\\nHashMap\u7ee7\u627f\u81eaAbstractMap\u7c7b\u5e76\u5b9e\u73b0Map\u63a5\u53e3\uff0c\u662f\u4ee5K-V\u5bf9\u8fdb\u884c\u5b58\u50a8\u7684\u6570\u636e\u7ed3\u6784\u3002\u5728JDK 1.7\u4e2d\u5e95\u5c42\u6570\u636e\u7ed3\u6784\u4e3a\u6570\u7ec4\u52a0\u94fe\u8868\u3002\u4f7f\u7528Entry\u7c7b\u5b58\u50a8Key\u548cValue\uff0c\u800c\u5728JDK 1.8\u4e2d\u662f\u6570\u7ec4\u52a0\u94fe\u8868/\u7ea2\u9ed1\u6811\uff0c\u4f7f\u7528Node\u7c7b\u5b58\u50a8Key\u548cValue\u3002\\r\\n\\r\\n### \u5143\u7d20\u63d2\u5165\\r\\n\\r\\n\u5728\u63d2\u5165\u5143\u7d20\u51fa\u73b0Hash\u51b2\u7a81\u65f6\uff0cHashMap\u4f7f\u7528\u62c9\u94fe\u6cd5\u5c06\u51b2\u7a81\u7684\u952e\u503c\u5bf9\u6392\u5217\u6210\u94fe\u8868\u3002\u5728JDK 1.7\u4e2d\u4f7f\u7528\u5934\u63d2\u6cd5\uff0c\u800c\u5728JDK 1.8\u4e2d\u4f7f\u7528\u5c3e\u63d2\u6cd5(\u7b80\u8bb0\u4e03\u4e0a\u516b\u4e0b)\uff0c\u8fd9\u662f\u56e0\u4e3a\u5934\u63d2\u6cd5\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\u4f1a\u51fa\u73b0\u5faa\u73af\u94fe\u8868\u95ee\u9898\u3002\\r\\n\\r\\n### \u94fe\u8868\u8f6c\u7ea2\u9ed1\u6811\\r\\n\\r\\n\u5728JDK 1.7\u4e2d\u4f7f\u7528\u62c9\u94fe\u6cd5\u89e3\u51b3Hash\u51b2\u7a81\uff0c\u4f46\u5f53Hash\u51b2\u7a81\u4e25\u91cd\u65f6\u94fe\u8868\u4f1a\u8d8a\u6765\u8d8a\u957f\uff0c\u67e5\u8be2\u65f6\u9700\u8981\u904d\u5386\u94fe\u8868\u964d\u4f4e\u6548\u7387\u3002\u56e0\u6b64\uff0c\u5728JDK 1.8\u4e2d\uff0c**\u5f53\u94fe\u8868\u957f\u5ea6\u5927\u4e8e8\u65f6**\u8c03\u7528treeifyBin\u65b9\u6cd5\u5c06\u94fe\u8868\u8f6c\u4e3a\u7ea2\u9ed1\u6811\u3002\u4f46treeifyBin\u65b9\u6cd5\u5e76\u4e0d\u662f\u65e0\u8111\u8f6c\u5316\uff0c\u5b83\u5148\u5224\u65ad\u5f53\u524d\u6570\u7ec4\u957f\u5ea6\u662f\u5426\u5c0f\u4e8e`MIN_TREEIFY_CAPACITY`(\u56fa\u5b9a\u503c64)\uff0c\u5982\u679c\u662f\u7684\u8bdd\u518d\u8c03\u7528resize\u65b9\u6cd5\u8fdb\u884c\u6269\u5bb9\u64cd\u4f5c\u3002\\r\\n\\r\\n```java\\r\\nfinal void treeifyBin(Node<K,V>[] tab, int hash) {\\r\\n    int n, index; Node<K,V> e;\\r\\n    if (tab == null || (n = tab.length) < MIN_TREEIFY_CAPACITY)\\r\\n        resize();\\r\\n    else if ((e = tab[index = (n - 1) & hash]) != null) {\\r\\n        TreeNode<K,V> hd = null, tl = null;\\r\\n        do {\\r\\n            TreeNode<K,V> p = replacementTreeNode(e, null);\\r\\n            if (tl == null)\\r\\n                hd = p;\\r\\n            else {\\r\\n                p.prev = tl;\\r\\n                tl.next = p;\\r\\n            }\\r\\n            tl = p;\\r\\n        } while ((e = e.next) != null);\\r\\n        if ((tab[index] = hd) != null)\\r\\n            hd.treeify(tab);\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n### \u7ea2\u9ed1\u6811\u8f6c\u94fe\u8868\\r\\n\\r\\n### resize\u65b9\u6cd5\\r\\n\\r\\nresize\u65b9\u6cd5\u8c03\u7528\u7684\u65f6\u673a\u4e0e\u4e24\u4e2a\u53c2\u6570\u6709\u5173\uff1acapacity(HashMap\u5f53\u524d\u6700\u5927\u5bb9\u91cf)\uff0cloadFactor(\u8d1f\u8f7d\u56e0\u5b50\uff0c\u9ed8\u8ba40.75)\u3002\u5982\u679c\u8f93\u5165\u6570\u636e\u91cf\u5927\u4e8ecapacity * loadFactor\u65f6\uff0c\u5219\u8c03\u7528resize\u65b9\u6cd5\uff0c\u5305\u542b\u5982\u4e0b\u4e24\u4e2a\u6b65\u9aa4\uff1a\\r\\n\\r\\n1. \u6269\u5bb9\uff1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684Entry/Node\u6570\u7ec4\uff0c\u5927\u5c0f\u4e3a\u539f\u6570\u7ec42\u500d\uff1b\\r\\n2. Rehash\uff1a\u904d\u5386Entry/Node\uff0c\u5c06\u6240\u6709Entry/Node\u91cd\u65b0hash\u5230\u65b0\u6570\u7ec4\u3002\\r\\n\\r\\n\u901a\u8fc7\u516c\u5f0f`hashcode(key) & (length-1)`\u5f97\u5230\uff0c\u8fd9\u91cc\u5229\u7528\u5bf92\u7684\u6574\u6570\u5e42length\u53d6\u6a21\u7ed3\u679c\u7b49\u4e8e\u4e0elength-1\u6309\u4f4d\u4e0e\u8fd0\u884c\u7684\u7ed3\u679c\uff0c\u56e0\u6b64\u6bcf\u6b21\u6269\u5bb9\u65f6\u6570\u7ec4\u5927\u5c0f\u589e\u4e3a2\u500d\uff0c\u5e76\u4e14\u6700\u5f00\u59cb\u9ed8\u8ba4\u5927\u5c0f\u4e5f\u662f2\u76844\u6b21\u65b916\u3002\\r\\n\\r\\n### \u5176\u4ed6\u95ee\u9898\\r\\n\\r\\n1. \u4e3a\u4ec0\u4e48\u91cd\u5199equals\u65b9\u6cd5\u65f6\u8fd8\u9700\u8981\u91cd\u5199hashCode\u65b9\u6cd5\uff1f\\r\\n   \\r\\nHashMap\u5148\u6839\u636ekey\u7684hashCode\u503c\u627e\u5230\u5728\u5e95\u5c42\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6eindex\uff0c\u5f53index\u76f8\u540c\u65f6\u591a\u4e2a\u5143\u7d20\u5f62\u6210\u94fe\u8868/\u7ea2\u9ed1\u6811\uff0c\u6b64\u65f6\u901a\u8fc7equals\u65b9\u6cd5\u6bd4\u8f83\u5bf9\u8c61\u662f\u5426\u76f8\u540c\u3002\u5982\u679c\u53ea\u91cd\u5199equals\u65b9\u6cd5\uff0c\u7531\u4e8e\u4efb\u610f2\u4e2a\u5bf9\u8c61\u7684hashCode()\u8fd4\u56de\u503c\u4e0d\u540c\uff0c\u53732\u4e2a\u76f8\u540c\u5bf9\u8c61hashCode\u503c\u4e0d\u540c\uff0c\u6b64\u65f6\u5728\u7b2c\u4e00\u6b65\u5224\u65ad\u65f6HashMap\u8ba4\u4e3a\u8fd9\u4e24\u4e2a\u5bf9\u8c61\u4e0d\u76f8\u7b49\uff0c\u663e\u7136\u8fdd\u80cc\u4f7f\u7528Hash\u8868\u7684\u89c4\u5219\u3002\\r\\n\\r\\n2. HashMap\u7ebf\u7a0b\u5b89\u5168\u5417\uff1f\u5982\u4f55\u505a\u5230\u7ebf\u7a0b\u5b89\u5168\u7684HashMap\uff1f\\r\\n\\r\\n\u4e0d\u5b89\u5168\uff0cJDK 1.7\u7684HashMap\u4f7f\u7528\u5934\u63d2\u6cd5\u4f1a\u5bfc\u81f4\u5faa\u73af\u94fe\u8868\u95ee\u9898\uff0cJDK 1.8\u7684HashMap\u6ca1\u6709\u5bf9put\u64cd\u4f5c\u4e0a\u9501\u5bfc\u81f4\u63d2\u5165\u6570\u636e\u88ab\u8986\u76d6\u7684\u95ee\u9898\u3002\u89e3\u51b3\u65b9\u6cd5\uff1a1. \u4f7f\u7528Collections.synchronizedMap()\u5305\u88c5HashMap\uff1b2. \u4f7f\u7528HashTable\uff1b3. \u4f7f\u7528ConcurrentHashMap\u3002\\r\\n\\r\\n## ConcurrentHashMap"},{"id":"/2022/03/02/MySQLSummary","metadata":{"permalink":"/blog/2022/03/02/MySQLSummary","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2022/03/02-MySQLSummary.md","source":"@site/blog/2022/03/02-MySQLSummary.md","title":"MySQL\u77e5\u8bc6\u70b9\u603b\u7ed3","description":"MySQL\u77e5\u8bc6\u70b9\u603b\u7ed3","date":"2022-03-02T00:00:00.000Z","formattedDate":"March 2, 2022","tags":[{"label":"MySQL","permalink":"/blog/tags/my-sql"},{"label":"Summary","permalink":"/blog/tags/summary"}],"readingTime":21.885,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"MySQL\u77e5\u8bc6\u70b9\u603b\u7ed3","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["MySQL","Summary"],"description":"MySQL\u77e5\u8bc6\u70b9\u603b\u7ed3","hide_table_of_contents":false},"prevItem":{"title":"HashMap\u77e5\u8bc6\u70b9\u603b\u7ed3","permalink":"/blog/2022/03/12/HashMapSummary"},"nextItem":{"title":"Redis\u77e5\u8bc6\u70b9\u603b\u7ed3","permalink":"/blog/2022/03/01/RedisSummary"}},"content":":pencil:MySQL\u77e5\u8bc6\u70b9\u603b\u7ed3\u3002\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## \u5b58\u50a8\u5f15\u64ce\\r\\n\\r\\nMySQL\u53ef\u4f7f\u7528\u7684\u5b58\u50a8\u5f15\u64ce\u7531InnoDB\u548cMyISAM\uff0c\u4e24\u8005\u7684\u6bd4\u5bf9\u5982\u4e0b\uff1a\\r\\n\\r\\n| \u5bf9\u6bd4\u9879 | MyISAM | InnoDB |\\r\\n| ------ | ------ | ------ |\\r\\n|\u5b58\u50a8\u7ed3\u6784|\u8868\u4fe1\u606f\u5206\u4e3a3\u4e2a\u6587\u4ef6\uff1afrm\u8868\u5b9a\u4e49\u4fe1\u606f\u3001MYD\u8868\u6570\u636e\u4fe1\u606f\u548cMYI\u7d22\u5f15\u4fe1\u606f|\u8868\u4fe1\u606f\u4e3a1\u4e2a\u6587\u4ef6|\\r\\n|\u6587\u4ef6\u683c\u5f0f|\u6570\u636e\u6587\u4ef6(.MYD)\u548c\u7d22\u5f15\u6587\u4ef6(.MYI)\u5206\u5f00|\u6570\u636e\u548c\u7d22\u5f15\u96c6\u4e2d\u5b58\u50a8(.ibd)|\\r\\n|\u8bb0\u5f55\u5b58\u50a8\u987a\u5e8f|\u6309\u8bb0\u5f55\u63d2\u5165\u987a\u5e8f\u4fdd\u5b58|\u6309\u4e3b\u952e\u5927\u5c0f\u6709\u5e8f\u63d2\u5165|\\r\\n|\u5916\u952e|\u4e0d\u652f\u6301|\u652f\u6301|\\r\\n|\u4e8b\u52a1|\u4e0d\u652f\u6301|\u652f\u6301|\\r\\n|\u652f\u6301\u9501\u7ea7\u522b|\u8868\u9501|\u884c\u9501\u3001\u8868\u9501|\\r\\n|\u7d22\u5f15\u5b9e\u73b0|B+\u6811\u7d22\u5f15|B+\u6570\u7d22\u5f15|\\r\\n|\u54c8\u5e0c\u7d22\u5f15|\u652f\u6301|\u4e0d\u652f\u6301|\\r\\n|\u5168\u6587\u7d22\u5f15|\u652f\u6301|\u4e0d\u652f\u6301|\\r\\n\\r\\n\u5176\u4ed6\u533a\u522b\u6709\uff1a\\r\\n\\r\\n1. InnoDB\u4f7f\u7528\u805a\u7c07\u7d22\u5f15\uff0cMyISAM\u4f7f\u7528\u975e\u805a\u7c07\u7d22\u5f15\uff1b\\r\\n2. InnoDB\u4e3b\u952e\u7d22\u5f15\u7684\u53f6\u5b50\u8282\u70b9\u5b58\u50a8\u884c\u6570\u636e\uff0c\u800cMyISAM\u53f6\u5b50\u8282\u70b9\u5b58\u50a8\u884c\u6570\u636e\u5730\u5740\uff0c\u9700\u8981\u518d\u5bfb\u5740\u4e00\u6b21\u624d\u80fd\u5f97\u5230\u6570\u636e\uff1b\\r\\n3. InnDB\u975e\u4e3b\u952e\u7d22\u5f15\u7684\u53f6\u5b50\u8282\u70b9\u5b58\u50a8\u4e3b\u952e\u548c\u5176\u4ed6\u7d22\u5f15\u5217\u7684\u6570\u636e\u67e5\u8be2\u65f6\u505a\u5230\u7d22\u5f15\u8986\u76d6\u5341\u5206\u9ad8\u6548\u3002\\r\\n\\r\\n## \u7d22\u5f15\\r\\n\\r\\n\u7d22\u5f15\u65f6\u65b9\u4fbf\u5feb\u901f\u5b9a\u4f4d\u6570\u636e\u7684\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5728\u5b9e\u73b0\u4e0a\u4e3a\u4e00\u4e2a\u6587\u4ef6\u3002\u7d22\u5f15\u4f18\u70b9\u662f\u53ef\u4ee5\u52a0\u5feb\u6570\u636e\u68c0\u7d22\u901f\u5ea6\uff0c\u7f3a\u70b9\u662f\u5728\u589e\u5220\u6539\u6570\u636e\u65f6\u9700\u8981\u7ef4\u62a4\u4ee5\u53ca\u5360\u7528\u7269\u7406\u7a7a\u95f4\u3002\\r\\n\\r\\n### \u7d22\u5f15\u7c7b\u578b\\r\\n\\r\\n1. \u4ece\u6570\u636e\u7ed3\u6784\u89d2\u5ea6\uff1aB+\u6811\u7d22\u5f15\u3001hash\u7d22\u5f15\u3001\u5168\u6587\u7d22\u5f15\uff1b\\r\\n2. \u4ece\u7269\u7406\u5b58\u50a8\u89d2\u5ea6\uff1a\u805a\u7c07\u7d22\u5f15\u3001\u975e\u805a\u7c07\u7d22\u5f15(\u4e8c\u7ea7\u7d22\u5f15\u3001\u8f85\u52a9\u7d22\u5f15)\uff1b\\r\\n3. \u4ece\u5b57\u6bb5\u7279\u6027\u89d2\u5ea6\uff1a\u4e3b\u952e\u7d22\u5f15\u3001\u552f\u4e00\u7d22\u5f15\u3001\u666e\u901a\u7f29\u5f71\u3001\u524d\u7f00\u7d22\u5f15\uff1b\\r\\n4. \u4ece\u5b57\u6bb5\u4e2a\u6570\u89d2\u5ea6\uff1a\u5355\u5217\u7d22\u5f15\u3001\u8054\u5408\u7d22\u5f15\u3002\\r\\n\\r\\n\u5176\u4e2d\\r\\n5. \u4e3b\u952e\u7d22\u5f15\uff1a\u6570\u636e\u5217\u4e0d\u80fd\u91cd\u590d\uff0c\u4e0d\u80fd\u4e3anull\uff0c\u4e00\u4e2a\u8868\u53ea\u80fd\u6709\u4e00\u4e2a\u4e3b\u952e\u7d22\u5f15\uff1b\\r\\n6. \u552f\u4e00\u7d22\u5f15\uff1a\u6570\u636e\u5217\u4e0d\u80fd\u91cd\u590d\uff0c\u53ef\u4ee5\u4e3anull\uff0c\u4e00\u4e2a\u8868\u5141\u8bb8\u521b\u5efa\u591a\u4e2a\u552f\u4e00\u7d22\u5f15\uff1b\\r\\n7. \u666e\u901a\u7d22\u5f15\uff1a\u6570\u636e\u5217\u53ef\u4ee5\u91cd\u590d\uff0c\u53ef\u4ee5\u4e3anull\uff0c\u6ca1\u6709\u9650\u5236\u3002\\r\\n\\r\\n\u5176\u4ed6\u7684\u7c7b\u578b\u8fd8\u5305\u62ec\u524d\u7f00\u7d22\u5f15\uff1a\u5f53\u7d22\u5f15\u5b57\u6bb5\u4e3a\u5b57\u7b26\u4e32\u65f6\uff0c\u4e3a\u4e86\u51cf\u5c11\u7d22\u5f15\u5927\u5c0f\uff0c\u4f7f\u7528\u5176\u524dn\u4f4d\u4e3a\u4f5c\u4e3a\u7d22\u5f15\uff1b\u5168\u6587\u7d22\u5f15\uff1a\u7528\u4e8e\u6587\u672c\u641c\u7d22\u3002\\r\\n\\r\\n### \u7d22\u5f15\u6570\u636e\u7ed3\u6784\\r\\n\\r\\n\u4e00\u822c\u7d22\u5f15\u7684\u6570\u636e\u7ed3\u6784\u6709B+\u6811\u548chash\u8868\u4e24\u79cd\u3002\\r\\n\\r\\n#### B\u6811\u548cB+\u6811\u533a\u522b\\r\\n\\r\\n1. B\u6811\u6240\u6709\u8282\u70b9\u90fd\u5b58\u653e\u952e\u503c\u5bf9\uff0c\u800cB+\u6811\u975e\u53f6\u5b50\u8282\u70b9\u53ea\u5b58\u653e\u952e\u6ca1\u6709\u503c\uff0c\u53ea\u6709\u53f6\u5b50\u8282\u70b9\u624d\u540c\u65f6\u5b58\u653e\u952e\u548c\u503c\uff1b\\r\\n2. B+\u6811\u53f6\u5b50\u8282\u70b9\u4e4b\u95f4\u76f8\u8fde\u5f62\u6210\u94fe\u8868\uff0c\u800cB\u6811\u53f6\u5b50\u8282\u70b9\u6ca1\u6709\u3002\\r\\n\\r\\n\u7531\u4e8e\u4e0a\u8ff0\u4e24\u8005\u7ed3\u6784\u7684\u4e0d\u540c\uff0c\u628a\u9891\u7e41\u8bbf\u95ee\u6570\u636e\u653e\u5728\u9760\u8fd1B\u6811\u6839\u8282\u70b9\u65f6\u53ef\u4ee5\u52a0\u5feb\u70ed\u70b9\u6570\u636e\u7684\u67e5\u8be2\u6548\u7387\uff0c\u800cB+\u6570\u975e\u53f6\u5b50\u8282\u70b9\u53ea\u5b58\u653e\u952e\uff0c\u76f8\u540c\u6761\u4ef6\u4e0b\u4e00\u6b21\u8bfb\u53d6\u53ef\u4ee5\u83b7\u53d6\u66f4\u591a\u952e\uff0c\u53ef\u4ee5\u66f4\u5feb\u5730\u7f29\u5c0f\u67e5\u8be2\u8303\u56f4\u3002\u7531\u4e8e\u53f6\u5b50\u8282\u70b9\u5f62\u6210\u94fe\u8868\uff0c\u5728\u5168\u5c40\u8bbf\u95ee\u65f6\u53ef\u4ee5\u5148\u7528O(logN)\u65f6\u95f4\u627e\u5230\u6700\u5c0f\u8282\u70b9\uff0c\u7136\u540e\u7528O(N)\u65f6\u95f4\u987a\u5e8f\u904d\u5386\u5373\u53ef\uff1b\u4f46B\u6570\u9700\u8981\u904d\u5386\u6bcf\u4e00\u5c42\uff0c\u9700\u8981\u66f4\u591a\u7684\u5185\u5b58\u7f6e\u6362\u6b21\u6570\u3002\u603b\u5730\u6765\u8bf4\uff1a\\r\\n\\r\\n1. B\u6811\u53ea\u9002\u5408\u968f\u673a\u68c0\u7d22\uff0cB+\u6811\u540c\u65f6\u652f\u6301\u968f\u673a\u68c0\u7d22\u548c\u987a\u5e8f\u68c0\u7d22\uff1b\\r\\n2. B+\u6811\u7a7a\u95f4\u5229\u7528\u7387\u66f4\u9ad8\uff0c\u51cf\u5c11IO\u6b21\u6570\uff1b\\r\\n3. B+\u6811\u968f\u673a\u67e5\u8be2\u6548\u7387\u66f4\u7a33\u5b9a\uff0cB\u6811\u68c0\u7d22\u53ef\u80fd\u5728\u975e\u53f6\u5b50\u8282\u70b9\u7ed3\u675f\uff0cB+\u6811\u968f\u673a\u68c0\u7d22\u65f6\u90fd\u9700\u8981\u4ece\u6839\u8282\u70b9\u8d70\u5230\u53f6\u5b50\u8282\u70b9\uff0c\u8def\u5f84\u957f\u5ea6\u76f8\u540c\uff0c\u56e0\u6b64\u67e5\u8be2\u6548\u7387\u76f8\u5f53\uff1b\\r\\n4. B+\u6811\u987a\u5e8f\u67e5\u8be2\u6548\u7387\u9ad8\uff0c\u9002\u5408\u8303\u56f4\u67e5\u8be2\uff1b\\r\\n5. \u589e\u5220\u8282\u70b9\u65f6B+\u6811\u6548\u7387\u66f4\u9ad8\\r\\n6. B+\u6811\u5728\u6ee1\u8db3\u805a\u7c07\u7d22\u5f15\u548c\u7d22\u5f15\u8986\u76d6\u662f\u4e0d\u9700\u8981\u56de\u8868\u67e5\u8be2\u6570\u636e\\r\\n\\r\\n\u5bf9\u4e8e\u5177\u6709N\u4e2a\u8282\u70b9\u7684B+\u6811\uff0c\u5176\u641c\u7d22\u590d\u6742\u5ea6\u4e3a$O(log_dN)$\uff0c\u5176\u4e2dd\u4e3aB+\u6811\u7684\u5ea6\uff0c\u5b9e\u9645\u4e2dd\u503c\u5927\u4e8e100\uff0c\u5373\u4f7f\u6570\u636e\u8fbe\u5230\u5343\u4e07\u7ea7\u522bB+\u6811\u7684\u9ad8\u5ea6\u4f9d\u7136\u7ef4\u6301\u57283-4\u5c42\u5de6\u53f3\uff0c\u4fdd\u8bc13-4\u6b21\u7684\u78c1\u76d8IO\u5c31\u53ef\u4ee5\u67e5\u5230\u6570\u636e\u3002\u800c\u7ea2\u9ed1\u6811\u662f\u4e8c\u53c9\u6811\uff0c\u5176\u641c\u7d22\u590d\u6742\u5ea6\u4e3a$(OlogN)$\uff0c\u6811\u5c42\u6570\u591a\u5bfc\u81f4\u78c1\u76d8IO\u4e5f\u591a\uff0c\u4e25\u91cd\u5f71\u54cd\u67e5\u8be2\u6027\u80fd\u3002\\r\\n\\r\\n### \u805a\u7c07\u7d22\u5f15\u4e0e\u56de\u8868\\r\\n\\r\\n\u805a\u7c07\u7d22\u5f15\uff1a\u6309\u7167\u6bcf\u5f20\u8868\u7684\u4e3b\u952e\u6784\u5efa\u4e00\u4e2aB+\u6811\uff0c\u8be5\u6811\u7684\u53f6\u5b50\u8282\u70b9\u5b58\u653e\u884c\u6570\u636e\u3002InnoDB\u901a\u8fc7\u4e3b\u952e\u5efa\u7acb\u805a\u7c07\u7d22\u5f15\uff0c\u5982\u679c\u8868\u6ca1\u6709\u4e3b\u952e\uff0c\u5219\u4f7f\u7528\u975e\u7a7a\u7684\u552f\u4e00\u7d22\u5f15\uff0c\u5982\u679c\u6ca1\u6709\u8fd9\u6837\u7684\u7d22\u5f15\uff0c\u5219\u9690\u5f0f\u5730\u751f\u6210\u4e00\u4e2a\u4e3b\u952e\u6765\u4f5c\u4e3a\u805a\u7c07\u7d22\u5f15\u3002\u805a\u7c07\u7d22\u5f15\u7684\u4f18\u70b9\u662f\u6570\u636e\u8bbf\u95ee\u5feb\uff0c\u5bf9\u4e3b\u952e\u7684\u6392\u5e8f\u67e5\u627e\u548c\u8303\u56f4\u67e5\u627e\u901f\u5ea6\u5feb\uff0c\u7f3a\u70b9\u662f\u63d2\u5165\u901f\u5ea6\u4f9d\u8d56\u4e8e\u63d2\u5165\u987a\u5e8f\uff0c\u66f4\u65b0\u4e3b\u952e\u5f00\u9500\u5927\u3002\\r\\n\\r\\n\u975e\u805a\u7c07\u7d22\u5f15\uff1a\u53c8\u79f0\u8f85\u52a9\u7d22\u5f15\u3001\u4e8c\u7ea7\u7d22\u5f15\uff0c\u4e5f\u662f\u4e00\u4e2aB+\u6811\uff0c\u4f46\u53f6\u5b50\u8282\u70b9\u5b58\u653e\u7684\u662f\u4e3b\u952e\u503c\uff0c\u56e0\u6b64\u901a\u8fc7\u975e\u805a\u7c07\u7d22\u5f15\u627e\u5230\u4e3b\u952e\u540e\uff0c\u518d\u901a\u8fc7\u805a\u7c07\u7d22\u5f15\u83b7\u53d6\u884c\u6570\u636e\uff0c\u8be5\u8fc7\u7a0b\u79f0\u4e4b\u4e3a\u56de\u8868\u3002\u56de\u8868\u5305\u542b2\u6b21B+\u6811\u7684\u904d\u5386\uff0c\u56e0\u6b64\u6548\u7387\u66f4\u4f4e\u3002**\u6ce8\u610f\u975e\u805a\u7c07\u7d22\u5f15\u4e0d\u4e00\u5b9a\u53d1\u751f\u56de\u8868**\uff0c\u5982\u679c\u67e5\u8be2\u5b57\u6bb5\u5c31\u662f\u7d22\u5f15\u5b57\u6bb5\uff0c\u6b64\u65f6\u4e0d\u9700\u8981\u56de\u8868\u3002\\r\\n\\r\\n### \u7d22\u5f15\u8986\u76d6\\r\\n\\r\\n\u5f53\u67e5\u8be2\u5b57\u6bb5\u90fd\u5efa\u7acb\u7d22\u5f15\uff0c\u5f15\u64ce\u76f4\u63a5\u8fd4\u56de\u7d22\u5f15\u8868\u4e2d\u67e5\u8be2\u7ed3\u679c\u800c\u4e0d\u4f1a\u4e8c\u6b21\u8bbf\u95ee\uff0c\u8be5\u884c\u4e3a\u79f0\u4e4b\u4e3a\u7d22\u5f15\u8986\u76d6\u3002\u7d22\u5f15\u8986\u76d6\u52a0\u5feb\u67e5\u8be2\u901f\u5ea6\uff0c\u56e0\u6b64\u5c3d\u53ef\u80fd\u5728select\u5b57\u6bb5\u5217\u8868\u4e2d\u7ed9\u51fa\u5fc5\u8981\u7684\u5b57\u6bb5\u3002\\r\\n\\r\\n## \u4e8b\u52a1\\r\\n\\r\\n### \u4e8b\u52a1\u7279\u6027\uff1aACID\\r\\n\\r\\n- \u539f\u5b50\u6027(**A**tomicity)\uff1a\u4e8b\u52a1\u4e2d\u7684\u64cd\u4f5c\u4e0d\u53ef\u5206\u5272\uff0c\u8981\u4e48\u5168\u90fd\u5b8c\u6210\uff0c\u8981\u4e48\u5168\u90fd\u53d6\u6d88\uff1b\\r\\n- \u4e00\u81f4\u6027(**C**onsistency)\uff1a\u4e8b\u52a1\u524d\u540e\u7684\u6570\u636e\u4fdd\u6301\u4e00\u81f4\uff1b\\r\\n- \u9694\u79bb\u6027(**I**solation)\uff1a\u591a\u4e2a\u4e8b\u52a1\u4e92\u4e0d\u5e72\u6270\uff1b\\r\\n- \u6301\u4e45\u6027(**D**urability)\uff1a\u4e8b\u52a1\u63d0\u4ea4\u540e\u4ea7\u751f\u7684\u5f71\u54cd\u662f\u6c38\u4e45\u7684\u3002\\r\\n\\r\\n\u901a\u8fc7`start`\u6216`begin`\u547d\u4ee4\u5f00\u542f\u4e8b\u52a1\uff0c`commit`\u547d\u4ee4\u63d0\u4ea4\u4e8b\u52a1\uff0c`rollback`\u547d\u4ee4\u56de\u6eda\u4e8b\u52a1\u3002MySQL\u9ed8\u8ba4\u81ea\u52a8\u5f00\u542f\u4e8b\u52a1\u63d0\u4ea4\uff0c\u5373\u6bcf\u6267\u884c\u4e00\u6761\u8bed\u53e5\u90fd\u4f1a\u63d0\u4ea4\u4e8b\u52a1\u3002\\r\\n\\r\\n### \u5e76\u53d1\u95ee\u9898\u4e0e\u9694\u79bb\u7ea7\u522b\\r\\n\\r\\nInnoDB\u652f\u6301\u4e8b\u52a1\uff0c\u4f46\u662f\u5e76\u53d1\u4e8b\u52a1\u4f1a\u5bfc\u81f4\u5982\u4e0b\u95ee\u9898\uff1a\\r\\n\\r\\n- \u810f\u8bfb\uff1a\u4e8b\u52a1B\u8bfb\u53d6\u4e8b\u52a1A\u672a\u63d0\u4ea4\u7684\u6570\u636e\uff1b\\r\\n- \u4e0d\u53ef\u91cd\u590d\u8bfb\uff1a\u4e8b\u52a1B\u8bfb\u53d6\u4e8b\u52a1A\u5df2\u63d0\u4ea4\u7684**\u4fee\u6539**\u6570\u636e\uff1b\\r\\n- \u5e7b\u8bfb\uff1a\u4e8b\u52a1B\u8bfb\u53d6\u4e8b\u52a1A\u5df2\u63d0\u4ea4\u7684**\u65b0\u589e**\u6570\u636e\u3002\\r\\n  \\r\\n\u4e3a\u4e86\u89e3\u51b3\u5982\u4e0a\u5e76\u53d1\u95ee\u9898\uff0c\u6570\u636e\u5e93\u63d0\u4f9b\u5982\u4e0b4\u79cd\u9694\u79bb\u7ea7\u522b\uff1a\\r\\n\\r\\n- \u8bfb\u672a\u63d0\u4ea4\uff1a\u4ec0\u4e48\u95ee\u9898\u4e5f\u4e0d\u80fd\u89e3\u51b3\uff0c\u76f8\u5f53\u4e8e\u4ec0\u4e48\u90fd\u4e0d\u505a\uff1b\\r\\n- \u8bfb\u5df2\u63d0\u4ea4\uff1a\u4e8b\u52a1A\u63d0\u4ea4\u540e\u4e8b\u52a1B\u624d\u80fd\u770b\u5230\u5176\u4fee\u6539\u7684\u6570\u636e\uff0c\u89e3\u51b3\u810f\u8bfb\u95ee\u9898(Oracle\u9ed8\u8ba4\u9694\u79bb\u7ea7\u522b)\uff1b\\r\\n- \u53ef\u91cd\u590d\u8bfb\uff1a\u4e8b\u52a1A\u6267\u884c\u8fc7\u7a0b\u4e2d\u770b\u5230\u7684\u6570\u636e\u548c\u8be5\u4e8b\u52a1\u542f\u52a8\u65f6\u770b\u5230\u7684\u4fdd\u6301\u4e00\u81f4\uff0c\u89e3\u51b3\u810f\u8bfb\u3001\u4e0d\u53ef\u91cd\u590d\u8bfb\u95ee\u9898(MySQL\u9ed8\u8ba4\u9694\u79bb\u7ea7\u522b)\uff1b\\r\\n- \u4e32\u884c\u5316\uff1a\u540c\u4e00\u884c\u8bb0\u5f55\u8bfb\u52a0\u8bfb\u9501\u3001\u5199\u52a0\u5199\u9501\uff0c\u8bfb\u5199\u9501\u51b2\u7a81\u65f6\u5fc5\u987b\u7b49\u524d\u4e00\u4e2a\u4e8b\u52a1\u63d0\u4ea4\u624d\u80fd\u7ee7\u7eed\u6267\u884c\uff0c\u89e3\u51b3\u810f\u8bfb\u3001\u4e0d\u53ef\u91cd\u590d\u8bfb\u548c\u5e7b\u8bfb\u95ee\u9898\u3002\\r\\n\\r\\n\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u8d8a\u9ad8\uff0c\u89e3\u51b3\u7684\u5e76\u53d1\u95ee\u9898\u4e5f\u8d8a\u591a\uff0c\u4f46\u662f\u5e76\u53d1\u6027\u80fd\u4e5f\u8d8a\u4f4e\u3002\u5b9e\u9645\u5e94\u7528\u4e2d\u5f88\u5c11\u7528\u5230\u4e32\u884c\u5316\u3002\\r\\n\\r\\n## LBCC\u548cMVCC\\r\\n\\r\\nMySQL\u9ed8\u8ba4\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u4e3a\u53ef\u91cd\u590d\u8bfb\uff0c\u4e3a\u4e86\u89e3\u51b3\u8be5\u7ea7\u522b\u4e0b\u51fa\u73b0\u7684\u5e7b\u8bfb\u95ee\u9898\uff0c\u4f7f\u7528LBCC\u548cMVCC\u4e24\u79cd\u65b9\u6cd5\u3002\\r\\n\\r\\n### LBCC\\r\\n\\r\\nLBCC\u662f\u57fa\u4e8e\u9501\u7684\u5e76\u53d1\u63a7\u5236(Lock-Based Concurrent Control)\u7f29\u5199\u3002InnoDB\u4e2d\u7684\u9501\u6309\u6a21\u5f0f\u5206\u4e3a\u5199\u9501\u3001\u8bfb\u9501\u548c\u610f\u5411\u9501\uff0c\u6309\u7167\u9501\u7c92\u5ea6\u5206\u4e3a\u8bb0\u5f55\u9501(Record Lock)\u3001\u95f4\u9699\u9501(Gap Lock)\u548c\u4e34\u952e\u9501(Next-Key Lock)\uff0c\u5176\u4e2d\u4e34\u952e\u9501\u53ef\u4ee5\u89e3\u51b3\u53ef\u91cd\u590d\u8bfb\u4e0b\u7684\u5e7b\u8bfb\u95ee\u9898\u3002\\r\\n\\r\\n#### \u8bb0\u5f55\u9501\\r\\n\\r\\n\u8bb0\u5f55\u9501\u5bf9\u8868\u4e2d\u7684\u4e00\u884c\u8bb0\u5f55\u52a0\u9501\uff0c\u4e5f\u79f0\u884c\u9501\u3002\u4f7f\u7528`select .... for update`\u5f00\u542f\uff0c\u5e76\u4e14\u5bf9select\u8bed\u53e5\u6709\u5982\u4e0b\u8981\u6c42\uff1a\\r\\n\\r\\n1. \u5fc5\u987b\u4f7f\u7528\u7cbe\u51c6\u5339\u914d(\u5982`=`\u6216\u8005`IN`)\uff0c\u800c\u4e0d\u80fd\u662f\u8303\u56f4\u5339\u914d\uff1b\\r\\n2. where\u8fc7\u6ee4\u7684\u5217\u5fc5\u987b\u6709\u552f\u4e00\u7d22\u5f15\u6216\u8005\u4e3b\u952e\u7d22\u5f15\u3002\\r\\n\\r\\n\u4e5f\u53ef\u4ee5\u4f7f\u7528update\u64cd\u4f5c\u5f00\u542f\uff0c**\u8bb0\u5f55\u9501\u5b58\u5728\u4e8e\u5305\u62ec\u4e3b\u952e\u7d22\u5f15\u5728\u5185\u7684\u552f\u4e00\u7d22\u5f15\u4e2d\uff0c\u9501\u5b9a\u5355\u6761\u7d22\u5f15\u8bb0\u5f55\u3002**\\r\\n\\r\\n#### \u95f4\u9699\u9501\\r\\n\\r\\n\u95f4\u9699\u9501\u5bf9\u8303\u56f4\u52a0\u9501\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u4f7f\u7528`select * for update`\u5f00\u542f\u95f4\u9699\u9501\uff0c\u6709\u5982\u4e0b\u8981\u6c42\uff1a\\r\\n\\r\\n1. \u8fdb\u884c\u8303\u56f4\u67e5\u8be2\uff0c\u5339\u914d\u5b57\u6bb5\u6709\u7d22\u5f15\uff0c\u5e76\u4e14\u6ca1\u6709\u6570\u636e\u8fd4\u56de\uff1b\\r\\n2. \u6216\u8005\u7b49\u503c\u67e5\u8be2\uff0c\u5339\u914d\u5b57\u6bb5\u6709\u552f\u4e00\u7d22\u5f15\uff0c\u6ca1\u6709\u6570\u636e\u8fd4\u56de\u3002\\r\\n\\r\\n\u95f4\u9699\u9501\u7684\u7f3a\u70b9\u5728\u4e8e\u9501\u5b9a\u8303\u56f4\u540e\uff0c\u5373\u4f7f\u4e0d\u5b58\u5728\u7684\u952e\u4e5f\u4f1a\u88ab\u9501\u5b9a\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a\\r\\n\\r\\n```sql\\r\\nselect * from user where id > 15 for update;\\r\\n//\u63d2\u5165\u5931\u8d25\uff0c\u56e0\u4e3aid20\u5927\u4e8e15\uff0c\u4e0d\u96be\u7406\u89e3\\r\\ninsert into user values(20,\'20\');\\r\\n//\u63d2\u5165\u5931\u8d25\uff0c\u539f\u56e0\u662f\u95f4\u9699\u9501\u9501\u7684\u662f\u8bb0\u5f55\u95f4\u9699\uff0c\u800c\u4e0d\u662fsql\uff0c\u4e5f\u5c31\u662f\u8bf4`select`\u8bed\u53e5\u7684\u9501\u8303\u56f4\u662f\uff0811\uff0c+\u221e\uff09\uff0c\u800c13\u5728\u8fd9\u4e2a\u533a\u95f4\u4e2d\uff0c\u6240\u4ee5\u4e5f\u5931\u8d25\u3002\\r\\ninsert into user values(13,\'13\');\\r\\n```\\r\\n\\r\\n\u95f4\u9699\u9501\u9501\u5b9a\u7684\u662f\u8bb0\u5f55\u4e2d\u95f4\u7684\u7a7a\u9699\uff0c\u800c\u4e0d\u662fsql\u8bed\u53e5\u4e2d\u7ed9\u51fa\u7684\u7a7a\u9699\uff0c\u95f4\u9699\u548c\u9501\u4e0d\u5b58\u5728\u51b2\u7a81\u5173\u7cfb\u3002\u901a\u8fc7\u5c06`innodb_locks_unsafe_for_binlog`\u8bbe\u7f6e\u4e3aOFF\u6765\u5f00\u542f\u95f4\u9699\u9501\u3002\\r\\n\\r\\n#### \u4e34\u952e\u9501\\r\\n\\r\\n\u4e34\u952e\u9501\u540c\u65f6\u5bf9\u547d\u4e2d\u8bb0\u5f55\u548c\u95f4\u9699\u52a0\u9501\uff0c\u76f8\u5f53\u4e8e\u8bb0\u5f55\u9501\u548c\u95f4\u9699\u9501\u7684\u7ec4\u5408(\u5de6\u5f00\u53f3\u95ed\u52a0\u9501)\uff0c\u4e34\u952e\u9501\u963b\u6b62\u8be5\u8303\u56f4\u5185\u65b0\u7eaa\u5f55\u63d2\u5165\uff0c\u5373\u9632\u6b62\u5e7b\u8bfb\u3002\u4f7f\u7528`select ... for update`\u4e0b\u4ee5\u4e0b\u60c5\u51b5\u5f00\u542f\u9501\uff1a\\r\\n\\r\\n1. \u4f7f\u7528\u8303\u56f4\u67e5\u8be2\u6709\u8fd4\u56de\u503c\uff0c\u5339\u914d\u5217\u6709\u7d22\u5f15\uff1b\\r\\n2. \u4f7f\u7528\u7b49\u503c\u67e5\u8be2\u4e0d\u7ba1\u6709\u65e0\u8fd4\u56de\u503c\uff0c\u5339\u914d\u5217\u6709\u7d22\u5f15\u3002\\r\\n\\r\\n#### \u52a0\u9501\u603b\u7ed3\\r\\n\\r\\n1. \u5982\u679c\u6ca1\u6709\u67e5\u8be2\u6ca1\u6709\u547d\u4e2d\u7d22\u5f15\uff0c\u5219\u9000\u5316\u4e3a\u8868\u9501\uff1b\\r\\n2. \u5982\u679c\u7b49\u503c\u67e5\u8be2\u552f\u4e00\u7d22\u5f15\u4e14\u547d\u4e2d\uff0c\u5219\u9000\u5316\u4e3a\u884c\u9501\uff1b\\r\\n3. \u5982\u679c\u7b49\u503c\u67e5\u8be2\u552f\u4e00\u7d22\u5f15\u4f46\u6ca1\u547d\u4e2d\uff0c\u5219\u9000\u5316\u4e3a\u95f4\u9699\u9501\uff1b\\r\\n4. \u5982\u679c\u7b49\u503c\u67e5\u8be2\u975e\u552f\u4e00\u7d22\u5f15\u4f46\u6ca1\u547d\u4e2d\uff0c\u9000\u5316\u4e3a\u95f4\u9699\u9501\uff0c\u5982\u679c\u547d\u4e2d\uff0c\u5219\u9501\u5b9a\u6240\u6709\u547d\u4e2d\u884c\u7684\u4e34\u952e\u9501\uff0c\u540c\u65f6\u9501\u5b9a\u6700\u5927\u8bb0\u5f55\u884c\u4e0b\u4e00\u4e2a\u533a\u95f4\u7684\u95f4\u9699\u9501\uff1b\\r\\n5. \u5982\u679c\u8303\u56f4\u67e5\u8be2\u547d\u4e2d\u7d22\u5f15\uff0c\u5219\u9501\u5b9a\u6240\u6709\u547d\u4e2d\u884c\u7684\u4e34\u952e\u9501\uff0c\u540c\u65f6\u9501\u5b9a\u6700\u5927\u8bb0\u5f55\u884c\u4e0b\u4e00\u4e2a\u533a\u95f4\u7684\u95f4\u9699\u9501\uff1b\\r\\n6. \u5982\u679c\u8303\u56f4\u67e5\u8be2\u6ca1\u6709\u547d\u4e2d\u7eaa\u5f8b\uff0c\u9000\u5316\u4e3a\u4e34\u8fd1\u7ed3\u679c\u7684\u95f4\u9699\u9501\u3002\\r\\n\\r\\n### MVCC\\r\\n\\r\\nLBCC\u7531\u4e8e\u9501\u7684\u7c92\u5ea6\u8fc7\u5927\u4f1a\u5bfc\u81f4\u6027\u80fd\u4e0b\u964d\uff0cInnoDB\u4f7f\u7528MVCC\u6765\u89e3\u51b3\u5e7b\u8bfb\u95ee\u9898\u3002MVCC\u5b9e\u73b0\u4f9d\u8d56\u4e8e\uff1a3\u4e2a\u9690\u85cf\u5b57\u6bb5\u3001undo log\u548cread view\uff0c**\u5176\u6838\u5fc3\u601d\u60f3\u662f\u53ea\u80fd\u67e5\u627e\u4e8b\u52a1id\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u4e8b\u52a1id\u7684\u884c\uff0c\u53ea\u80fd\u67e5\u627e\u5220\u9664\u65f6\u95f4\u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u4e8b\u52a1id\u7684\u884c\u6216\u8005\u672a\u5220\u9664\u7684\u884c**\u3002\\r\\n\\r\\n#### \u9690\u85cf\u5b57\u6bb5\\r\\n\\r\\nMySQL\u4e3a\u6bcf\u4e00\u884c\u8bb0\u5f55\u751f\u6210\u5982\u4e0b4\u4e2a\u9690\u85cf\u5b57\u6bb5\uff1a\\r\\n\\r\\n1. DB_TRX_ID\uff1a\u4e8b\u52a1id\uff0c\u6839\u636e\u4e8b\u52a1\u4ea7\u751f\u65f6\u95f4\u81ea\u52a8\u9012\u589e\uff1b\\r\\n2. DB_ROLL_PTR\uff1a\u56de\u6eda\u6307\u9488\uff0c\u6307\u5411\u8bb0\u5f55\u5bf9\u5e94undo log\u4f4d\u7f6e\uff0c\u5927\u5c0f7\u5b57\u8282\uff1b\\r\\n3. DB_ROW_ID\uff1a\u884c\u6807\u8bc6(\u5355\u8c03\u81ea\u589eid)\uff0c\u5982\u679c\u8868\u6ca1\u6709\u4e3b\u952e\uff0c\u81ea\u52a8\u751f\u6210\u5e76\u4ee5\u5176\u4ea7\u751f\u805a\u7c07\u7d22\u5f15\uff0c\u5927\u5c0f6\u5b57\u8282\uff1b\\r\\n4. flag\uff1a\u6807\u8bc6\u8bb0\u5f55\u662f\u5426\u5220\u9664\u3002\\r\\n\\r\\n#### undo log\\r\\n\\r\\n\u5f53\u5bf9\u8bb0\u5f55\u8fdb\u884c\u589e\u5220\u6539\u64cd\u4f5c\u65f6\uff0c\u751f\u6210\u5982\u4e0b\u7c7b\u578b\u7684undo log\uff1a\\r\\n\\r\\n- insert undo log\uff1a\u63d2\u5165\u4e00\u6761\u8bb0\u5f55\u65f6\uff0c\u8bb0\u4e0b\u8be5\u8bb0\u5f55\u4e3b\u952e\uff0c\u56de\u6eda\u65f6\u5220\u9664\u8be5\u4e3b\u952e\u5bf9\u5e94\u7684\u8bb0\u5f55\uff1b\\r\\n- delete undo log\uff1a\u5220\u9664\u4e00\u6761\u8bb0\u5f55\u65f6\uff0c\u8bb0\u4e0b\u8be5\u8bb0\u5f55\u7684\u6240\u6709\u5b57\u6bb5\u503c\uff0c\u56de\u6eda\u65f6\u91cd\u65b0\u63d2\u5165\u8fd9\u4e9b\u5b57\u6bb5\u503c\uff1b\\r\\n- update undo log\uff1a\u4fee\u6539\u4e00\u6761\u8bb0\u5f55\u65f6\uff0c\u8bb0\u4e0b\u4fee\u6539\u524d\u7684\u65e7\u503c\uff0c\u56de\u6eda\u65f6\u91cd\u65b0\u66f4\u65b0\u4e3a\u65e7\u503c\u3002\\r\\n\\r\\n\u6bcf\u6b21\u5bf9\u8bb0\u5f55\u8fdb\u884c\u589e\u5220\u6539\u5c31\u4f1a\u5f62\u6210\u4e00\u6761undo\u65e5\u5fd7\uff0c\u6bcf\u6761undo log\u4e5f\u6709\u4e00\u4e2aDB_ROLL_PTR\uff0c\u6307\u5411\u4e0a\u4e00\u6761\u65e5\u5fd7\u5f62\u6210\u7248\u672c\u94fe\uff0c\u8be5\u94fe\u7684\u5934\u7ed3\u70b9\u5373\u8bb0\u5f55\u7684\u6700\u65b0\u503c\u3002undo log\u5e76\u4e0d\u662f\u4ece\u7269\u7406\u78c1\u76d8\u4e0a\u5c06\u6570\u636e\u6062\u590d\u5230\u4e0a\u4e00\u4e2a\u7248\u672c\uff0c\u5b83\u53ea\u662f\u5c06\u6570\u636e\u5e93\u903b\u8f91\u6062\u590d\u5230\u4e0a\u4e00\u7248\u672c(\u903b\u8f91\u65e5\u5fd7)\uff0c\u56e0\u4e3a\u5e76\u53d1\u60c5\u51b5\u4e0b\u6062\u590d\u7269\u7406\u9875\u4f1a\u5f71\u54cd\u5176\u4ed6\u4e8b\u52a1\u3002\\r\\n\\r\\n#### read view\\r\\n\\r\\nread view\u662f\u4f7f\u7528\u666e\u901aselect\u67e5\u8be2\u65f6\u4ea7\u751f\u7684\u4e00\u81f4\u6027\u8bfb\u89c6\u56fe\uff0c\u4e5f\u79f0\u5feb\u7167\u8bfb\uff0c\u5b83\u7531\u6267\u884c\u67e5\u8be2\u65f6**\u6240\u6709\u672a\u63d0\u4ea4\u4e8b\u52a1id\u6570\u7ec4(\u8bb0\u6700\u5c0fid\u4e3amin_id)\u548c\u5df2\u7ecf\u63d0\u4ea4\u4e8b\u52a1\u7684\u6700\u5927id(\u8bb0\u4e3amax_id)\u7ec4\u6210**\u3002\u6267\u884c\u67e5\u8be2\u65f6\u6839\u636e\u8bb0\u5f55\u7684\u4e8b\u52a1id\u4e0emin_id\u3001max_id\u7684\u5927\u5c0f\u5173\u7cfb\u8fd4\u56de\u7ed3\u679c\uff1a\\r\\n\\r\\n1. \u5982\u679cDB_TRX_ID < min_id\uff0c\u8868\u793a\u8be5\u7248\u672c\u662f\u5df2\u63d0\u4ea4\u4e8b\u52a1\u751f\u6210\u7684\uff0c\u8bb0\u5f55\u53ef\u4ee5\u8fd4\u56de\uff1b\\r\\n2. \u5982\u679cDB_TRX_ID > max_id\uff0c\u8868\u793a\u8be5\u7248\u672c\u8fd8\u672a\u63d0\u4ea4\uff0c\u8bb0\u5f55\u4e0d\u53ef\u89c1\uff1b\\r\\n3. \u5982\u679cmin_id < DB_TRX_ID < max_id\uff1a\\r\\n   1. DB_TRX_ID\u5728id\u6570\u7ec4\u4e2d\uff0c\u8868\u793a\u8be5\u7248\u672c\u662f\u8fd8\u672a\u63d0\u4ea4\u4e8b\u52a1\u751f\u6210\uff0c\u4e0d\u53ef\u89c1\uff0c\u5982\u679c\u662f\u81ea\u5df1\u7684\u4e8b\u52a1\u5219\u53ef\u89c1\uff1b\\r\\n   2. DB_TRX_ID\u4e0d\u5728id\u6570\u7ec4\u4e2d\uff0c\u8868\u793a\u8be5\u7248\u672c\u662f\u5df2\u63d0\u4ea4\u4e8b\u52a1\u751f\u6210\uff0c\u53ef\u89c1\u3002\\r\\n\\r\\n\u5feb\u7167\u8bfb\u4e0d\u4f1a\u770b\u5230\u5176\u4ed6\u4e8b\u52a1\u63d2\u5165\u7684\u6570\u636e\uff0c\u56e0\u6b64\u5e7b\u8bfb\u53ea\u4f1a\u5728\u5f53\u524d\u8bfb\u4e0b\u51fa\u73b0\u3002\\r\\n\\r\\n## MySQL\u65e5\u5fd7\\r\\n\\r\\nMySQL\u65e5\u5fd7\u5305\u62ec\u9519\u8bef\u65e5\u5fd7\u3001\u67e5\u8be2\u65e5\u5fd7\u3001\u6162\u67e5\u8be2\u65e5\u5fd7\u3001\u4e8b\u52a1\u65e5\u5fd7\u548c\u4e8c\u8fdb\u5236\u65e5\u5fd7\u3002\u91cd\u70b9\u4ecb\u7ecd\u4e8c\u8fdb\u5236\u65e5\u5fd7binlog\u548c\u4e8b\u52a1\u65e5\u5fd7redo log\u548cundo log\u3002\\r\\n\\r\\n### binlog\\r\\n\\r\\nbinlog\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u8bb0\u5f55\u6570\u636e\u5e93\u6267\u884c\u7684\u5199\u5165\u64cd\u4f5c\uff0c\u5b83\u662f\u903b\u8f91\u65e5\u5fd7\uff0c**\u4f7f\u7528\u4efb\u4f55\u5b58\u50a8\u5f15\u64ce\u7684MySQL\u90fd\u4f1a\u8bb0\u5f55binlog\u65e5\u5fd7**\u3002Bin log\u4e3b\u8981\u4f7f\u7528\u573a\u666f\u6709\uff1a\\r\\n\\r\\n1. \u4e3b\u4ece\u590d\u5236\uff1a\u5728Master\u8282\u70b9\u5f00\u542fbin log\uff0c\u7136\u540e\u5c06\u5176\u53d1\u9001\u5230Slave\u7aef\uff0cSlave\u7aef\u91cd\u653ebin log\u5b9e\u73b0\u4e3b\u4ece\u4e00\u81f4\uff1b\\r\\n2. \u6570\u636e\u6062\u590d\uff1a\u901a\u8fc7mysqlbinlog\u5de5\u5177\u6765\u6062\u590d\u6570\u636e\u3002\\r\\n\\r\\nbinlog\u901a\u8fc7\u8ffd\u52a0\u65b9\u5f0f\u5199\u5165\u65e5\u5fd7\u6587\u4ef6\uff0c\u53c2\u6570`max_binlog_size`\u63a7\u5236binlog\u6587\u4ef6\u5927\u5c0f\uff0c\u8fbe\u5230\u8be5\u503c\u540e\u751f\u6210\u65b0\u65e5\u5fd7\u6587\u4ef6\uff0c\u901a\u8fc7`sync_binlog`\u53c2\u6570\u63a7\u5236\u5199\u5165\u65f6\u673a\uff1a\\r\\n\\r\\n1. 0\uff1a\u7531\u7cfb\u7edf\u81ea\u884c\u5224\u65ad\u4f55\u65f6\u5199\u5165\u78c1\u76d8\uff1b\\r\\n2. 1\uff1a\u6bcf\u6b21commint\u63d0\u4ea4\u90fd\u5c06binlog\u5199\u5165\u78c1\u76d8\uff1b\\r\\n3. N\uff1a\u6bcfN\u4e2a\u4e8b\u52a1\u5c06binlog\u5199\u5165\u78c1\u76d8\u3002\\r\\n\\r\\nMySQL 5.7.7\u8d77\u9ed8\u8ba4\u503c\u4e3a1\uff0c\u8c03\u5927\u8be5\u503c\u53ef\u4ee5\u63d0\u5347\u6027\u80fd\u4f46\u4f1a\u727a\u7272\u6570\u636e\u4e00\u81f4\u6027\u3002\\r\\n\\r\\n#### \u65e5\u5fd7\u683c\u5f0f\\r\\n\\r\\nbinlog\u65e5\u5fd7\u683c\u5f0f\u5206\u4e3a\u5982\u4e0b3\u79cd\uff0c\u901a\u8fc7\u53c2\u6570`binlog-format`\u6307\u5b9a\uff1a\\r\\n\\r\\n1. statement\uff1a\u57fa\u4e8eSQL\u8bed\u53e5\u7684\u590d\u5236(statement-based replication, SBR)\uff0c\u5c06\u4fee\u6539\u6570\u636e\u7684sql\u8bb0\u5f55\u5230binlog\uff1b\\r\\n   1. \u4f18\u70b9\uff1a\u4e0d\u9700\u8981\u8bb0\u5f55\u6bcf\u4e00\u884c\u53d8\u5316\uff0c\u51cf\u5c11\u65e5\u5fd7\u91cf\uff1b\\r\\n   2. \u7f3a\u70b9\uff1a\u67d0\u4e9bsql\u8bed\u53e5\u4f1a\u5bfc\u81f4\u4e3b\u4ece\u6570\u636e\u4e0d\u4e00\u81f4\uff0c\u5982sysdate()\u3001sleep()\u7b49\u3002\\r\\n2. row\uff1a\u57fa\u4e8e\u884c\u7684\u590d\u5236(row-based replication, RBR)\uff0c\u4e0d\u8bb0\u5f55sql\u8bed\u53e5\u4e0a\u4e0b\u6587\u4fe1\u606f\uff0c\u4ec5\u8bb0\u5f55\u54ea\u6761\u6570\u636e\u88ab\u4fee\u6539\\r\\n   1. \u4f18\u70b9\uff1a\u4e0d\u4f1a\u51fa\u73b0\u5b58\u50a8\u8fc7\u7a0b\u6307\u5b9a\u5bfc\u81f4\u65e0\u6cd5\u88ab\u6b63\u786e\u590d\u5236\u7684\u95ee\u9898\uff1b\\r\\n   2. \u7f3a\u70b9\uff1a\u4f1a\u4ea7\u751f\u5927\u91cf\u65e5\u5fd7\uff0c\u5c24\u5176alter table\u65f6\u3002\\r\\n3. mixed\uff1a\u4ee5\u4e0a\u4e24\u8005\u7684\u878d\u5408\uff0c\u4e00\u822c\u590d\u5236\u4f7f\u7528statement\uff0c\u5904\u7406\u4e0d\u4e86\u7684\u4f7f\u7528row\u6a21\u5f0f\u3002\\r\\n\\r\\nMySQL 5.7.7\u524d\u9ed8\u8ba4\u4e3astatement\uff0c\u4e4b\u540e\u9ed8\u8ba4\u4e3arow\u3002\\r\\n\\r\\n### redo log\\r\\n\\r\\n\u4e3a\u4e86\u5b9e\u73b0\u4e8b\u52a1\u7684\u6301\u4e45\u6027\uff0c\u6700\u7b80\u5355\u7684\u65b9\u5f0f\u5c31\u662f\u5728\u6bcf\u6b21\u4e8b\u52a1\u63d0\u4ea4\u540e\u5c06\u4fee\u6539\u6570\u636e\u5168\u90e8\u5237\u65b0\u5230\u78c1\u76d8\u4e2d\uff0c\u4f46\u8fd9\u4e48\u505a\u4f1a\u5bfc\u81f4\u4e24\u4e2a\u95ee\u9898\uff1a\\r\\n\\r\\n1. InnoDB\u4ee5\u9875\u4e3a\u5355\u4f4d\u5237\u65b0\u78c1\u76d8\uff0c\u4e00\u4e2a\u4e8b\u52a1\u53ef\u80fd\u53ea\u4fee\u6539\u4e86\u6570\u636e\u9875\u4e2d\u7684\u51e0\u4e2a\u5b57\u8282\uff0c\u6b64\u65f6\u5c06\u5b8c\u6574\u9875\u5199\u56de\u78c1\u76d8\u6d6a\u8d39\u8d44\u6e90\uff1b\\r\\n2. \u4e00\u4e2a\u4e8b\u52a1\u53ef\u80fd\u4fee\u6539\u591a\u4e2a\u6570\u636e\u9875\uff0c\u800c\u8fd9\u4e9b\u6570\u636e\u9875\u5728\u7269\u7406\u4e0a\u5e76\u4e0d\u8fde\u7eed\uff0c\u4f7f\u7528\u968f\u673aIO\u5199\u56de\u6027\u80fd\u592a\u5dee\u3002\\r\\n\\r\\n\u56e0\u6b64MySQL\u5b9e\u73b0redo log\u6765\u8bb0\u5f55\u4e8b\u52a1\u5bf9\u6570\u636e\u9875\u8fdb\u884c\u4e86\u54ea\u4e9b\u4fee\u6539\uff0c\u89e3\u51b3\u4fee\u6539\u5199\u56de\u7684\u6027\u80fd\u95ee\u9898\u3002\\r\\n\\r\\n#### \u5199\u5165\u673a\u5236\\r\\n\\r\\nredo log\u5305\u62ec\u5185\u5b58\u4e2d\u7684\u65e5\u5fd7\u7f13\u51b2redo log buffer\u548c\u78c1\u76d8\u4e2d\u7684\u65e5\u5fd7\u6587\u4ef6redo log file\u3002\u6bcf\u6b21\u6267\u884cDML\u8bed\u53e5\uff0c\u5148\u5c06\u8bb0\u5f55\u5199\u5165redo log buffer\uff0c\u7136\u540e\u5728\u67d0\u4e2a\u65f6\u523b\u4e00\u6b21\u6027\u5c06\u591a\u6761\u8bb0\u5f55\u5199\u5165\u5230redo log file\uff0c\u8fd9\u79cd\u5148\u5199\u5185\u5b58\u518d\u5199\u78c1\u76d8\u7684\u65b9\u5f0f\u79f0\u4e3a\u5199\u524d\u65e5\u5fd7(Write Ahead Loggin\uff0cWAL)\u3002\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7528\u6237\u7a7a\u95f4\u7684\u7f13\u51b2\u533a\u6570\u636e\u662f\u65e0\u6cd5\u76f4\u63a5\u5199\u5165\u5230\u78c1\u76d8\u4e2d\uff0c\u4e2d\u95f4\u5fc5\u987b\u7ecf\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u7f13\u5b58\u533aos buffer\uff0c\u56e0\u6b64redo buffer\u5199\u5165redo lof file\u662f\u5148\u5199\u5165\u5230os buffer\u518d\u901a\u8fc7fsync\u7cfb\u7edf\u8c03\u7528\u5199\u5230redo log file\u3002redo log\u5199\u5165\u7b56\u7565\u7531\u53c2\u6570`innodb_flush_log_at_trx_commit`\u63a7\u5236\uff0c\u53ef\u9009\u503c\u53ca\u542b\u4e49\u5982\u4e0b\uff1a\\r\\n\\r\\n- 0(\u5ef6\u8fdf\u5199)\uff1a\u4e8b\u52a1\u63d0\u4ea4\u4e0d\u4f1a\u5c06redo log buffer\u5199\u5165\u5230os buffer\uff0c\u800c\u662f\u6bcf\u79d2\u5199\u5165os buffer\u7136\u540e\u518d\u901a\u8fc7fsync\u5199\u5165\u5230redo log file\uff0c\u5373\u6bcf\u96941\u79d2\u5199\u56de\u78c1\u76d8\uff0c\u56e0\u6b64\u6545\u969c\u65f6\u4f1a\u4e22\u59311\u79d2\u5185\u7684\u6570\u636e\uff1b\\r\\n- 1(\u5b9e\u65f6\u5199\uff0c\u5b9e\u65f6\u5237)\uff1a\u6bcf\u6b21\u4e8b\u52a1\u63d0\u4ea4\u5373\u5199\u5165os buffer\u5e76\u8c03\u7528fsync\u5237\u5230redo log file\uff0c\u6545\u969c\u65f6\u4e0d\u4f1a\u4e22\u5931\u6570\u636e\u4f46IO\u6027\u80fd\u5dee\uff1b\\r\\n- 2(\u5b9e\u65f6\u5199\uff0c\u5ef6\u8fdf\u5237)\uff1a\u6bcf\u6b21\u4e8b\u52a1\u63d0\u4ea4\u5199\u5165\u5230os buffer\uff0c\u7136\u540e\u6bcf\u96941\u79d2\u8c03\u7528fsync\u5237\u5230redo log file\u3002\\r\\n\\r\\n### \u65e5\u5fd7\u5bf9\u6bd4\\r\\n\\r\\n|\u6bd4\u8f83\u9879|redo log|bin log|\\r\\n|------|--------|-------|\\r\\n|\u6587\u4ef6\u5927\u5c0f|\u5927\u5c0f\u56fa\u5b9a|\u5927\u5c0f\u901a\u8fc7\u53c2\u6570\u8bbe\u7f6e|\\r\\n|\u5b9e\u73b0\u5c42\u7ea7|InnDB\u5f15\u64ce\u5b9e\u73b0|Server\u5c42\u5b9e\u73b0\uff0c\u6240\u6709\u5f15\u64ce\u90fd\u53ef\u4ee5\u4f7f\u7528|\\r\\n|\u8bb0\u5f55\u65b9\u5f0f|\u5faa\u73af\u5199|\u8ffd\u52a0\u5199\uff0c\u6587\u4ef6\u5927\u5c0f\u8d85\u8fc7\u8bbe\u5b9a\u503c\u65f6\u8bb0\u5f55\u5230\u65b0\u6587\u4ef6\u4e0a|\\r\\n|\u4f7f\u7528\u573a\u666f|\u5d29\u6e83\u6062\u590d|\u4e3b\u4ece\u590d\u5236\u548c\u6570\u636e\u6062\u590d|\\r\\n\\r\\nRedo log\u662f\u7269\u7406\u65e5\u5fd7\uff0c\u8bb0\u5f55\u6570\u636e\u9875\u7684\u53d8\u5316\uff0c\u800cbin log\u548cundo log\u662f\u903b\u8f91\u65e5\u5fd7\uff0c\u8bb0\u5f55\u6267\u884c\u8bed\u53e5\u3002Redo log\u5b9e\u73b0\u4e8b\u52a1\u6301\u4e45\u6027\uff0cundo log\u5b9e\u73b0\u65e5\u5fd7\u539f\u5b50\u6027\u3002\u5728\u6062\u590d\u6570\u636e\u7684\u6548\u7387\u4e0a\uff0credo log\u4f18\u4e8ebin log\u3002"},{"id":"/2022/03/01/RedisSummary","metadata":{"permalink":"/blog/2022/03/01/RedisSummary","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2022/03/01-RedisSummary.md","source":"@site/blog/2022/03/01-RedisSummary.md","title":"Redis\u77e5\u8bc6\u70b9\u603b\u7ed3","description":"Redis\u77e5\u8bc6\u70b9\u603b\u7ed3","date":"2022-03-01T00:00:00.000Z","formattedDate":"March 1, 2022","tags":[{"label":"Redis","permalink":"/blog/tags/redis"},{"label":"Summary","permalink":"/blog/tags/summary"}],"readingTime":24.745,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"Redis\u77e5\u8bc6\u70b9\u603b\u7ed3","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["Redis","Summary"],"description":"Redis\u77e5\u8bc6\u70b9\u603b\u7ed3","hide_table_of_contents":false},"prevItem":{"title":"MySQL\u77e5\u8bc6\u70b9\u603b\u7ed3","permalink":"/blog/2022/03/02/MySQLSummary"},"nextItem":{"title":"Hive 3.x\u5b66\u4e60\u7b14\u8bb0(6)","permalink":"/blog/2022/02/27/Learning-Hive3.x-06"}},"content":":pencil:Redis\u77e5\u8bc6\u70b9\u603b\u7ed3\u3002\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## \u6570\u636e\u7ed3\u6784\\r\\n\\r\\nRedis\u5e38\u7528\u6570\u636e\u7ed3\u67845\u79cd\uff1aString\u3001List\u3001Set\u3001ZSet\u548cHash\uff0c\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u53c8\u7531\u5982\u4e0b\u5e95\u5c42\u6570\u636e\u7ed3\u6784\u652f\u6491\u3002\\r\\n\\r\\n### SDS\\r\\n\\r\\nRedis\u7684\u5b57\u7b26\u4e32\u7c7b\u578b\u57fa\u4e8eSDS(Simple Dynamic String)\uff0c\u76f8\u6bd4\u4e8eC\u8bed\u8a00\u7684\u5b57\u7b26\u4e32\uff0c\u5b83\u5177\u6709\u5982\u4e0b\u4f18\u52bf\uff1a\\r\\n\\r\\n1. \u5b57\u6bb5len\u8bb0\u5f55\u5b57\u7b26\u4e32\u957f\u5ea6\uff0c\u4e0d\u9700\u8981\u4f7f\u7528`strlen`\u65b9\u6cd5\u904d\u5386\u5b57\u7b26\u4e32\u8ba1\u7b97\uff1b\\r\\n2. \u7a7a\u95f4\u9884\u5206\u914d\uff1a\u4e3a\u5b57\u7b26\u4e32\u5206\u914d\u7a7a\u95f4\u65f6\u4f1a\u7533\u8bf7\u989d\u5916\u7684\u7a7a\u95f4\uff1b\\r\\n3. \u60f0\u6027\u7a7a\u95f4\u91ca\u653e\uff1aSDS\u7f29\u77ed\u65f6\u4e0d\u4f1a\u56de\u6536\u591a\u4f59\u7a7a\u95f4\uff0c\u800c\u662f\u4f7f\u7528free\u5b57\u6bb5\u8bb0\u5f55\u591a\u4f59\u7a7a\u95f4\uff0c\u540e\u7eedappend\u64cd\u4f5c\u76f4\u63a5\u4f7f\u7528\u51cf\u5c11\u5185\u5b58\u7533\u8bf7\u6b21\u6570\u3002\\r\\n\\r\\n### zipList\\r\\n\\r\\n\u538b\u7f29\u5217\u8868\u662flist\u3001hash\u548csorted set\u5e95\u5c42\u5b9e\u73b0\uff0c\u538b\u7f29\u5217\u8868\u5e76\u4e0d\u662f\u6307\u4f7f\u7528\u67d0\u79cd\u538b\u7f29\u7b97\u6cd5\u6765\u8282\u7701\u7a7a\u95f4\uff0c\u800c\u662f\u4f7f\u7528\u8fde\u7eed\u5185\u5b58\u7a7a\u95f4\u6765\u8282\u7701\uff0cziplist\u53c8\u5206\u4e3a\u5982\u4e0b\u90e8\u5206\uff1a\\r\\n\\r\\n- zlbytes\uff1a4bytes\uff0c\u4fdd\u5b58ziplist\u5360\u7528\u7684\u5185\u5b58\u5b57\u8282\u6570\uff1b\\r\\n- zltail\uff1a4bytes\uff0c\u4fdd\u5b58\u5c3e\u8282\u70b9\u5230\u8d77\u59cb\u5730\u5740\u7684\u504f\u79fb\u91cf\uff0c\u53ef\u4ee5\u5feb\u901f\u5b9a\u4f4d\u5230\u5c3e\u8282\u70b9\uff1b\\r\\n- zllen\uff1a2bytes\uff0c\u4fdd\u5b58\u538b\u7f29\u5217\u8868\u4e2d\u7684\u8282\u70b9\u4e2a\u6570\uff1b\\r\\n- entry\uff1a\u5217\u8868\u8282\u70b9\\r\\n  - previous_entry_length\uff1a\u524d\u4e00\u4e2a\u8282\u70b9\u7684\u957f\u5ea6\uff1b\\r\\n  - encoding\uff1acontent\u7684\u5185\u5bb9\u7c7b\u578b\u548c\u957f\u5ea6\uff1b\\r\\n  - content\uff1a\u8282\u70b9\u5185\u5bb9\u3002\\r\\n- zlend\uff1a\u8868\u793a\u538b\u7f29\u5217\u8868\u7ed3\u675f\u7684\u7279\u6b8a\u7b26\u53f7`0xFF`\u3002\\r\\n\\r\\n### skipList\\r\\n\\r\\n\u8df3\u8868skipList\u662f\u4e00\u79cd\u6709\u5e8f\u7684\u6570\u636e\u7ed3\u6784\uff0cRedis\u7684sorted set(zset)\u57fa\u4e8e\u5b83\u5b9e\u73b0\u3002\\r\\n\\r\\n## Redis\u4e3a\u4ec0\u4e48\u5feb\uff1f\\r\\n\\r\\n### \u5355\u7ebf\u7a0b\u6a21\u578b\\r\\n\\r\\nRedis\u7684\u5355\u7ebf\u7a0b\u6a21\u5f0f\u662f\u6307Redis\u7f51\u7edcIO(Redis 5.x\u4e4b\u540e\u4e3a\u591a\u7ebf\u7a0b)\u4ee5\u53caK-V\u8bfb\u5199\u7531\u4e00\u4e2a\u7ebf\u7a0b\u6765\u6267\u884c\uff0c\u800cRedis\u6301\u4e45\u5316\u3001\u96c6\u7fa4\u540c\u6b65\u548c\u5f02\u6b65\u5220\u9664\u662f\u7531\u5176\u4ed6\u7ebf\u7a0b\u6267\u884c\uff0c\u5e76\u4e0d\u662f\u8bf4Redis\u7a0b\u5e8f\u5c31\u4e00\u4e2a\u7ebf\u7a0b\u5de5\u4f5c\u3002Redis\u952e\u503c\u5bf9\u7684\u8bfb\u5199\u662f\u5355\u7ebf\u7a0b\u7684\uff0c\u5177\u6709\u5982\u4e0b\u4f18\u52bf\uff1a\\r\\n\\r\\n1. \u907f\u514d\u591a\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362\u65f6\u7684\u5f00\u9500\uff1b\\r\\n2. \u907f\u514d\u7ebf\u7a0b\u521b\u5efa\u5f00\u9500\uff1b\\r\\n3. \u907f\u514d\u591a\u7ebf\u7a0b\u7ade\u4e89\u95ee\u9898\uff1b\\r\\n4. \u4ee3\u7801\u6e05\u6670\uff0c\u903b\u8f91\u7b80\u5355\u3002\\r\\n\\r\\n### I/O\u591a\u8def\u590d\u7528\\r\\n\\r\\nRedis\u4f7f\u7528epoll\u52a0\u81ea\u884c\u5b9e\u73b0\u7684\u4e8b\u4ef6\u6846\u67b6\u6765\u5904\u7406\u8fde\u63a5\u8bf7\u6c42\uff0c\u4e0d\u4f1a\u963b\u585e\u5728\u67d0\u4e2a\u7279\u5b9a\u7684\u5ba2\u6237\u7aef\u8bf7\u6c42\u5904\u7406\u4e0a\uff0c\u56e0\u6b64\u53ef\u4ee5\u540c\u65f6\u548c\u591a\u4e2a\u5ba2\u6237\u7aef\u8fde\u63a5\u5904\u7406\u8bf7\u6c42\uff0c\u63d0\u5347\u5e76\u53d1\u6027\u3002\\r\\n\\r\\n### \u5168\u5c40Hash\u8868\\r\\n\\r\\nRedis\u4f7f\u7528\u4e00\u4e2a\u5168\u5c40Hash\u8868\u6765\u4fdd\u5b58\u6240\u6709\u952e\u503c\u5bf9\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002key\u7c7b\u578b\u4e3aString\uff0cvalue\u7c7b\u578b\u4e3aredisObject\u3002\\r\\n\\r\\n### \u5982\u4f55\u5904\u7406Hash\u51b2\u7a81\\r\\n\\r\\nRedis\u4f7f\u7528\u94fe\u8868\u65b9\u89e3\u51b3hash\u51b2\u7a81\uff0c\u4f46\u662f\u5f53\u94fe\u8868\u957f\u5ea6\u8fc7\u957f\u65f6\u5c31\u4f1a\u5bfc\u81f4\u67e5\u8be2\u6027\u80fd\u4e0b\u964d\uff0c\u6b64\u65f6\u9700\u8981\u589e\u52a0\u5e95\u5c42hash\u6570\u7ec4\u7684\u957f\u5ea6\u5e76rehash\u6765\u8fdb\u884c\u6269\u5bb9\u3002\u548cJava HashMap\u5728hash\u6570\u7ec4\u8d1f\u8f7d\u8fbe\u52300.75\u4e0d\u540c\uff0cRedis hash\u8868\u5728\u8d1f\u8f7d\u4e3a1\u65f6\u8fdb\u884c\u6269\u5bb9rehash\uff0c\u5e76\u4e14\u91c7\u7528**\u6e10\u8fdb\u5f0frehash**\u3002hash\u8868\u67092\u4e2a\u5e95\u5c42\u6570\u7ec4\u4ee5\u53carehashidx\u6807\u8bc6\uff0c\u521d\u59cbhash\u8868\u957f\u5ea6\u4e3a4\uff0crehashidx\u4e3a-1\uff0c\u5f53\u5143\u7d20\u4e2a\u6570\u8fbe\u52304\u65f6\u6269\u5bb9\u4e3a\u539f\u67652\u500d\u3002\\r\\n\\r\\n1. \u4e3aht[1]\u5206\u914d\u7a7a\u95f4\uff0c\u8ba9\u5168\u5c40hash\u8868\u540c\u65f6\u6307\u5411ht[0]\u548cht[1]\uff1b\\r\\n2. \u8bbe\u7f6erehashxid\u4e3a0\uff0c\u6807\u8bc6rehash\u5f00\u59cb\uff1b\\r\\n3. \u6bcf\u6b21\u589e\u5220\u6539\u67e5\u65f6\uff0c\u5c06ht[0]\u7684\u5143\u7d20rehash\u5230ht[1]\uff0crehashidx\u52a01\uff1b\\r\\n4. \u968f\u7740\u64cd\u4f5c\u6267\u884c\uff0c\u6700\u7ec8ht[0]\u7684\u5143\u7d20\u90fd\u4f1a\u88abrehash\u5230ht[1]\u4e0a\uff0c\u6b64\u65f6\u5c06rehashidx\u7f6e\u4e3a-1\uff0c\u6807\u8bc6rehash\u7ed3\u675f\u3002\\r\\n\\r\\n## \u6301\u4e45\u5316\\r\\n\\r\\n\u4e3a\u4e86\u907f\u514d\u653e\u5728\u5185\u5b58\u4e2d\u7684\u7f13\u5b58\u6570\u636e\u56e0\u4e3a\u6545\u969c\u800c\u4e22\u5931\uff0cRedis\u63d0\u4f9bRDB\u548cAOF\u4e24\u79cd\u6301\u4e45\u5316\u673a\u5236\u3002\\r\\n\\r\\n### RDB\\r\\n\\r\\nRDB(Redis Database)\u662f\u4e00\u79cd\u5feb\u7167\u6301\u4e45\u5316\u65b9\u5f0f\uff0c\u5b83\u5c06Redis\u67d0\u4e00\u65f6\u523b\u7684\u5185\u5b58\u6570\u636e\u4fdd\u5b58\u5230\u786c\u76d8\u6587\u4ef6\u4e2d\uff0c\u9ed8\u8ba4\u6587\u4ef6\u540d\u4e3adump.rdb\uff0c\u5728Redis\u670d\u52a1\u542f\u52a8\u65f6\u4f1a\u91cd\u65b0\u52a0\u8f7d\u8be5\u6587\u4ef6\u5230\u5185\u5b58\u4e2d\u4ee5\u6062\u590d\u6570\u636e\u3002RDB\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u5f00\u542f\uff1a\\r\\n\\r\\n1. save\u547d\u4ee4\uff1a\u540c\u6b65\u64cd\u4f5c\uff0cRedis\u670d\u52a1\u4f1a\u963b\u585esave\u547d\u4ee4\u4e4b\u540e\u7684\u6240\u6709\u5ba2\u6237\u7aef\u8bf7\u6c42\uff0c\u5f53\u5feb\u7167\u6570\u636e\u91cf\u8fc7\u5927\u65f6save\u64cd\u4f5c\u6267\u884c\u65f6\u95f4\u8f83\u957f\uff0c\u56e0\u6b64\u907f\u514d\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528\uff1b\\r\\n2. bgsave\u547d\u4ee4\uff1a\u5f02\u6b65\u64cd\u4f5c\uff0cRedis\u670d\u52a1\u4e3b\u8fdb\u7a0bforks\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u5c06\u6570\u636e\u4fdd\u5b58\u5230dump.rdb\u6587\u4ef6\uff0c\u4e3b\u8fdb\u7a0b\u4ecd\u53ef\u4ee5\u63a5\u6536\u5176\u4ed6\u8bf7\u6c42\u4f46\u5b50\u8fdb\u7a0b\u662f\u540c\u6b65\u7684\uff1b\\r\\n3. \u914d\u7f6e\u6587\u4ef6\uff1a\u5728redis.conf\u914d\u7f6e\u6587\u4ef6\u4e2d\u914d\u7f6e\uff0c\u683c\u5f0f\u4e3a`save N M`\uff0c\u8868\u793a\u5728N\u79d2\u5185\u8fbe\u5230M\u6761\u5199\u547d\u4ee4\u5219\u8fdb\u884c\u4e00\u6b21\u6570\u636e\u4fdd\u5b58(\u4e0ebgsave\u7c7b\u4f3c)\u3002\\r\\n\\r\\n\u65e0\u8bba\u662f\u7531\u4e3b\u8fdb\u7a0b\u8fd8\u662f\u5b50\u8fdb\u7a0b\uff0c\u751f\u6210dump.rdb\u6587\u4ef6\u6b65\u9aa4\u4e3a\uff1a\u751f\u6210\u4e34\u65f6rdb\u6587\u4ef6\u5e76\u5199\u5165\u6570\u636e\uff0c\u5b8c\u6210\u6570\u636e\u5199\u5165\u7528\u4e34\u65f6\u6587\u4ef6\u4ee3\u66ff\u539frdb\u6587\u4ef6\uff0c\u5220\u9664\u539frdb\u6587\u4ef6\u3002\u4e0erdb\u76f8\u5173\u7684\u914d\u7f6e\u6709\uff1a\\r\\n\\r\\n1. \u662f\u5426\u5f00\u542f\u538b\u7f29\uff1a`rdbcompression yes[no]`;\\r\\n2. \u6587\u4ef6\u540d\u79f0\uff1a`dbfilename <filename>`;\\r\\n3. \u5b58\u50a8\u8def\u5f84\uff1a`dir <path>`\u3002\\r\\n\\r\\n:smile:\u4f18\u70b9\uff1a\\r\\n\\r\\n- \u4e0eaof\u76f8\u6bd4\u6062\u590d\u6570\u636e\u901f\u5ea6\u66f4\u5feb\uff1b\\r\\n- \u6587\u4ef6\u683c\u5f0f\u7d27\u51d1\uff0c\u9002\u5408\u6570\u636e\u5907\u4efd\uff1b\\r\\n- \u4f7f\u7528\u5b50\u8fdb\u7a0b\u5907\u4efd\u6570\u636e\uff0c\u6709Redis\u4e3b\u8fdb\u7a0b\u670d\u52a1\u5f71\u54cd\u5c0f\\r\\n\\r\\n:angry:\u7f3a\u70b9\uff1a\\r\\n\\r\\n- \u670d\u52a1\u5668\u6545\u969c\u4f1a\u4e22\u5931\u4e0a\u4e00\u6b21\u6210\u529f\u5907\u4efd\u4ee5\u6765\u7684\u6570\u636e\uff1b\\r\\n- \u4f7f\u7528save\u547d\u4ee4\u4f1a\u963b\u585e\u4e3b\u8fdb\u7a0b\uff0c\u76f4\u5230\u4fdd\u5b58\u5b8c\u6210\uff1b\\r\\n- \u4f7f\u7528bgsave\u547d\u4ee4\u5728\u6570\u636e\u91cf\u592a\u5927\u65f6\u4e5f\u4f1a\u53d1\u751f\u963b\u585e\u3002\\r\\n\\r\\n### AOF\\r\\n\\r\\nAOF(Append-only File)\u8bb0\u5f55\u5ba2\u6237\u7aef\u6bcf\u6b21\u7684\u5199\u64cd\u4f5c\u547d\u4ee4\u5230\u7f13\u51b2\u533a\uff0c\u7136\u540e\u5c06\u7f13\u51b2\u533a\u6570\u636e\u4ee5Redis\u534f\u8bae**\u8ffd\u52a0**\u4fdd\u5b58\u5230appendonly.aof\u6587\u4ef6\u5c3e\u90e8\uff0c\u5728Redis\u670d\u52a1\u542f\u52a8\u65f6\u4f1a\u52a0\u8f7d\u5e76\u6267\u884caof\u6587\u4ef6\u4e2d\u7684\u547d\u4ee4\uff0c\u4ece\u800c\u6062\u590d\u6570\u636e\u3002\u4e0eaof\u76f8\u5173\u7684\u914d\u7f6e\u6709\uff1a\\r\\n\\r\\n1. \u662f\u5426\u5f00\u542faof\uff1a`appendonly yes[no]`\uff1b\\r\\n2. \u6587\u4ef6\u540d\u79f0\uff1a`appendfilename <filename>`\uff1b\\r\\n3. \u5199\u5165\u7b56\u7565\uff1a`appendfsync always[everysec][no]`\uff1b\\r\\n4. \u662f\u5426\u91cd\u5199aof\u6587\u4ef6\uff0c\u9ed8\u8ba4\u5426\uff1a`no-appendfsync-on-rewrite no`\uff1b\\r\\n5. \u5b58\u50a8\u8def\u5f84\uff1a`dir <path>`\u3002\\r\\n\\r\\n\u5176\u4e2d\uff0c\u5199\u5165\u7b56\u7565\u53ef\u9009\u503c\u53ca\u5176\u542b\u4e49\u5982\u4e0b\uff1a\\r\\n\\r\\n1. always\uff1a\u6bcf\u4e2a\u5199\u64cd\u4f5c\u90fd\u4fdd\u5b58\u5230aof\u6587\u4ef6\u4e2d\uff0c\u901f\u5ea6\u6162\uff1b\\r\\n2. everysec\uff1a\u6bcf\u79d2\u5199\u5165\u4e00\u6b21aof\u6587\u4ef6\uff0c\u6700\u591a\u4f1a\u4e22\u59311s\u7684\u6570\u636e\uff1b\\r\\n3. no\uff1a\u7531\u64cd\u4f5c\u7cfb\u7edf\u51b3\u5b9a\u4ec0\u4e48\u65f6\u5019\u5199\u5165aof\u6587\u4ef6\uff0c\u4e0d\u63a8\u8350\u3002\\r\\n\\r\\naof\u91cd\u5199\u503c\u5c06\u591a\u4e2a\u5199\u64cd\u4f5c\u5408\u5e76\u751f\u6210\u4e3a\u7b49\u4ef7\u7684\u6700\u5c0f\u547d\u4ee4\u96c6\uff0c\u6bd4\u5982`incr num 1`...`incr num 10000`\u53ef\u4ee5\u91cd\u5199\u4e3a`set num 10000`(aof\u662f\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5e76\u4e0d\u662f\u76f4\u63a5\u5b58\u50a8\u547d\u4ee4\uff0c\u4ec5\u662f\u793a\u4f8b\u8bf4\u660e)\u3002\u7531\u4e8e\u91cd\u5199\u5728\u6bcf\u6b21fsync\u64cd\u4f5c\u65f6\u8fdb\u884c\uff0c\u4f1a\u5f71\u54cd\u670d\u52a1\u6027\u80fd\uff0c\u56e0\u6b64\u9ed8\u8ba4\u5173\u95ed\u3002\u5ba2\u6237\u7aef\u53ef\u4ee5\u901a\u8fc7`bgrewriteaof`\u547d\u4ee4\u8ba9\u670d\u52a1\u7aef\u8fdb\u884caof\u91cd\u5199\u3002\u91cd\u5199aof\u53ef\u4ee5\u538b\u7f29aof\u6587\u4ef6\u5927\u5c0f\uff0c\u5e76\u4e14\u52a0\u5feb\u6570\u636e\u6062\u590d\u901f\u5ea6\u3002\\r\\n\\r\\n:::tip AOF\u6587\u4ef6\u635f\u574f\u600e\u4e48\u529e\uff1f\\r\\n\u5728\u5199\u5165aof\u6587\u4ef6\u65f6Redis\u670d\u52a1\u53d1\u751f\u6545\u969c\uff0c\u6b64\u65f6aof\u6587\u4ef6\u4f1a\u51fa\u73b0\u683c\u5f0f\u9519\u8bef\uff0c\u53ef\u4ee5\u5148\u590d\u5236aof\u6587\u4ef6\uff0c\u7136\u540e\u901a\u8fc7`redis-check-aof -fix <appendonly.aof>`\u4fee\u590d\u3002\\r\\n:::\\r\\n\\r\\n:smile:\u4f18\u70b9\uff1aAOF\u53ea\u662f\u8ffd\u52a0\u6587\u4ef6\uff0c\u5bf9\u670d\u52a1\u5668\u6027\u80fd\u5c0f\uff0c\u4fdd\u5b58\u6570\u636e\u65f6\u6bd4RDB\u5feb\u4e14\u6d88\u8017\u5185\u5b58\u5c11;\\r\\n\\r\\n:angry:\u7f3a\u70b9\uff1a\u751f\u6210\u65e5\u5fd7\u6587\u4ef6\u592a\u5927(\u5373\u4f7f\u7ecf\u8fc7\u91cd\u5199)\uff0c\u6062\u590d\u901f\u5ea6\u6bd4RDB\u6162\u3002\\r\\n\\r\\n### RDB vs AOF\\r\\n\\r\\n|\u5bf9\u6bd4\u9879\\\\\u65b9\u6848|RDB|AOF|\\r\\n|----------|---|---|\\r\\n|\u5de5\u4f5c\u8d1f\u8377|\u91cd|\u8f7b|\\r\\n|\u6062\u590d\u901f\u5ea6|\u5feb|\u6162|\\r\\n|\u6587\u4ef6\u4f53\u79ef|\u5c0f|\u5927|\\r\\n|\u6570\u636e\u5b89\u5168|\u4f1a\u4e22\u6570\u636e|\u7531\u7b56\u7565\u51b3\u5b9a|\\r\\n\\r\\n**\u5f53\u540c\u65f6\u5f00\u542fAOF\u548cRDB\u65f6\uff0cRedis\u4f18\u5148\u4f7f\u7528AOF\u6765\u6062\u590d\u6570\u636e\uff0c\u56e0\u4e3aAOF\u4fdd\u5b58\u8bb0\u5f55\u6bd4RDB\u66f4\u52a0\u5b8c\u6574**\u3002\\r\\n\\r\\n## \u6570\u636e\u6dd8\u6c70\u7b56\u7565\\r\\n\\r\\n\u8fd9\u91cc\u5c06Redis\u7684\u6570\u636e\u6dd8\u6c70\u7b56\u7565\u5206\u4e3a2\u7c7b\uff1a\u9488\u5bf9\u8fc7\u671f\u952e\u503c\u5bf9\u7684\u5220\u9664\u7b56\u7565\u548c\u9488\u5bf9\u6240\u6709\u952e\u503c\u5bf9\u7684\u5185\u5b58\u6dd8\u6c70\u7b56\u7565\u3002\\r\\n\\r\\n### \u8fc7\u671f\u952e\u5220\u9664\u7b56\u7565\\r\\n\\r\\n\u901a\u8fc7EXPIRE\u548cPERSIST\u547d\u4ee4\u5206\u522b\u8bbe\u7f6e\u952e\u8fc7\u671f\u65f6\u95f4\u6216\u8005\u6c38\u4e45\u6709\u6548\uff0cRedis\u901a\u8fc7\u5982\u4e0b3\u79cd\u7b56\u7565\u5220\u9664\u8fc7\u671f\u952e\u503c\u5bf9\uff1a\\r\\n\\r\\n|\u5220\u9664\u7b56\u7565|\u5de5\u4f5c\u673a\u5236|\u4f18\u70b9|\u7f3a\u70b9|\\r\\n|-------|-------|----|----|\\r\\n|\u5b9a\u65f6\u5220\u9664|\u6bcf\u4e2a\u6709\u8fc7\u671f\u65f6\u95f4\u7684key\u521b\u5efa\u5bf9\u5e94\u7684\u5b9a\u65f6\u5668\uff0c\u5230\u70b9\u7acb\u5373\u5220\u9664|\u51cf\u5c11\u5185\u5b58\u5360\u7528|\u5360\u7528\u5927\u91cfCPU\u8d44\u6e90\uff0c\u5f71\u54cd\u7f13\u5b58\u54cd\u5e94\u65f6\u95f4\u548c\u541e\u5410\u91cf|\\r\\n|\u60f0\u6027\u5220\u9664|\u5f53\u8bbf\u95eekey\u65f6\u5224\u65ad\u5176\u662f\u5426\u8fc7\u671f\u518d\u5220\u9664|\u6700\u5927\u5316\u5730\u8282\u7701CPU\u8d44\u6e90|\u5927\u91cf\u8fc7\u671fkey\u6ca1\u88ab\u8bbf\u95ee\u4f1a\u5360\u7528\u5927\u91cf\u5185\u5b58|\\r\\n|\u5b9a\u671f\u5220\u9664|\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u626b\u63cf\u8fc7\u671fkey\u5e76\u6e05\u9664|\u5b9a\u65f6\u3001\u60f0\u6027\u5220\u9664\u7684\u6298\u4e2d\u65b9\u6848|\u96be\u4ee5\u786e\u5b9a\u95f4\u9694\u65f6\u957f|\\r\\n\\r\\nRedis\u5b9e\u9645\u4f7f\u7528\u60f0\u6027\u5220\u9664\u548c\u5b9a\u671f\u5220\u9664\u7684\u7ec4\u5408\u5728CPU\u8d44\u6e90\u548c\u5185\u5b58\u8d44\u6e90\u4e4b\u95f4\u5e73\u8861\u3002\\r\\n\\r\\n### \u5185\u5b58\u6dd8\u6c70\u7b56\u7565\\r\\n\\r\\n\u5f53Redis\u7528\u4e8e\u7f13\u5b58\u7684\u5185\u5b58\u4e0d\u8db3\u65f6\uff0c\u901a\u8fc7\u5982\u4e0b\u6dd8\u6c70\u7b56\u7565\u5904\u7406\u6570\u636e\uff1a\\r\\n\\r\\n|\u6dd8\u6c70\u7b56\u7565|\u4f5c\u7528\u8303\u56f4|\u5de5\u4f5c\u673a\u5236|\\r\\n|-------|--------|-------|\\r\\n|noeviction(\u9ed8\u8ba4)|\u6240\u6709key|\u5185\u5b58\u4e0d\u8db3\u65f6\u4e0d\u6dd8\u6c70\u6570\u636e\uff0c\u629b\u51faOOM\u5f02\u5e38|\\r\\n|allkeys-lru|\u6240\u6709key|\u79fb\u9664\u6700\u8fd1\u6700\u5c11\u88ab\u4f7f\u7528key|\\r\\n|allkeys-random|\u6240\u6709key|\u968f\u673a\u5220\u9664key|\\r\\n|volatile-lru|\u8fc7\u671fkey|\u79fb\u9664\u6700\u8fd1\u6700\u5c11\u88ab\u4f7f\u7528key|\\r\\n|volatile-random|\u8fc7\u671fkey|\u968f\u673a\u5220\u9664key|\\r\\n|volatile-ttl|\u8fc7\u671fkey|\u5220\u9664\u8fc7\u671f\u65f6\u95f4\u66f4\u65e9key|\\r\\n\\r\\nRedis\u5185\u5b58\u6dd8\u6c70\u7b56\u7565\u4e0d\u4f1a\u5f71\u54cd\u8fc7\u671fkey\u5220\u9664\u7684\u5904\u7406\uff0c\u524d\u8005\u7528\u4e8e\u5185\u5b58\u4e0d\u8db3\u65f6\uff0c\u540e\u8005\u7528\u4e8e\u5904\u7406\u8fc7\u671f\u7684\u7f13\u5b58\u6570\u636e\u3002\\r\\n\\r\\n## \u7f13\u5b58\u5931\u6548\u60c5\u51b5\\r\\n\\r\\n### \u7f13\u5b58\u96ea\u5d29\\r\\n\\r\\n\u51fa\u73b0\u539f\u56e0\uff1a\u6781\u77ed\u65f6\u95f4\u5185\uff0c\u67e5\u8be2\u5927\u91cfkey\u96c6\u4e2d\u5931\u6548\u6216\u8005\u7f13\u5b58\u670d\u52a1\u5931\u6548\uff0c\u5bfc\u81f4\u6240\u6709\u8bf7\u6c42\u8f6c\u5230\u6570\u636e\u5e93\uff0c\u5bf9\u6570\u636e\u5e93\u9020\u6210\u538b\u529b\u3002\\r\\n\\r\\n\u89e3\u51b3\u65b9\u6848\uff1a\\r\\n\\r\\n1. \u52a0\u9501\u6392\u961f\uff0c\u63a7\u5236\u8bf7\u6c42\uff1b\\r\\n2. \u8bbe\u7f6e\u8fc7\u671f\u6807\u8bb0\u66f4\u65b0\u7f13\u5b58\uff1b\\r\\n3. \u6784\u5efa\u591a\u7ea7\u7f13\u5b58\u67b6\u6784\uff1b\\r\\n4. \u4e0d\u540ckey\u8fc7\u671f\u65f6\u95f4\u5206\u6563\u5f00\uff0c\u907f\u514d\u96c6\u4e2d\u5931\u6548\u3002\\r\\n\\r\\n### \u7f13\u5b58\u7a7f\u900f\\r\\n\\r\\n\u51fa\u73b0\u539f\u56e0\uff1aredis\u67e5\u4e0d\u5230\u6570\u636e\uff0c\u518d\u6df1\u4e00\u70b9\u7684\u5c31\u662f\u8fd9\u4e2akey\u6ca1\u6709\u503c\uff0c\u6216\u8005\u6076\u610f\u8bf7\u6c42\u4e0d\u5b58\u5728\u7684key\uff0credis\u6ca1\u6709\u5e76\u4e14\u6570\u636e\u5e93\u4e5f\u6ca1\u6709\uff0c\u8fdb\u884c\u4e862\u6b21\u65e0\u7528\u7684\u67e5\u8be2\u3002\\r\\n\\r\\n\u89e3\u51b3\u65b9\u6848\uff1a\\r\\n\\r\\n1. \u8bbe\u7f6enull\u7f13\u5b58\uff0c\u8bbe\u7f6e\u8f83\u77ed\u7684\u8fc7\u671f\u65f6\u95f4\\r\\n2. \u8bbe\u7f6e\u767d\u540d\u5355\uff0c\u6392\u9664\u6076\u610f\u8bf7\u6c42ip\\r\\n3. \u4f7f\u7528\u5e03\u9686\u8fc7\u6ee4\u5668\\r\\n\\r\\n### \u7f13\u5b58\u51fb\u7a7f\\r\\n\\r\\n\u51fa\u73b0\u539f\u56e0\uff1a**\u67d0\u4e2a**key\u8fc7\u671f\uff0c\u5927\u91cf\u8bbf\u95ee\u8bf7\u6c42\u8be5key\uff0c\u5bfc\u81f4\u6570\u636e\u5e93\u538b\u529b\u589e\u5927\u3002\\r\\n\\r\\n\u89e3\u51b3\u65b9\u6848\uff1a\\r\\n\\r\\n1. \u9884\u5148\u8bbe\u7f6e\u70ed\u95e8\u6570\u636e\uff1b\\r\\n2. \u5b9e\u65f6\u8c03\u6574\u8fc7\u671f\u65f6\u95f4\uff1b\\r\\n3. \u4f7f\u7528\u9501\u3002\\r\\n\\r\\n:::tip \u603b\u7ed3\\r\\n\u7f13\u5b58\u96ea\u5d29\u662f\u5927\u91cf\u8bb0\u5f55\u8fc7\u671f\u5931\u6548\u5bfc\u81f4\u5927\u91cf\u8bf7\u6c42\u67e5\u8be2\u4e0d\u5230\uff0c\u7f13\u5b58\u51fb\u7a7f\u662f\u67d0\u6761\u8bb0\u5f55\u5931\u6548\u53c8\u6709\u5927\u91cf\u8bf7\u6c42\u67e5\u8be2\u5b83\u5bfc\u81f4\u67e5\u8be2\u4e0d\u5230\uff0c\u7ed3\u679c\u90fd\u662f\u8bf7\u6c42\u538b\u529b\u8f6c\u5230\u4e86\u6570\u636e\u5e93\u3002\u800c\u7f13\u5b58\u7a7f\u900f\u662f\u6307\u67e5\u8be2\u6839\u672c\u4e0d\u5b58\u5728\u7684\u7f13\u5b58\u5bfc\u81f4\u8bf7\u6c42\u90fd\u8f6c\u5230\u6570\u636e\u5e93\u3002\\r\\n:::\\r\\n\\r\\n### \u7f13\u5b58\u9884\u70ed\\r\\n\\r\\n\u7cfb\u7edf\u4e0a\u7ebf\u540e\u5148\u76f4\u63a5\u628a\u7f13\u5b58\u6570\u636e\u52a0\u8f7d\u5230redis\uff0c\u4e0d\u662f\u7b49\u5230\u7b2c\u4e00\u6b21\u7528\u6237\u8bf7\u6c42\u65f6\u5148\u67e5\u8be2\u6570\u636e\u5e93\u518d\u52a0\u8f7d\u5230redis\u3002\\r\\n\\r\\n## \u7f13\u5b58\u4e00\u81f4\u6027\\r\\n\\r\\n\u66f4\u65b0\u7f13\u5b58\u7684\u7b56\u7565\u6709\u5982\u4e0b4\u79cd\u65b9\u6848\uff1a\\r\\n\\r\\n1. \u5148\u66f4\u65b0\u7f13\u5b58\uff0c\u518d\u66f4\u65b0\u6570\u636e\u5e93\uff1b\\r\\n2. \u5148\u66f4\u65b0\u6570\u636e\u5e93\uff0c\u518d\u66f4\u65b0\u7f13\u5b58\uff1b\\r\\n3. \u5148\u5220\u9664\u7f13\u5b58\uff0c\u518d\u66f4\u65b0\u6570\u636e\u5e93\uff1b\\r\\n4. \u5148\u66f4\u65b0\u6570\u636e\u5e93\uff0c\u518d\u5220\u9664\u7f13\u5b58\uff1b\\r\\n\\r\\n\u5236\u5b9a\u6b63\u786e\u7684\u7f13\u5b58\u66f4\u65b0\u7b56\u7565\u7b2c\u4e00\u70b9\u9700\u8981\u8003\u8651\u66f4\u65b0\u64cd\u4f5c\u5931\u8d25\u7684\u60c5\u51b5\uff1a\u5bf9\u4e8e\u65b9\u68481\uff0c\u5982\u679c\u7f13\u5b58\u66f4\u65b0\u6210\u529f\u4f46\u6570\u636e\u5e93\u66f4\u65b0\u5931\u8d25\uff0c\u51fa\u73b0\u7f13\u5b58\u4e0d\u4e00\u81f4\u3002\u8bfb\u64cd\u4f5c\u5148\u62ff\u5230\u7f13\u5b58\u7684\u6700\u65b0\u503c\uff0c\u4f46\u7f13\u5b58\u5931\u6548\u540e\u5c31\u4f1a\u4ece\u6570\u636e\u5e93\u53d6\u5230\u201c\u65e7\u503c\u201d\uff0c\u56e0\u6b64\u6392\u9664\u8fd9\u79cd\u65b9\u6848\u3002\u5bf9\u4e8e\u65b9\u68482\uff0c\u5982\u679c\u6570\u636e\u5e93\u66f4\u65b0\u6210\u529f\u4f46\u662f\u7f13\u5b58\u66f4\u65b0\u5931\u8d25\uff0c\u6b64\u540e\u8bfb\u7f13\u5b58\u662f\u201c\u65e7\u503c\u201d\uff0c\u5f53\u7f13\u5b58\u5931\u6548\u540e\u53c8\u5f97\u5230\u6b63\u786e\u503c\u3002\\r\\n\\r\\n\u7b2c\u4e8c\u9700\u8981\u8003\u8651\u7684\u662f\u64cd\u4f5c\u5e76\u53d1\u6027\uff1a\u5bf9\u4e8e\u65b9\u68483\uff0c\u5982\u679c\u66f4\u65b0\u6570\u636e\u5e93\u4e4b\u524d\u6709\u67e5\u8be2\u8bf7\u6c42\uff0c\u5219\u5c06\u4f1a\u810f\u6570\u636e\u5237\u65b0\u5230\u7f13\u5b58\u3002\u5bf9\u4e8e\u65b9\u68484\uff0c\u5982\u679c\u66f4\u65b0\u6570\u636e\u5e93\u4e4b\u524d\u6709\u67e5\u8be2\u8bf7\u6c42\uff0c\u5e76\u4e14\u7f13\u5b58\u5931\u6548\uff0c\u5219\u4f1a\u67e5\u8be2\u6570\u636e\u5e93\u201c\u65e7\u503c\u201d\u5e76\u66f4\u65b0\u7f13\u5b58\u3002\\r\\n\\r\\n\u90a3\u5230\u5e95\u662f\u9009\u62e9\u5220\u9664\u7f13\u5b58\u8fd8\u662f\u66f4\u65b0\u7f13\u5b58\uff1f\u4e00\u822c\u9009\u62e9\u5220\u9664\u7f13\u5b58\uff0c\u7406\u7531\u5982\u4e0b\uff1a\\r\\n\\r\\n1. \u66f4\u65b0\u7f13\u5b58\u6709\u7ef4\u62a4\u6210\u672c\uff0c\u5b58\u5728\u5e76\u53d1\u66f4\u65b0\u95ee\u9898\uff1b\\r\\n2. \u5199\u591a\u8bfb\u5c11\u573a\u666f\u4e0b\uff0c\u8bfb\u8bf7\u6c42\u8fd8\u6ca1\u6765\uff0c\u7f13\u5b58\u5c31\u88ab\u9891\u7e41\u66f4\u65b0\uff0c\u6ca1\u6709\u8d77\u5230\u7f13\u5b58\u4f5c\u7528\uff1b\\r\\n3. \u66f4\u65b0\u7f13\u5b58\u503c\u53ef\u80fd\u7ecf\u8fc7\u590d\u6742\u8ba1\u7b97\uff0c\u6bcf\u6b21\u66f4\u65b0\u7f13\u5b58\u503c\u6d6a\u8d39\u6027\u80fd\uff1b\\r\\n4. \u5220\u9664\u7f13\u5b58\u64cd\u4f5c\u7b80\u5355\uff0c\u7f3a\u70b9\u4ec5\u662f\u9020\u6210\u4e00\u6b21cache miss\u3002\\r\\n\\r\\n\u5982\u679c\u66f4\u65b0\u7f13\u5b58\u5f00\u9500\u5c0f\u5e76\u4e14\u8bfb\u591a\u5199\u5c11\uff0c\u57fa\u672c\u6ca1\u6709\u5e76\u53d1\u5199\u65f6\u624d\u66f4\u65b0\u7f13\u5b58\uff0c\u5426\u5219\u4e00\u822c\u4f7f\u7528\u5220\u9664\u7f13\u5b58\u3002\\r\\n\\r\\n### \u5ef6\u8fdf\u53cc\u5220\\r\\n\\r\\n\u5f53\u9009\u62e9\u5148\u5220\u9664\u7f13\u5b58\u518d\u66f4\u65b0\u6570\u636e\u5e93\u65f6\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u5982\u4e0b\u5e76\u53d1\u64cd\u4f5c\uff1a\\r\\n\\r\\n1. \u7ebf\u7a0bA\u66f4\u65b0X\u4e3a2\uff0c\u65e7\u503c\u4e3a1\uff1b\\r\\n2. \u7ebf\u7a0bA\u5148\u5220\u9664\u7f13\u5b58\uff1b\\r\\n3. \u7ebf\u7a0bB\u8bfb\u7f13\u5b58\u672a\u547d\u4e2d\uff0c\u4e8e\u662f\u4ece\u6570\u636e\u5e93\u8bfb\u5230\u65e7\u503c1\u5e76\u8bbe\u7f6e\u7f13\u5b58\uff1b\\r\\n4. \u7ebf\u7a0bA\u5c06\u65b0\u503c2\u5199\u5165\u6570\u636e\u5e93\uff1b\\r\\n5. \u7ebf\u7a0bB\u5c06\u65e7\u503c1\u5199\u5165\u7f13\u5b58\u3002\\r\\n\\r\\n\u5982\u6b64\u5f62\u6210\u4e86\u7f13\u5b58\u4e3a\u65e7\u503c\uff0c\u6570\u636e\u5e93\u4e3a\u65b0\u503c\u7684\u4e0d\u4e00\u81f4\u60c5\u51b5\uff0c\u4e3a\u6b64\u5ef6\u8fdf\u53cc\u5220\u88ab\u63d0\u51fa\u4ee5\u89e3\u51b3\u8be5\u95ee\u9898\uff0c\u5176\u6d41\u7a0b\u5982\u4e0b\uff1a\\r\\n\\r\\n1. \u7ebf\u7a0bA\u66f4\u65b0X\u4e3a2\uff0c\u65e7\u503c\u4e3a1\uff1b\\r\\n2. \u7ebf\u7a0bA\u5220\u9664\u7f13\u5b58\uff1b\\r\\n3. \u7ebf\u7a0bB\u8bfb\u7f13\u5b58\u672a\u547d\u4e2d\uff0c\u4ece\u6570\u636e\u5e93\u8bfb\u5230\u65e7\u503c1\u5e76\u8bbe\u7f6e\u7f13\u5b58\uff1b\\r\\n4. \u7ebf\u7a0bA\u6839\u636e\u4f30\u7b97\u4f11\u7720\u4e00\u6bb5\u65f6\u95f4\uff0c\u8be5\u65f6\u95f4\u5927\u4e8e\u7ebf\u7a0bB\u8bfb\u6570\u636e\u52a0\u8bbe\u7f6e\u7f13\u5b58\u7684\u8017\u65f6\uff0c\u7ed3\u675f\u540e\u518d\u6b21\u5220\u9664\u7f13\u5b58\uff1b\\r\\n5. \u5176\u4ed6\u7ebf\u7a0b\u8bfb\u7f13\u5b58\u672a\u547d\u4e2d\uff0c\u4ece\u6570\u636e\u5e93\u83b7\u53d6\u6700\u65b0\u503c\u5e76\u8bbe\u7f6e\u7f13\u5b58\u3002\\r\\n\\r\\n\u5ef6\u8fdf\u53cc\u5220\u89e3\u51b3\u4e86\u5e76\u53d1\u8bfb\u5199\u7f13\u5b58\u5bfc\u81f4\u7684\u65e7\u503c\u56de\u5199\u95ee\u9898\uff0c\u901a\u8fc7\u7b2c2\u6b21\u7684\u5ef6\u8fdf\u5220\u9664\u786e\u4fdd\u5176\u4ed6\u7ebf\u7a0b\u5199\u7684\u65e7\u503c\u88ab\u5220\u6389\uff0c\u5176\u7f3a\u70b9\u662f\u4f11\u7720\u65f6\u95f4\u96be\u4ee5\u8bc4\u4f30\u3002\\r\\n\\r\\n### \u6d88\u606f\u961f\u5217\\r\\n\\r\\n\u65e0\u8bba\u662f\u5148\u64cd\u4f5c\u7f13\u5b58\u8fd8\u662f\u5148\u64cd\u4f5c\u6570\u636e\u5e93\uff0c\u90fd\u6709\u53ef\u80fd\u6267\u884c\u5931\u8d25\uff0c\u6b64\u65f6\u9700\u8981\u901a\u8fc7\u91cd\u8bd5\u6765\u786e\u4fdd\u64cd\u4f5c\u6210\u529f\u3002\u4f46\u662f\u5728\u672c\u5730\u7684\u7acb\u5373\u91cd\u8bd5\u5927\u6982\u7387\u8fd8\u662f\u5931\u8d25\uff0c\u5e76\u4e14\u5360\u7528\u7ebf\u7a0b\u8d44\u6e90\uff0c\u5e76\u4e14\u7a0b\u5e8f\u91cd\u542f\u4f1a\u4e22\u5931\u8be5\u91cd\u8bd5\u8bf7\u6c42\u3002\u4e3a\u6b64\uff0c\u63d0\u51fa\u5f02\u6b65\u91cd\u8bd5\uff1a\u5c06\u91cd\u8bd5\u8bf7\u6c42\u5199\u5165\u5230\u6d88\u606f\u961f\u5217\u4e2d\uff0c\u7531\u4e13\u95e8\u7684\u6d88\u8d39\u8005\u6765\u91cd\u8bd5\u76f4\u5230\u6210\u529f\uff0c\u5b83\u5229\u7528\u6d88\u606f\u961f\u5217\u4fdd\u8bc1\u53ef\u9760\u6027\u548c\u6d88\u606f\u6210\u529f\u6295\u9012\u7684\u7279\u6027\u3002\\r\\n\\r\\n\u66f4\u8fdb\u4e00\u6b65\u5730\uff0c\u4e3a\u4e86\u514d\u53bb\u5e94\u7528\u7a0b\u5e8f\u4e0e\u6d88\u606f\u4e2d\u95f4\u4ef6\u4ea4\u4e92\uff0c\u53ef\u4ee5\u901a\u8fc7\u76d1\u542c\u6570\u636e\u5e93bin log\u65e5\u5fd7\u7684\u4e2d\u95f4\u4ef6(\u5982Canal)\u6765\u6295\u9012\u5220\u9664\u8bf7\u6c42\u3002\u8fd9\u6837\u5e94\u7528\u7a0b\u5e8f\u53ea\u9700\u8981\u548cMySQL\u4ea4\u4e92\uff0c\u65e0\u9700\u8003\u8651\u5199\u6d88\u606f\u961f\u5217\u5931\u8d25\u8bf7\u6c42\uff0c\u53ea\u8981MySQL\u66f4\u65b0\u8bb0\u5f55\u6210\u529f\uff0cbin log\u80af\u5b9a\u4ea7\u751f\u76f8\u5e94\u65e5\u5fd7\uff0c\u5e76\u7531Canal\u81ea\u52a8\u6295\u9012\u5220\u9664\u8bf7\u6c42\u5230\u6d88\u606f\u961f\u5217\u3002\\r\\n\\r\\n:::tip \u5c0f\u7ed3\\r\\n\u5ef6\u8fdf\u53cc\u5220\u89e3\u51b3\u7684\u662f\u5e76\u53d1\u573a\u666f\u4e0b\u7f13\u5b58\u5199\u56de\u65e7\u503c\u95ee\u9898\uff0c\u6d88\u606f\u961f\u5217\u89e3\u51b3\u7684\u662f\u5220\u9664\u64cd\u4f5c\u5931\u8d25\u95ee\u9898\uff0c\u672c\u8d28\u662f\u5f02\u6b65\u91cd\u8bd5\u3002\\r\\n:::\\r\\n\\r\\n## \u9ad8\u53ef\u7528\\r\\n\\r\\nRedis\u5b9e\u73b0\u9ad8\u53ef\u7528\u67092\u79cd\u65b9\u6848\uff1a\u4e3b\u4ece\u590d\u5236\u3001\u54e8\u5175\u6a21\u5f0f\u3002\\r\\n\\r\\n### \u4e3b\u4ece\u590d\u5236\\r\\n\\r\\n\u4e3b\u4ece\u590d\u5236\u6307\u5c06Redis\u4e3b\u8282\u70b9\u6570\u636e\u590d\u5236\u5230\u4ece\u8282\u70b9\uff0c\u53c8\u5206\u4e3a\u5168\u91cf\u590d\u5236\u548c\u90e8\u5206\u590d\u52362\u79cd\u3002Redis\u7684\u5168\u91cf\u590d\u5236\u53c8\u5206\u65b0\u65e7\u7248\u672c\uff0c\u5728\u65e7\u7248\u672c\u4e2d\u5168\u91cf\u590d\u5236\u901a\u8fc7sync\u547d\u4ee4\u5b9e\u73b0\uff0c\u5176\u6d41\u7a0b\u4e3a\uff1a\\r\\n\\r\\n1. \u4ece\u670d\u52a1\u5668\u5411\u4e3b\u670d\u52a1\u5668\u53d1\u9001sync\u547d\u4ee4(\u4ece\u8282\u70b9\u62c9)\uff1b\\r\\n2. \u4e3b\u670d\u52a1\u5668\u6536\u5230sync\u547d\u4ee4\u540e\uff0c\u8c03\u7528bgsave\u547d\u4ee4\u751f\u6210rdb\u6587\u4ef6\uff0c\u5c06\u5176\u53d1\u9001\u7ed9\u4ece\u670d\u52a1\u5668\uff1b\\r\\n3. \u4e3b\u670d\u52a1\u5668\u5c06\u547d\u4ee4\u7f13\u51b2\u533a\u4e2d\u7684\u5199\u64cd\u4f5c\u53d1\u9001\u5230\u4ece\u670d\u52a1\u5668\uff0c\u540e\u8005\u6267\u884c\u8fd9\u4e9b\u547d\u4ee4\u540e\uff0c\u72b6\u6001\u548c\u4e3b\u670d\u52a1\u5668\u5f53\u524d\u72b6\u6001\u4fdd\u6301\u4e00\u81f4\u3002\\r\\n\\r\\n\u65b0\u7248\u672c\u4e2dRedis\u4f7f\u7528psync\u4ee3\u66ffsync\uff0c\u8be5\u547d\u4ee4\u65e2\u53ef\u4ee5\u5b9e\u73b0\u5168\u91cf\u590d\u5236\u4e5f\u53ef\u5b9e\u73b0\u90e8\u5206\u590d\u5236\u3002\u76f8\u5173\u6982\u5ff5\uff1a\\r\\n\\r\\n- **\u590d\u5236\u504f\u79fb\u91cf**\uff1a\u4e3b\u3001\u4ece\u670d\u52a1\u5668\u90fd\u4f1a\u7ef4\u62a4\u4e00\u4e2a\u590d\u5236\u504f\u79fb\u91cf\uff0c\u5f53\u5176\u540c\u6b65\u4e86N\u5b57\u8282\u6570\u636e\u540e\u4fbf\u5c06\u590d\u5236\u504f\u79fb\u91cf\u52a0N\uff1b\\r\\n- **\u590d\u5236\u79ef\u538b\u7f13\u51b2\u533a**\uff1a\u4e3b\u670d\u52a1\u5668\u7ef4\u62a4\u7684\u5148\u8fdb\u5148\u51fa\u961f\u5217\uff0c\u9ed8\u8ba4\u5927\u5c0f1MB\uff0c\u4e3b\u670d\u52a1\u5668\u53d1\u9001\u5199\u547d\u4ee4\u7ed9\u4ece\u670d\u52a1\u5668\u65f6\uff0c\u4e5f\u5c06\u547d\u4ee4\u5199\u5165\u5230\u8be5\u7f13\u51b2\u533a\uff1b\\r\\n- **\u670d\u52a1\u5668\u8fd0\u884cid**\uff1a\u6bcf\u4e2aRedis\u670d\u52a1\u5668\u542f\u52a8\u65f6\u751f\u6210\u7684id\uff0c\u4e3b\u670d\u52a1\u5668\u5c06\u5176\u8fd0\u884cid\u53d1\u9001\u7ed9\u4ece\u670d\u52a1\u5668\u3002\\r\\n\\r\\n\u57fa\u4e8e\u5982\u4e0a\u6982\u5ff5\uff0cpsync\u547d\u4ee4\u6267\u884c\u6d41\u7a0b\u5982\u4e0b\u56fe\u6240\u793a\uff1a\\r\\n\\r\\n![JMM.svg](/img/blog/RedisNotes/psync.svg)\\r\\n\\r\\n\u4ece\u670d\u52a1\u5668\u53d1\u9001psync\u547d\u4ee4\u540e\uff0c\u4e3b\u670d\u52a1\u54cd\u5e94\u6709\u5982\u4e0b3\u79cd\u60c5\u51b5\uff1a\\r\\n\\r\\n1. \u8fd4\u56de`+fullresync <runid> <offset>`\uff0c\u8868\u793a\u5168\u91cf\u590d\u5236\uff1b\\r\\n2. \u8fd4\u56de`+continue`\uff0c\u8868\u793a\u90e8\u5206\u590d\u5236\uff1b\\r\\n3. \u8fd4\u56de`-err`\uff0c\u8868\u793a\u4e3b\u670d\u52a1\u5668Redis\u7248\u672c\u4f4e\u4e8e2.8\uff0c\u65e0\u6cd5\u8bc6\u522bpsync\u547d\u4ee4\uff0c\u6b64\u65f6\u4ece\u670d\u52a1\u5668\u53d1\u9001sync\u547d\u4ee4\u6267\u884c\u5168\u91cf\u590d\u5236\u3002\\r\\n\\r\\n:angry:\u4e3b\u4ece\u590d\u5236\u7684\u7f3a\u70b9\uff1a\\r\\n\\r\\n1. \u4e3b\u8282\u70b9\u5b95\u673a\u540e\uff0c\u4ece\u8282\u70b9\u7701\u5347\u7ea7\u4e3a\u4e3b\u8282\u70b9\uff0c\u6b64\u65f6\u9700\u8981**\u624b\u52a8**\u4fee\u6539\u5ba2\u6237\u7aef\u5e94\u7528\u7684\u4e3b\u8282\u70b9\u5730\u5740\u4ee5\u53ca\u6267\u884c\u547d\u4ee4\u8ba9\u6240\u6709\u4ece\u8282\u70b9\u590d\u5236\u6570\u636e\uff1b\\r\\n2. \u4e3b\u8282\u70b9\u5b58\u50a8\u3001\u5199\u6027\u80fd\u53d7\u5355\u673a\u9650\u5236\uff0c\u6ca1\u6709\u7528\u5230\u591a\u673a\u6269\u5c55\u6027\u80fd\uff1b\\r\\n3. \u5168\u91cf\u540c\u6b65\u4f1a\u9020\u6210\u6beb\u79d2\u7ea7\u5361\u987f\u3002\\r\\n\\r\\n### \u54e8\u5175\u6a21\u5f0f\\r\\n\\r\\n\u54e8\u5175\u662fRedis\u670d\u52a1\u7684\u4e00\u79cd\u8fd0\u884c\u6a21\u5f0f\uff0cRedis\u54e8\u5175\u8282\u70b9\u7684\u529f\u80fd\u6709\uff1a\\r\\n\\r\\n1. \u76d1\u63a7\uff1a\u6301\u7eed\u76d1\u63a7master\u3001slave\u8282\u70b9\u662f\u5426\u5904\u4e8e\u9884\u671f\u5de5\u4f5c\u72b6\u6001\uff1b\\r\\n2. \u5207\u6362\u4e3b\u8282\u70b9\uff1a\u5f53master\u8fd0\u884c\u6545\u969c\uff0c\u54e8\u5175\u6a21\u5f0f\u81ea\u52a8\u4eceslave\u4e2d\u9009\u62e9\u4e00\u53f0\u4f5c\u4e3a\u65b0master\uff1b\\r\\n3. \u901a\u77e5\uff1a\u8ba9slave\u6267\u884creplicaof\u547d\u4ee4\u4e0e\u65b0master\u540c\u6b65\uff0c\u901a\u77e5\u5ba2\u6237\u7aef\u4e0e\u65b0master\u8fde\u63a5\u3002\\r\\n\\r\\n#### \u4e3b\u89c2\u4e0b\u7ebf\u4e0e\u5ba2\u89c2\u4e0b\u7ebf\\r\\n\\r\\n\u54e8\u5175\u8282\u70b9\u5411\u5176\u4ed6\u6240\u6709\u8282\u70b9\u53d1\u9001PING\u547d\u4ee4\uff0c\u5982\u679cslave\u8282\u70b9\u6ca1\u6709\u8fd4\u56de\u6709\u6548\u56de\u590d\u5219\u4efb\u52a1\u6807\u8bb0\u8be5\u8282\u70b9\u4e3a**\u4e3b\u89c2\u4e0b\u7ebf**(\u54e8\u5175\u81ea\u5df1\u8ba4\u4e3a\u8be5\u8282\u70b9\u5f02\u5e38)\u3002PING\u547d\u4ee4\u56de\u590d\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\\r\\n\\r\\n1. \u6709\u6548\u56de\u590d\uff1a+PONG\u3001-LOADING\u6216-MASTERDOWN\u4efb\u610f\u4e00\u79cd\uff1b\\r\\n2. \u65e0\u6548\u56de\u590d\uff1a\u6709\u6548\u56de\u590d\u5916\u7684\u56de\u590d\uff0c\u6216\u8005\u672a\u5728\u6307\u5b9a\u65f6\u95f4\u5185\u8fd4\u56de\u4efb\u52a1\u56de\u590d\u3002\\r\\n\\r\\n\u5bf9\u4e8emaster\u8282\u70b9\uff0c\u4e0d\u80fd\u4ec5\u9760\u4e00\u4e2a\u54e8\u5175\u5c31\u5224\u65ad\u5176\u662f\u5426\u6545\u969c\uff0c\u53ea\u6709\u5f53\u8d85\u8fc7\u534a\u6570\u7684\u54e8\u5175\u5224\u65admaster\u4e3b\u89c2\u4e0b\u7ebf\u65f6\uff0c\u624d\u6807\u8bb0\u5176\u4e3a**\u5ba2\u89c2\u4e0b\u7ebf**(\u5ba2\u89c2\u4e8b\u5b9e\uff0c\u771f\u7684\u4e0d\u884c\u4e86)\uff0c\u6b64\u540e\u89e6\u53d1\u4e3b\u4ece\u5207\u6362\u6d41\u7a0b\u3002\\r\\n\\r\\n#### \u65b0master\u9009\u4e3e\\r\\n\\r\\n\u5f53master\u88ab\u6807\u8bb0\u4e3a\u5ba2\u89c2\u4e0b\u7ebf\u540e\uff0c\u9700\u8981\u4eceslave\u4e2d\u9009\u4e3e\u51fa\u65b0master\uff0c\u8be5\u6d41\u7a0b\u5206\u4e3a\u4e24\u6b65\uff1a\u5148\u8fc7\u6ee4\u518d\u8bc4\u6bd4\u3002\\r\\n\\r\\n1. \u8fc7\u6ee4\uff1a\u7b5b\u9009\u6389\u4e0b\u7ebf\u7684slave\u8282\u70b9\uff0c\u6216\u8005\u6839\u636eslave\u8282\u70b9\u548cmaster\u8282\u70b9\u65ad\u5f00\u6b21\u6570\u662f\u5426\u8d85\u8fc7\u9608\u503c\uff1b\\r\\n2. \u8bc4\u6bd4\uff1a\u6309\u7167\u5982\u4e0b\u4f18\u5148\u987a\u5e8f\u4f9d\u6b21\u6bd4\u8f83\u9009\u62e9\u4f18\u5148slave\\r\\n   1. slave\u4f18\u5148\u7ea7\uff0c\u901a\u8fc7`slave-priority`\u53c2\u6570\u914d\u7f6e\uff0c\u4f18\u5148\u7ea7\u9ad8\u9009\u4e3a\u65b0master\uff1b\\r\\n   2. \u590d\u5236\u8fdb\u5ea6\uff0c\u901a\u8fc7\u6bd4\u8f83`slave_repl_offset`\u548c`master_repl_offset`\u7684\u5dee\u8ddd\u9009\u62e9\u65b0master\uff1b\\r\\n   3. slave runID\uff0cid\u6700\u5c0f\u7684\u9009\u4e3a\u65b0master\\r\\n\\r\\n#### \u901a\u77e5\\r\\n\\r\\n\u54e8\u5175\u5c06\u65b0master\u8fde\u63a5\u4fe1\u606f\u53d1\u9001\u7ed9\u5176\u4ed6slave\u8282\u70b9\uff0c\u8ba9\u5176\u6267\u884c`replaceof`\u547d\u4ee4\u548c\u65b0master\u5efa\u7acb\u8fde\u63a5\u5e76\u5f00\u59cb\u590d\u5236\u6570\u636e\uff0c\u540c\u65f6\u8981\u5c06\u65b0master\u8fde\u63a5\u4fe1\u606f\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002\\r\\n\\r\\n#### \u54e8\u5175\u96c6\u7fa4\\r\\n\\r\\n\u5728\u4e86\u89e3\u5b8c\u4e3b\u4ece\u5207\u6362\u7684\u6d41\u7a0b\u540e\uff0c\u63a5\u6765\u4e0b\u9700\u8981\u89e3\u7b54\u7684\u95ee\u9898\u6709\uff1a\\r\\n\\r\\n- \u54e8\u5175\u5982\u4f55\u53d1\u73b0\u5f7c\u6b64\uff1f\\r\\n  \u54e8\u5175\u4e0emaster\u5efa\u7acb\u8fde\u63a5\u540e\u901a\u8fc7master\u7684\u53d1\u5e03/\u8ba2\u9605\u673a\u5236\u53d1\u5e03\u81ea\u5df1\u4fe1\u606f\uff0c\u5f7c\u6b64\u4e4b\u95f4\u4e92\u76f8\u53d1\u73b0\u5efa\u7acb\u8fde\u63a5\u3002\\r\\n- \u54e8\u5175\u5982\u4f55\u53d1\u73b0\u5e76\u76d1\u63a7slave\uff1f\\r\\n  \u54e8\u5175\u5411master\u53d1\u9001`INFO`\u547d\u4ee4\uff0c\u7531master\u8fd4\u56de\u6240\u6709slave\u8282\u70b9\u4fe1\u606f\u3002\\r\\n- \u54ea\u4e2a\u54e8\u5175\u6765\u6267\u884c\u4e3b\u4ece\u5207\u6362\uff1f\\r\\n  \u4efb\u4f55\u4e00\u4e2a\u54e8\u5175\u5224\u65admaster\u4e3b\u89c2\u4e0b\u7ebf\u540e\uff0c\u5411\u5176\u4ed6\u54e8\u5175\u53d1\u9001`is-master-down-by-addr`\u547d\u4ee4\uff0c\u5176\u4ed6\u54e8\u5175\u54cd\u5e94\u6295\u7968\uff0c\u5982\u679c\u8d85\u8fc7\u4e00\u534a\u54e8\u5175\u8fd4\u56deY\uff0c\u5219\u53ef\u4ee5\u6807\u8bb0master\u5ba2\u89c2\u4e0b\u7ebf\u3002\u6216\u8005\u591a\u6570\u8d5e\u6210\u7968\u7684\u54e8\u5175\u53ef\u4ee5\u5411\u5176\u4ed6\u54e8\u5175\u58f0\u660e\u60f3\u6267\u884c\u4e3b\u4ece\u5207\u6362\uff0c\u5e76\u8ba9\u5176\u4ed6\u54e8\u5175\u6295\u7968\uff0c\u8be5\u8fc7\u7a0b\u79f0\u4e3aLeader\u9009\u4e3e\u3002\u6210\u4e3aleader\u7684\u6761\u4ef6\u662f\uff1a\u6216\u8005\u8fc7\u534a\u8d5e\u6210\u7968\u5e76\u4e14\u8d5e\u6210\u7968\u6570\u5fc5\u987b\u5927\u4e8e\u7b49\u4e8e\u54e8\u5175\u914d\u7f6e\u4e2dquorum\u503c\u3002\\r\\n\\r\\n:::tip \u54e8\u5175\u914d\u7f6e\\r\\n\u901a\u8fc7`sentinel monitor <master-name> <ip> <redis-port> <quorum>`\u914d\u7f6e\u8be5\u54e8\u5175\u8282\u70b9\u8fde\u63a5\u7684master\u8282\u70b9\u4fe1\u606f\u548cquorum\u503c\u3002\\r\\n:::\\r\\n\\r\\n- \u5982\u4f55\u901a\u77e5\u5ba2\u6237\u7aef\uff1f\\r\\n  \u8fd8\u662f\u901a\u8fc7\u8ba2\u9605\u53d1\u5e03\u673a\u5236\u3002"},{"id":"/2022/02/27/Learning-Hive3.x-06","metadata":{"permalink":"/blog/2022/02/27/Learning-Hive3.x-06","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2022/02/27-Learning-Hive3.x-06.md","source":"@site/blog/2022/02/27-Learning-Hive3.x-06.md","title":"Hive 3.x\u5b66\u4e60\u7b14\u8bb0(6)","description":"Hive 3.1.2\u5b66\u4e60\u7b14\u8bb0(6)\uff1aHive\u8c03\u4f18","date":"2022-02-27T00:00:00.000Z","formattedDate":"February 27, 2022","tags":[{"label":"Hive","permalink":"/blog/tags/hive"},{"label":"BigData","permalink":"/blog/tags/big-data"}],"readingTime":8.635,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"Hive 3.x\u5b66\u4e60\u7b14\u8bb0(6)","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["Hive","BigData"],"description":"Hive 3.1.2\u5b66\u4e60\u7b14\u8bb0(6)\uff1aHive\u8c03\u4f18","hide_table_of_contents":false},"prevItem":{"title":"Redis\u77e5\u8bc6\u70b9\u603b\u7ed3","permalink":"/blog/2022/03/01/RedisSummary"},"nextItem":{"title":"Hive 3.x\u5b66\u4e60\u7b14\u8bb0(5)","permalink":"/blog/2022/02/25/Learning-Hive3.x-05"}},"content":":pencil:Hive 3.1.2\u5b66\u4e60\u7b14\u8bb0\u7b2c6\u7bc7\uff1aHive\u8c03\u4f18\u3002\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## EXPLAIN\u547d\u4ee4\\r\\n\\r\\n[`EXPALIN`](https://cwiki.apache.org/confluence/display/Hive/LanguageManual+Explain)\u7528\u4e8e\u5c55\u793a\u67e5\u8be2\u8bed\u53e5\u7684\u6267\u884c\u8ba1\u5212\uff0c\u4f7f\u7528\u8bed\u6cd5\u5982\u4e0b\uff1a\\r\\n\\r\\n```sql\\r\\nEXPLAIN [EXTENDED|CBO|AST|DEPENDENCY|AUTHORIZATION|LOCKS|VECTORIZATION|ANALYZE] query\\r\\n```\\r\\n\\r\\n### \u8f93\u51fa\u7ed3\u6784\\r\\n\\r\\nEXPLAIN\u7684\u8f93\u51fa\u5305\u542b\u5982\u4e0b2\u4e2a\u90e8\u5206\uff1a\\r\\n\\r\\n1. \u4f9d\u8d56\u56fe\u63cf\u8ff0\u3002\u5982\u4e0b\u6240\u793aStage-1\u662f\u6839\u6b65\u9aa4\uff0cStage-2\u5728Stage-1\u4e4b\u540e\u6267\u884c\uff0c\u800cStage-0\u53c8\u5728Stage-2\u4e4b\u540e\u6267\u884c\uff1a\\r\\n\\r\\n```bash\\r\\nSTAGE DEPENDENCIES:\\r\\n  Stage-1 is a root stage\\r\\n  Stage-2 depends on stages: Stage-1\\r\\n  Stage-0 depends on stages: Stage-2\\r\\n```\\r\\n\\r\\n2. \u6bcf\u4e2a\u9636\u6bb5\u8ba1\u5212\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\r\\n\\r\\n```\\r\\nSTAGE PLANS:\\r\\n  Stage: Stage-1\\r\\n    Map Reduce\\r\\n      Alias -> Map Operator Tree:\\r\\n        src\\r\\n            Reduce Output Operator\\r\\n              key expressions:\\r\\n                    expr: key\\r\\n                    type: string\\r\\n              sort order: +\\r\\n              Map-reduce partition columns:\\r\\n                    expr: rand()\\r\\n                    type: double\\r\\n              tag: -1\\r\\n              value expressions:\\r\\n                    expr: substr(value, 4)\\r\\n                    type: string\\r\\n      Reduce Operator Tree:\\r\\n        Group By Operator\\r\\n          aggregations:\\r\\n                expr: sum(UDFToDouble(VALUE.0))\\r\\n          keys:\\r\\n                expr: KEY.0\\r\\n                type: string\\r\\n          mode: partial1\\r\\n          File Output Operator\\r\\n            compressed: false\\r\\n            table:\\r\\n                input format: org.apache.hadoop.mapred.SequenceFileInputFormat\\r\\n                output format: org.apache.hadoop.mapred.SequenceFileOutputFormat\\r\\n                name: binary_table\\r\\n \\r\\n  Stage: Stage-2\\r\\n    Map Reduce\\r\\n      Alias -> Map Operator Tree:\\r\\n        /tmp/hive-zshao/67494501/106593589.10001\\r\\n          Reduce Output Operator\\r\\n            key expressions:\\r\\n                  expr: 0\\r\\n                  type: string\\r\\n            sort order: +\\r\\n            Map-reduce partition columns:\\r\\n                  expr: 0\\r\\n                  type: string\\r\\n            tag: -1\\r\\n            value expressions:\\r\\n                  expr: 1\\r\\n                  type: double\\r\\n      Reduce Operator Tree:\\r\\n        Group By Operator\\r\\n          aggregations:\\r\\n                expr: sum(VALUE.0)\\r\\n          keys:\\r\\n                expr: KEY.0\\r\\n                type: string\\r\\n          mode: final\\r\\n          Select Operator\\r\\n            expressions:\\r\\n                  expr: 0\\r\\n                  type: string\\r\\n                  expr: 1\\r\\n                  type: double\\r\\n            Select Operator\\r\\n              expressions:\\r\\n                    expr: UDFToInteger(0)\\r\\n                    type: int\\r\\n                    expr: 1\\r\\n                    type: double\\r\\n              File Output Operator\\r\\n                compressed: false\\r\\n                table:\\r\\n                    input format: org.apache.hadoop.mapred.TextInputFormat\\r\\n                    output format: org.apache.hadoop.hive.ql.io.IgnoreKeyTextOutputFormat\\r\\n                    serde: org.apache.hadoop.hive.serde2.dynamic_type.DynamicSerDe\\r\\n                    name: dest_g1\\r\\n \\r\\n  Stage: Stage-0\\r\\n    Move Operator\\r\\n      tables:\\r\\n            replace: true\\r\\n            table:\\r\\n                input format: org.apache.hadoop.mapred.TextInputFormat\\r\\n                output format: org.apache.hadoop.hive.ql.io.IgnoreKeyTextOutputFormat\\r\\n                serde: org.apache.hadoop.hive.serde2.dynamic_type.DynamicSerDe\\r\\n                name: dest_g1\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\u5305\u542b2\u4e2amap/reduce\u9636\u6bb5(Stage-1\u548cStage-2)\uff0c\u4ee5\u53ca\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\u76f8\u5173\u9636\u6bb5(Stage-0)\u3002Stage-0\u672c\u8d28\u4e0a\u5c31\u662f\u628a\u4e00\u4e2a\u4e34\u65f6\u76ee\u5f55\u4e2d\u7684\u7ed3\u679c\u79fb\u52a8\u5230\u8868dest_g1\u5bf9\u5e94\u7684\u76ee\u5f55\u3002sort order\u9879\u8868\u793a\u7528\u4e8e\u6392\u5e8f\u7684\u5217\uff0c`+`\u8868\u793a\u5347\u5e8f\u800c`-`\u8868\u793a\u964d\u5e8f\u3002\\r\\n\\r\\n\u6bcf\u4e2amap/reduce\u9636\u6bb5\u53c8\u5305\u542b2\u90e8\u5206\uff1a\\r\\n\\r\\n1. \u4ece\u8868\u522b\u540d\u5230Map Operator Tree\u7684\u6620\u5c04\uff1a\u544a\u8bc9mapper\u7528\u4e8e\u5904\u7406\u7279\u5b9a\u8868\u884c\u8bb0\u5f55(\u6216\u524d\u4e00\u4e2astage\u8f93\u51fa)\u7684operator tree\u3002\\r\\n2. Reduce Operator Tree\uff1a\u5904\u7406map/reduce\u4f5c\u4e1a\u7684operator tree\u3002\u4f8b\u5b50\u4e2dStage-1\u7684Reducer Operator Tree\u6267\u884c\u90e8\u5206\u805a\u5408\uff0c\u800cStage-2\u7684Reducer Operator\u6839\u636eStage-1\u7ed3\u679c\u8ba1\u7b97\u6700\u7ec8\u805a\u5408\u7ed3\u679c\u3002\\r\\n\\r\\n\u6ce8\u610f\u5f53Hive\u67e5\u8be2\u6ca1\u6709\u6267\u884cMR\u7a0b\u5e8f\u65f6\uff0c\u4f7f\u7528[Fetch Operator](#Fetch)\u3002\\r\\n\\r\\n### CBO\u4ece\u53e5\\r\\n\\r\\nCBO\u4ece\u53e5\u8f93\u51faCalcite\u4f18\u5316\u5668\u4ea7\u751f\u7684\u6267\u884c\u8ba1\u5212\uff0c\u4f7f\u7528\u8bed\u6cd5\u5982\u4e0b\u6240\u793a\uff1a\\r\\n\\r\\n```sql\\r\\nEXPLAIN [FORMATTED] CBO [COST|JOINCOST]\\r\\n```\\r\\n\\r\\n- COST\u9009\u9879(\u9ed8\u8ba4)\u8868\u793a\u8f93\u51fa\u4f7f\u7528Calcite\u9ed8\u8ba4\u6d88\u8017\u6a21\u578b\u7684\u7ed3\u679c\uff1b\\r\\n- JOINCOST\u9009\u9879\u8868\u793a\u8f93\u51fa\u4f7f\u7528join reordering\u6d88\u8017\u6a21\u578b\u7684\u7ed3\u679c\u3002\\r\\n\\r\\n### AST\u4ece\u53e5\\r\\n\\r\\n\u8f93\u51fa\u67e5\u8be2SQL\u7684\u62bd\u8c61\u8bed\u6cd5\u6811(Abstract Syntax Tree)\u3002\\r\\n\\r\\n### DEPENDENCY\u4ece\u53e5\\r\\n\\r\\n\u8f93\u51fa\u6267\u884c\u8ba1\u5212\u8f93\u5165\u90e8\u5206\u7684\u989d\u5916\u4fe1\u606f\u3002\\r\\n\\r\\n### AUTHORIZATION\u4ece\u53e5\\r\\n\\r\\n\u8f93\u51fa\u6267\u884c\u67e5\u8be2\u8bed\u53e5\u9700\u8981\u6388\u6743\u7684\u6761\u76ee\u4ee5\u53ca\u5931\u8d25\u7684\u6388\u6743\uff0c\u52a0\u4e0aFORMATTED\u5219\u8fd4\u56deJSON\u683c\u5f0f\u7684\u8f93\u51fa\u3002\\r\\n\\r\\n```sql\\r\\n# \u6267\u884c\u8bed\u53e5\\r\\nEXPLAIN AUTHORIZATION SELECT * FROM src JOIN srcpart;\\r\\n# \u8f93\u51fa\u7ed3\u679c\\r\\nINPUTS:\\r\\n  default@srcpart\\r\\n  default@src\\r\\n  default@srcpart@ds=2008-04-08/hr=11\\r\\n  default@srcpart@ds=2008-04-08/hr=12\\r\\n  default@srcpart@ds=2008-04-09/hr=11\\r\\n  default@srcpart@ds=2008-04-09/hr=12\\r\\nOUTPUTS:\\r\\n  hdfs://localhost:9000/tmp/.../-mr-10000\\r\\nCURRENT_USER:\\r\\n  navis\\r\\nOPERATION:\\r\\n  QUERY\\r\\nAUTHORIZATION_FAILURES:\\r\\n  Permission denied: Principal [name=navis, type=USER] does not have following privileges for operation QUERY [[SELECT] on Object [type=TABLE_OR_VIEW, name=default.src], [SELECT] on Object [type=TABLE_OR_VIEW, name=default.srcpart]]\\r\\n```\\r\\n\\r\\n### LOCKS\u4ece\u53e5\\r\\n\\r\\n\u8f93\u51fa\u6267\u884c\u67e5\u8be2\u8bed\u53e5\u9700\u8981\u83b7\u53d6\u7684\u9501\u4fe1\u606f\uff0c\u52a0\u4e0aFORMATTED\u5219\u4ee5JSON\u683c\u5f0f\u8f93\u51fa\u3002\\r\\n\\r\\n```sql\\r\\n# \u6267\u884c\u8bed\u53e5\\r\\nEXPLAIN LOCKS UPDATE target SET b = 1 WHERE p IN (SELECT t.q1 FROM source t WHERE t.a1=5)\\r\\n# \u8f93\u51fa\u7ed3\u679c\\r\\nLOCK INFORMATION:\\r\\ndefault.source -> SHARED_READ\\r\\ndefault.target.p=1/q=2 -> SHARED_READ\\r\\ndefault.target.p=1/q=3 -> SHARED_READ\\r\\ndefault.target.p=2/q=2 -> SHARED_READ\\r\\ndefault.target.p=2/q=2 -> SHARED_WRITE\\r\\ndefault.target.p=1/q=3 -> SHARED_WRITE\\r\\ndefault.target.p=1/q=2 -> SHARED_WRITE\\r\\n```\\r\\n\\r\\n### VECTORIZATION\u4ece\u53e5\\r\\n\\r\\n\u8f93\u51faMap\u548cReduce\u4f5c\u4e1a\u6ca1\u6709\u5411\u91cf\u5316\u7684\u539f\u56e0\u3002\\r\\n\\r\\n### ANALYZE\u4ece\u53e5\\r\\n\\r\\n\u8f93\u51fa\u8ba1\u5212\u771f\u6b63\u6267\u884c\u7684\u884c\u6570\uff0c\u683c\u5f0f\u4e3a`(\u9884\u8ba1\u884c\u6570)/(\u5b9e\u9645\u884c\u6570)`\u3002\\r\\n\\r\\n## Fetch\\r\\n\\r\\n\u5bf9\u4e8e\u67d0\u4e9b\u7279\u5b9a\u67e5\u8be2\uff0cHive\u53ef\u4ee5\u4e0d\u4f7f\u7528map/reduce\u4efb\u52a1\u8ba1\u7b97\u800c\u662f\u4f7f\u7528fetch\u4efb\u52a1\u3002\u6bd4\u5982`select * from employees`\uff0cHive\u53ef\u4ee5\u8bfb\u53d6employees\u5bf9\u5e94\u5b58\u50a8\u76ee\u5f55\u4e0b\u6587\u4ef6\uff0c\u89e3\u6790\u5e76\u8f93\u51fa\u8bb0\u5f55\u3002\u8be5\u884c\u4e3a\u901a\u8fc7hive-default.xml\u4e2d\u7684\u914d\u7f6e\u9879`hive.fetch.task.conversion`\u8bbe\u7f6e\uff0cHive\u63d0\u4f9b3\u4e2a\u8bbe\u7f6e\u503c\uff1a\\r\\n\\r\\n- none\uff1a\u7981\u7528fetch\uff0c\u5373\u6240\u6709\u67e5\u8be2\u90fd\u8d70MR\u4efb\u52a1\uff1b\\r\\n- minimal\uff1a\u53ea\u6709select *\uff0c\u5728\u5206\u533a\u5b57\u6bb5\u4e0a\u8fc7\u6ee4\uff0climit\u9650\u5236\u624d\u4f7f\u7528fetch\uff1b\\r\\n- more\uff1aselect\uff0c\u8fc7\u6ee4\uff0climit\u65f6\u4f7f\u7528fetch\u4efb\u52a1\uff0c\u5305\u542btablesample\u548c\u865a\u62df\u5b57\u6bb5\uff0c**\u9ed8\u8ba4**\u3002\\r\\n\\r\\n## \u672c\u5730\u6a21\u5f0f\\r\\n\\r\\n\u5f53\u5904\u7406\u6570\u636e\u91cf\u8f83\u5c0f\u65f6\uff0c\u6ca1\u6709\u5fc5\u8981\u4f7f\u7528\u5206\u5e03\u5f0fMR\u4efb\u52a1\u8ba1\u7b97\uff0cHive\u63d0\u4f9b\u672c\u5730\u6a21\u5f0f\u5728\u5355\u53f0\u673a\u5668\u4e0a\u5904\u7406\u4efb\u52a1\uff0c\u7f29\u77ed\u6267\u884c\u65f6\u95f4\uff0c\u8bbe\u7f6e\u5982\u4e0b\uff1a\\r\\n\\r\\n```bash\\r\\n# 1. \u5f00\u542f\u672c\u5730\u6a21\u5f0f\\r\\nset hive.exec.mode.local.auto=true;\\r\\n# 2. \u8bbe\u7f6e\u672c\u5730\u6a21\u5f0f\u6700\u5927\u8f93\u5165\u6570\u636e\u91cf\uff0c\u8d85\u8fc7\u5219\u4f7f\u7528\u5206\u5e03\u5f0fMR\u4efb\u52a1\uff0c\u9ed8\u8ba4128MB\\r\\nset hive.exec.mode.local.auto.inputbytes.max=50000000;\\r\\n# 3. \u8bbe\u7f6e\u672c\u5730\u6a21\u5f0f\u6700\u591a\u8f93\u5165\u6587\u4ef6\u6570\uff0c\u8d85\u8fc7\u5219\u4f7f\u7528\u5206\u5e03\u5f0fMR\u4efb\u52a1\uff0c\u6a21\u5f0f4\\r\\nset hive.exec.mode.local.auto.input.files.max=10;\\r\\n```\\r\\n\\r\\n## \u8868\u4f18\u5316\\r\\n\\r\\n### Map Join\\r\\n\\r\\n[Map Join](https://cwiki.apache.org/confluence/display/Hive/LanguageManual+JoinOptimization)\u6307\u5f53\u5173\u8054\u67e5\u8be2\u7684\u4e24\u4e2a\u8868\u5927\u5c0f\u76f8\u5dee\u8fc7\u5927\u65f6\uff0c\u53ef\u4ee5\u5c06\u5c0f\u8868\u8f6c\u4e3aHashMap\u653e\u5728\u5185\u5b58\uff0c\u5728mapper\u5b8c\u6210join\u3002\u76f8\u5173\u8bbe\u7f6e\u5982\u4e0b\uff1a\\r\\n\\r\\n```bash\\r\\n# \u8bbe\u7f6e\u5f00\u542fmap join\uff0c\u9ed8\u8ba4\u4e3atrue\\r\\nset hive.auto.convert.join = true;\\r\\n# \u8bbe\u7f6e\u533a\u5206\u5927\u5c0f\u8868\u7684\u9608\u503c\uff0c\u9ed8\u8ba425MB\\r\\nset hive.mapjoin.smalltable.filesize = 25000000;\\r\\n```\\r\\n\\r\\n1. \u672c\u5730\u4efb\u52a1\uff1a\\r\\n    1. \u5728\u672c\u5730\u4e0a\u6267\u884c\u6807\u51c6\u7684\u8868\u626b\u63cf\u83b7\u53d6\u5c0f\u8868\u6570\u636e\uff1b\\r\\n    2. \u5728\u5185\u5b58\u4e2d\u6784\u5efaHashTable\uff1b\\r\\n    3. \u5c06HashTable\u5199\u5230\u672c\u5730\u78c1\u76d8\uff1b\\r\\n    4. \u5c06HashTable\u4e0a\u4f20\u5230HDFS\uff1b\\r\\n    5. \u5c06HashTable\u6dfb\u52a0\u5230\u5206\u5e03\u5f0f\u7f13\u5b58\uff1b\\r\\n2. Map\u4efb\u52a1\uff1a\\r\\n    1. \u4ece\u672c\u5730(\u5206\u5e03\u5f0f\u7f13\u5b58)\u8bfb\u53d6HashTable\u52a0\u8f7d\u5230\u5185\u5b58\uff1b\\r\\n    2. \u6839\u636eHashTable\u5339\u914d\u8bb0\u5f55\uff1b\\r\\n    3. \u5408\u5e76\u5339\u914d\u8bb0\u5f55\u5e76\u8f93\u51fa\uff1b\\r\\n3. **\u6ca1\u6709Reduce\u4efb\u52a1**\u3002\\r\\n\\r\\n### Join\u4f18\u5316\\r\\n\\r\\n1. \u7a7akey\u8fc7\u6ee4\\r\\n2. \u7a7akey\u8f6c\u6362\\r\\n3. SMB(Sort Merge Bucket)\uff1a\u4e24\u4e2a\u5927\u7684\u5206\u6876\u8868\u5173\u8054\u67e5\u8be2\uff0c\u9700\u8981\u8bbe\u7f6e\u5982\u4e0b\u53c2\u6570\\r\\n\\r\\n```bash\\r\\nset hive.optimize.bucketmapjoin = true;\\r\\nset hive.optimize.bucketmapjoin.sortedmerge = true;\\r\\nset hive.input.format=org.apache.hadoop.hive.ql.io.BucketizedHiveInputFormat;\\r\\n```\\r\\n\\r\\n### Group By\u4f18\u5316\\r\\n\\r\\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cMap\u9636\u6bb5\u76f8\u540ckey\u7684\u6570\u636e\u53d1\u9001\u7ed9\u540c\u4e00\u4e2areducer\u5904\u7406\uff0c\u5f53\u67d0\u4e2akey\u7684\u6570\u636e\u8fdc\u8d85\u8fc7\u5176\u4ed6key\u7684\u5c31\u4f1a\u53d1\u751f\u6570\u636e\u503e\u659c\uff0c\u6b64\u65f6\u53ef\u4ee5\u5f00\u542fmap\u7aef\u8fdb\u884c\u90e8\u5206\u805a\u5408\u3002\\r\\n\\r\\n```bash\\r\\n# 1. \u662f\u5426\u5728mapper\u8fdb\u884c\u805a\u5408\uff0c\u9ed8\u8ba4true\\r\\nset hive.map.aggr = true\\r\\n# 2. \u5728mapper\u8fdb\u884c\u805a\u5408\u7684\u6761\u6570\\r\\nset hive.groupby.mapaggr.checkinterval = 100000\\r\\n# 3. \u6709\u6570\u636e\u503e\u659c\u65f6\u8fdb\u884c\u8d1f\u8f7d\u5747\u8861\uff0c\u9ed8\u8ba4false\\r\\nset hive.groupby.skewindata = true\\r\\n```\\r\\n\\r\\n\u8bbe\u7f6eskewindata\u4e3atrue\u540e\uff0c\u751f\u6210\u7684\u67e5\u8be2\u8ba1\u5212\u4f1a\u6709\u4e24\u4e2aMR\u4efb\u52a1\uff1a\u7b2c\u4e00\u4e2aMR\u4efb\u52a1\u7684mapper\u968f\u673a\u8f93\u51fa\u5230reducer\uff0c\u6bcf\u4e2areducer\u505a\u90e8\u5206\u805a\u5408\u64cd\u4f5c\uff0c\u4f7f\u5f97\u76f8\u540ckey\u5206\u5e03\u5230\u4e0d\u5230reducer\u4e2d\uff1b\u7b2c\u4e8c\u4e2aMR\u4efb\u52a1\u518d\u628a\u9884\u5904\u7406\u7ed3\u679c\u6309\u7167key\u5206\u53d1\u5230reducer\u4e2d\uff0c\u5b8c\u6210\u6700\u7ec8\u7684\u805a\u5408\u64cd\u4f5c\u3002\\r\\n\\r\\n### \u5176\u4ed6\\r\\n\\r\\n- COUNT(DISTINCT)\u4f18\u5316\uff1a\u5f53\u4f7f\u7528count distinct\u65f6\u53ef\u80fd\u51fa\u73b0\u67d0\u4e2areducer\u6570\u636e\u91cf\u8fc7\u5927\u60c5\u51b5\uff0c\u6b64\u65f6\u4f7f\u7528\u5148GROUP BY\u518dCOUNT\u7684\u65b9\u5f0f\u4f18\u5316\uff1b\\r\\n- \u7b1b\u5361\u5c14\u79ef\uff1a\u5c3d\u91cf\u907f\u514d\uff0cJOIN\u65f6\u6dfb\u52a0\u6709\u6548\u7684ON\u6761\u4ef6\\r\\n- \u884c\u5217\u8fc7\u6ee4\uff1a\u5c3d\u91cf\u4f7f\u7528\u5206\u533a\u5b57\u6bb5\u8fc7\u6ee4\uff0c\u5173\u8054\u67e5\u8be2\u65f6\u526f\u8868\u7684\u8fc7\u6ee4\u63d0\u524d\\r\\n\\r\\n```sql\\r\\nselect o.id from bigtable b join bigtable o on o.id = b.id where o.id <= 10;\\r\\nselect b.id from bigtable b join (select id from bigtable where id <= 10) o on b.id = o.id;\\r\\n```\\r\\n\\r\\n## \u4e25\u683c\u6a21\u5f0f\\r\\n\\r\\n\u901a\u8fc7\u8bbe\u7f6e\u5982\u4e0b\u4e25\u683c\u6a21\u5f0f\u53c2\u6570\uff0c\u9632\u6b62\u7528\u6237\u8fdb\u884c\u5371\u9669\u64cd\u4f5c\uff1a\\r\\n\\r\\n1. `hive.strict.checks.no.partition.filter`\uff1a\u8bbe\u7f6e\u4e3atrue\u8981\u6c42\u67e5\u8be2\u5206\u533a\u8868\u65f6\u9700\u8981\u5e26\u4e0a\u5206\u533a\u8fc7\u6ee4\uff1b\\r\\n2. `hive.strict.checks.orderby.no.limit`\uff1a\u8bbe\u7f6e\u4e3atrue\u8981\u6c42\u4f7f\u7528order by\u7684\u67e5\u8be2\u8bed\u53e5\u5fc5\u987b\u4f7f\u7528limit\u9650\u5236\u6570\u636e\u91cf\uff1b\\r\\n3. `hive.strict.checks.cartesian.product`\uff1a\u8bbe\u7f6e\u4e3atrue\u8981\u6c42\u67e5\u8be2\u4e0d\u4f1a\u4ea7\u751f\u7b1b\u5361\u5c14\u79ef\u3002"},{"id":"/2022/02/25/Learning-Hive3.x-05","metadata":{"permalink":"/blog/2022/02/25/Learning-Hive3.x-05","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2022/02/25-Learning-Hive3.x-05.md","source":"@site/blog/2022/02/25-Learning-Hive3.x-05.md","title":"Hive 3.x\u5b66\u4e60\u7b14\u8bb0(5)","description":"Hive 3.1.2\u5b66\u4e60\u7b14\u8bb0(5)\uff1a\u6587\u4ef6\u538b\u7f29\u548c\u5b58\u50a8","date":"2022-02-25T00:00:00.000Z","formattedDate":"February 25, 2022","tags":[{"label":"Hive","permalink":"/blog/tags/hive"},{"label":"BigData","permalink":"/blog/tags/big-data"}],"readingTime":5.925,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"Hive 3.x\u5b66\u4e60\u7b14\u8bb0(5)","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["Hive","BigData"],"description":"Hive 3.1.2\u5b66\u4e60\u7b14\u8bb0(5)\uff1a\u6587\u4ef6\u538b\u7f29\u548c\u5b58\u50a8","hide_table_of_contents":false},"prevItem":{"title":"Hive 3.x\u5b66\u4e60\u7b14\u8bb0(6)","permalink":"/blog/2022/02/27/Learning-Hive3.x-06"},"nextItem":{"title":"Hive 3.x\u5b66\u4e60\u7b14\u8bb0(4)","permalink":"/blog/2022/02/22/Learning-Hive3.x-04"}},"content":":pencil:Hive 3.1.2\u5b66\u4e60\u7b14\u8bb0\u7b2c5\u7bc7\uff1a\u6587\u4ef6\u538b\u7f29\u548c\u5b58\u50a8\u3002\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## \u6587\u4ef6\u538b\u7f29\\r\\n\\r\\nHadoop\u652f\u6301\u7684\u538b\u7f29\u7b97\u6cd5\u5982\u4e0b\u8868\u6240\u793a\uff1a\\r\\n\\r\\n| \u538b\u7f29\u683c\u5f0f  | \u7b97\u6cd5    | \u6269\u5c55\u540d   | \u662f\u5426\u53ef\u5207\u5206     | \u89e3/\u7f16\u7801\u5668                                   | Hadoop\u662f\u5426\u81ea\u5e26 |\\r\\n| -------- | ------- | -------- | ------------- | ------------------------------------------ | -------------- |\\r\\n| deflate  | DEFLATE | .deflate | \u5426            | org.apache.hadoop.io.compress.DefaultCodec | \u662f            |\\r\\n| Gzip     | DEFLATE | .gz      | \u5426            | org.apache.hadoop.io.compress.GzipCodec    | \u662f            |\\r\\n| bzip2    | bzip2   | .bz2     | \u662f            | org.apache.hadoop.io.compress.BZip2Codec   | \u662f            |\\r\\n| LZO      | LZO     | .lzo     | \u662f(\u9700\u8981\u5efa\u7d22\u5f15) | com.hadoop.compression.lzo.LzopCodec       | \u5426            |\\r\\n| Snappy   | Snappy  | .snappy  | \u5426            | org.apache.hadoop.io.compress.SnappyCodec  | \u5426            |\\r\\n\\r\\n\u5404\u538b\u7f29\u7b97\u6cd5\u6027\u80fd\u6bd4\u8f83\uff1a\\r\\n\\r\\n- \u538b\u7f29\u6bd4\uff1abzip2(gzip) > lzo(snappy)\\r\\n- \u538b\u7f29\u3001\u89e3\u538b\u901f\u7387\uff1asnappy(lzo) > gzip > bzip\\r\\n\\r\\n:::info \u4e3a\u4ec0\u4e48Hadoop\u6ca1\u6709\u81ea\u5e26LZO\u548cSnappy\uff1f\\r\\nLZO\u548cSnappy\u91c7\u7528GPL\u534f\u8bae\uff0c\u800cHadoop\u662fApache\u534f\u8bae\u3002\\r\\n:::\\r\\n\\r\\n### \u538b\u7f29\u914d\u7f6e\\r\\n\\r\\n\u4fee\u6539mapred-site.xml\u6587\u4ef6\u6216\u8005\u901a\u8fc7hive set\u547d\u4ee4\uff0c\u76f8\u5173\u53c2\u6570\u5982\u4e0b\u6240\u793a\uff1a\\r\\n\\r\\n| \u53c2\u6570\u540d | \u9ed8\u8ba4\u503c | \u5907\u6ce8 |\\r\\n| ----- | ------ | --- |\\r\\n| io.compression.codecs | org.apache.hadoop.io<br/>.compress.DefaultCodec  | Hadoop\u6839\u636e\u6587\u4ef6\u6269\u5c55\u540d\u5224\u65ad\u662f\u5426\u652f\u6301\u67d0\u79cd\u89e3\u7801\u5668\uff0c\u5728core-site.xml\u4e2d\u914d\u7f6e |\\r\\n| mapreduce.map<br/>.output.compress | false | \u8bbe\u7f6e\u4e3atrue\u5f00\u542f\u538b\u7f29 |\\r\\n| mapreduce.map<br/>.output.compress.codec  | org.apache.hadoop.io<br/>.compress.DefaultCodec | Mapper\u538b\u7f29\u683c\u5f0f |\\r\\n| mapreduce.output<br/>.fileoutputformat.compress | false  | \u8bbe\u7f6e\u4e3atrue\u5f00\u542f\u538b\u7f29 |\\r\\n| mapreduce.output<br/>.fileoutputformat.compress.codec | org.apache.hadoop.io<br/>.compress.DefaultCodec | \u4f7f\u7528gzip\u6216\u8005bzip2 |\\r\\n| mapreduce.output<br/>.fileoutputformat.compress.type  | RECORD | **SequenceFile**\u8f93\u51fa\u4f7f\u7528\u7684\u538b\u7f29\u7c7b\u578b\uff0c\u53e6\u53ef\u9009NONE\u548cBLOCK |\\r\\n\\r\\n### \u5f00\u542fMapper\u538b\u7f29\\r\\n\\r\\n1. \u5f00\u542fHive\u4e2d\u95f4\u4f20\u8f93\u6570\u636e\u538b\u7f29\uff1a`set hive.exec.compress.intermediate=true;`\uff1b\\r\\n2. \u5f00\u542fHadoop\u4e2dMapper\u8f93\u51fa\u538b\u7f29\uff1a`set mapreduce.map.output.compress=true;`\uff1b\\r\\n3. \u8bbe\u7f6eHadoop\u4e2dMapper\u538b\u7f29\u683c\u5f0f\uff1a`set mapreduce.map.output.compress.codec=org.apache.hadoop.io.compress.SnappyCodec;`\uff1b\\r\\n\\r\\n### \u5f00\u542fReducer\u538b\u7f29\\r\\n\\r\\n1. \u5f00\u542fHive\u6700\u7ec8\u8f93\u51fa\u6570\u636e\u538b\u7f29\u529f\u80fd\uff1a`set hive.exec.compress.output=true;`\uff1b\\r\\n2. \u5f00\u542fHadoop\u4e2dReducer\u8f93\u51fa\u538b\u7f29\uff1a`set mapreduce.output.fileoutputformat.compress=true;`\uff1b\\r\\n3. \u8bbe\u7f6eHadoop\u4e2dReducer\u538b\u7f29\u683c\u5f0f\uff1a`set mapreduce.output.fileoutputformat.compress.codec=org.apache.hadoop.io.compress.SnappyCodec;`\uff1b\\r\\n4. \u8bbe\u7f6eHadoop\u4e2dReducer\u538b\u7f29\u5355\u4f4d\uff1a`set mapreduce.output.fileoutputformat.compress.type=BLOCK;`\uff1b\\r\\n\\r\\n\u5176\u4e2dmapreduce.output.fileoutputformat.compress.type\u53c2\u6570\u4ec5\u7528\u4e8e\u7f16\u7801\u65b9\u5f0f\u8bbe\u7f6e\u4e3aSequenceFile\u65f6\uff0c\u9ed8\u8ba4\u4e3aRECORD\uff0c\u4f46\u5efa\u8bae\u4f7f\u7528BLOCK\u3002\\r\\n\\r\\n## \u6587\u4ef6\u5b58\u50a8\\r\\n\\r\\nHive\u652f\u6301\u7684\u6587\u4ef6\u5b58\u50a8\u683c\u5f0f\u6709TEXTFILE\u3001SEQUENCEFILE\u3001ORC\u548cPARQUET\u3002\u5176\u4e2dTEXTFILE\u548cSEQUENCEFILE\u57fa\u4e8e\u884c\u5b58\u50a8\uff0c\u800cORC\u548cPARQUET\u57fa\u4e8e\u5217\u5b58\u50a8\u3002\\r\\n\\r\\n### \u884c/\u5217\u5f0f\u5b58\u50a8\\r\\n\\r\\n\u884c\u5f0f\u5b58\u50a8\u548c\u5217\u5f0f\u5b58\u50a8\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u524d\u8005\u4ee5\u4e00\u884c\u6570\u636e\u4e3a\u5355\u4f4d\u4f9d\u6b21\u5b58\u50a8\uff0c\u540e\u8005\u4ee5\u4e00\u5217\u6570\u636e\u4e3a\u5355\u4f4d\u4f9d\u6b21\u5b58\u50a8\u3002\\r\\n\\r\\n\u67e5\u8be2\u6ee1\u8db3\u6761\u4ef6\u7684\u4e00\u884c\u6570\u636e\u65f6\uff0c\u5217\u5f0f\u5b58\u50a8\u9700\u8981\u53d6\u6bcf\u4e2a\u805a\u96c6\u7684\u5b57\u6bb5\u627e\u5230\u5bf9\u5e94\u5217\u503c\uff0c\u800c\u884c\u5b58\u50a8\u53ea\u9700\u8981\u627e\u5230\u5176\u4e2d\u4e00\u4e2a\u503c\uff0c\u5176\u4f59\u503c\u90fd\u5728\u76f8\u90bb\u5730\u65b9\uff0c\u6b64\u65f6\u884c\u5f0f\u5b58\u50a8\u67e5\u8be2\u901f\u5ea6\u4f18\u4e8e\u5217\u5f0f\u5b58\u50a8\u3002\\r\\n\\r\\n\u7531\u4e8e\u6bcf\u4e2a\u5b57\u6bb5\u7684\u6570\u636e\u805a\u96c6\u5b58\u50a8\uff0c\u5f53\u53ea\u9700\u8981\u67e5\u8be2\u5c11\u6570\u51e0\u4e2a\u5b57\u6bb5\u65f6\u5927\u5927\u51cf\u5c11\u8bfb\u53d6\u6570\u636e\u91cf\u3002\u7531\u4e8e\u6bcf\u4e2a\u5b57\u6bb5\u7c7b\u578b\u76f8\u540c\uff0c\u5217\u5f0f\u5b58\u50a8\u53ef\u4ee5\u8bbe\u8ba1\u66f4\u597d\u7684\u538b\u7f29\u7b97\u6cd5\u3002\\r\\n\\r\\n### TEXTFILE\u683c\u5f0f\\r\\n\\r\\nHive\u4f7f\u7528\u7684\u9ed8\u8ba4\u683c\u5f0f\uff0c\u4e0d\u8981\u538b\u7f29\u6570\u636e\uff0c\u6570\u636e\u5b58\u50a8\u3001\u89e3\u6790\u5f00\u9500\u5927\u3002\u53ef\u7ed3\u5408Gzip\u3001Bzip2\u4f7f\u7528\uff0c\u4f46\u4f7f\u7528Gzip\u65f6Hive\u4e0d\u5bf9\u5207\u5206\u6570\u636e\uff0c\u56e0\u6b64\u65e0\u6cd5\u5e76\u884c\u64cd\u4f5c\u3002\\r\\n\\r\\n### ORC\u683c\u5f0f\\r\\n\\r\\nORC(Optimized Row Columnar)\u662f\u4e00\u79cd\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u75311\u81f3\u591a\u4e2astripe\u3001file footer\u548cpostscript\u7ec4\u6210\uff0c\u6bcf\u4e2astripe\u5305\u542b3\u90e8\u5206\uff1aindex data\u3001row data\u3001stripe footer\uff0c\u5982\u4e0b\u6240\u793a\u4e3aorc\u6587\u4ef6\u7ed3\u6784\u56fe\uff1a\\r\\n\\r\\n<img style={{width:\\"80%\\", height:\\"80%\\"}} src=\\"/img/blog/HiveNotes/OrcFileLayout.png\\" title=\\"Orc File Layout\\"/>\\r\\n\\r\\n- stripe\\r\\n  - index data\uff1a\u8f7b\u91cf\u7ea7index\uff0c\u9ed8\u8ba4\u6bcf\u96941w\u884c\u505a\u4e00\u4e2a\u7d22\u5f15\uff0c\u8868\u793a\u5b57\u6bb5\u6570\u636e\u5728row data\u4e2d\u7684offset\uff1b\\r\\n  - row data\uff1a\u5177\u4f53\u6570\u636e\uff0c\u5206\u6210\u591a\u4e2astream\uff1b\\r\\n  - stripe footer\uff1a\u5b58\u653estream\u7c7b\u578b\u3001\u957f\u5ea6\u7b49\u4fe1\u606f\uff1b\\r\\n- file footer\uff1a\u5b58\u653estripe\u3001column\u6570\u636e\u7c7b\u578b\u7b49\uff1b\\r\\n- postscript\uff1a\u5b58\u653e\u6587\u4ef6\u538b\u7f29\u7c7b\u578b\u548cfile footer\u957f\u5ea6\u7b49\u3002\\r\\n\\r\\n\u8bfb\u53d6ORC\u6587\u4ef6\u65f6\uff0c\u5148seek\u5230\u6587\u4ef6\u5c3e\u90e8\u8bfb\u53d6postscript\uff0c\u5f97\u5230file footer\u957f\u5ea6\uff0c\u518d\u8bfbfilefooter\uff0c\u5f97\u5230stripe\u4fe1\u606f\uff0c\u6700\u540e\u8bfb\u5199stripe\u5f97\u5230\u5217\u6570\u636e\uff0c\u5373\u4ece\u540e\u5f80\u524d\u8bfb\u53d6\u89e3\u6790\u3002\\r\\n\\r\\n### PARQUET\u683c\u5f0f\\r\\n\\r\\n\u548cORC\u6587\u4ef6\u4e00\u6837\uff0cPARQUET\u6587\u4ef6\u4e5f\u662f\u4e00\u79cd\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5305\u542b\u6570\u636e\u548c\u5143\u6570\u636e\uff0c\u56e0\u6b64PARQUET\u662f\u81ea\u89e3\u6790\u7684\uff0c\u5982\u4e0b\u6240\u793a\u4e3aparquet\u7ed3\u6784\u56fe\uff1a\\r\\n\\r\\n<img style={{width:\\"80%\\", height:\\"80%\\"}} src=\\"/img/blog/HiveNotes/ParquetFileLayout.gif\\" title=\\"Parquet File Layout\\"/>\\r\\n\\r\\n- Magic Number\uff1a4\u5b57\u8282\u5185\u5bb9`PAR1`\uff0c\u6807\u8bc6\u5176\u4e3aPARQUET\u6587\u4ef6\\r\\n- \u884c\u7ec4(Row Group)\uff1a\u6bcf\u4e2a\u884c\u7ec4\u5305\u542b\u4e00\u5b9a\u884c\u6570\uff0c\u4e00\u4e2aPARQUET\u6587\u4ef6\u81f3\u5c11\u5b58\u50a8\u4e00\u4e2a\u884c\u7ec4\uff0c\u7c7b\u4f3cstripe\uff1b\\r\\n  - \u5217\u5757(Column Chunk)\uff1a\u884c\u7ec4\u4e2d\u7684\u6bcf\u4e00\u5217\u5b58\u5728\u4e00\u4e2a\u5217\u5757\u4e2d\uff0c\u6240\u6709\u5217\u8fde\u7eed\u5b58\u50a8\u5728\u884c\u7ec4\u6587\u4ef6\u4e2d\uff0c\u6bcf\u4e2a\u5217\u5757\u4e2d\u6570\u636e\u7c7b\u578b\u76f8\u540c\uff0c\u4f46\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u538b\u7f29\u7b97\u6cd5\uff1b\\r\\n    - \u9875(Page)\uff1a\u6bcf\u4e00\u4e2a\u5217\u5757\u5212\u5206\u4e3a\u591a\u4e2a\u9875\uff0c\u9875\u662f\u6700\u5c0f\u7684\u7f16\u7801\u5355\u4f4d\uff0c\u540c\u4e00\u4e2a\u5217\u5757\u7684\u4e0d\u540c\u9875\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7f16\u7801\u65b9\u5f0f\u3002\\r\\n- Footer\\r\\n  - Column meta data\\r\\n- Footer Length\uff1a4\u5b57\u8282\u5b58\u50a8\u6587\u4ef6\u5143\u6570\u636e\u957f\u5ea6\\r\\n- Magic Number\uff1a4\u5b57\u8282\u5185\u5bb9`PAR1`\uff0c\u6807\u8bc6\u5176\u4e3aPARQUET\u6587\u4ef6\\r\\n\\r\\nparquet\u6587\u4ef6\u9996\u5c3e\u662f\u56fa\u5b9a\u76844\u5b57\u8282\u5185\u5bb9\'PAR1\'\uff0c\u4ece\u5e95\u5f80\u4e0a\u8d70\u662ffooter length\u8868\u793a\u5143\u6570\u636e\u957f\u5ea6\uff0c\u901a\u8fc7footer length\u548c\u6587\u4ef6\u957f\u5ea6\u53ef\u4ee5\u8ba1\u7b97\u51fa\u5143\u6570\u636e\u504f\u79fb\u91cf\u4ece\u800c\u8bfb\u53d6\u3002\u5143\u6570\u636e\u5305\u542b\u884c\u7ec4\u5143\u6570\u636e\u4fe1\u606f\u3001\u8be5\u6587\u4ef6\u5b58\u50a8\u6570\u636e\u7684schema\u4fe1\u606f\u4ee5\u53ca\u9875\u5143\u6570\u636e\u3002"},{"id":"/2022/02/22/Learning-Hive3.x-04","metadata":{"permalink":"/blog/2022/02/22/Learning-Hive3.x-04","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2022/02/22-Learning-Hive3.x-04.md","source":"@site/blog/2022/02/22-Learning-Hive3.x-04.md","title":"Hive 3.x\u5b66\u4e60\u7b14\u8bb0(4)","description":"Hive 3.1.2\u5b66\u4e60\u7b14\u8bb0(4)\uff1a\u5206\u533a\u8868\u548c\u5206\u6876\u8868","date":"2022-02-22T00:00:00.000Z","formattedDate":"February 22, 2022","tags":[{"label":"Hive","permalink":"/blog/tags/hive"},{"label":"BigData","permalink":"/blog/tags/big-data"}],"readingTime":7.735,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"Hive 3.x\u5b66\u4e60\u7b14\u8bb0(4)","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["Hive","BigData"],"description":"Hive 3.1.2\u5b66\u4e60\u7b14\u8bb0(4)\uff1a\u5206\u533a\u8868\u548c\u5206\u6876\u8868","hide_table_of_contents":false},"prevItem":{"title":"Hive 3.x\u5b66\u4e60\u7b14\u8bb0(5)","permalink":"/blog/2022/02/25/Learning-Hive3.x-05"},"nextItem":{"title":"Hive 3.x\u5b66\u4e60\u7b14\u8bb0(3)","permalink":"/blog/2022/02/21/Learning-Hive3.x-03"}},"content":":pencil:Hive 3.1.2\u5b66\u4e60\u7b14\u8bb0\u7b2c4\u7bc7\uff1a\u5206\u533a\u8868\u548c\u5206\u6876\u8868\u3002\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## \u5206\u533a\u8868\\r\\n\\r\\n[Hive\u5206\u533a\u8868](https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DDL#LanguageManualDDL-PartitionedTables)\u5bf9\u5e94HDFS\u4e0a\u8868\u6570\u636e\u76ee\u5f55\u4e0b\u7684\u5b50\u76ee\u5f55\uff0c\u8be5\u5b50\u76ee\u5f55\u4e0b\u5305\u542b\u5206\u533a\u7684\u6240\u6709\u6570\u636e\u6587\u4ef6\u3002Hive\u5206\u533a\u5c31\u662f\u628a\u5927\u6570\u636e\u96c6\u6309\u7167\u4e1a\u52a1\u9700\u8981\u5206\u5272\u4e3a\u5c0f\u6570\u636e\u96c6\u653e\u5728\u4e0d\u540c\u76ee\u5f55\u4e0b\uff0c\u6bd4\u5982\u6309\u5929\u521b\u5efa\u5206\u533a\u76ee\u5f55\u6765\u5b58\u50a8\u6570\u636e\uff0c\u8fd9\u6837\u5728where\u5b50\u53e5\u4e2d\u6307\u5b9a\u5206\u533a\u53ef\u4ee5\u52a0\u5feb\u67e5\u8be2\u901f\u5ea6\u3002\\r\\n\\r\\n### \u57fa\u672c\u64cd\u4f5c\\r\\n\\r\\n1. \u521b\u5efa\u5206\u533a\u8868\u7684\u57fa\u672c\u8bed\u6cd5\u5982\u4e0b\u6240\u793a\uff0c\u6ce8\u610fpartition\u52a0ed\u3002\u5206\u533a\u5b57\u6bb5\u662f\u8868\u7684\u4f2a\u5217\uff0c\u56e0\u6b64\u4e0d\u80fd\u548c\u8868\u5b57\u6bb5\u91cd\u540d\uff0c\u5426\u5219\u62a5\u9519\\"FAILED: Error in semantic analysis: Column repeated in partitioning columns\\"\u3002\\r\\n\\r\\n```sql\\r\\nCREATE [TEMPORARY] [EXTERNAL] TABLE [IF NOT EXISTS] [db_name.]table_name    -- (Note: TEMPORARY available in Hive 0.14.0 and later)\\r\\n  [(col_name data_type [column_constraint_specification] [COMMENT col_comment], ... [constraint_specification])]\\r\\n  [COMMENT table_comment]\\r\\n  [PARTITIONED BY (col_name data_type [COMMENT col_comment], ...)]\\r\\n```\\r\\n\\r\\n2. \u52a0\u8f7d\u6587\u4ef6\u5230\u5206\u533a\u8868\u5fc5\u987b\u6307\u5b9a\u5206\u533a\u5b57\u6bb5\uff0c\u6ce8\u610fpartition\u6ca1\u6709\u52a0ed\u3002\\r\\n\\r\\n```sql\\r\\nLOAD DATA [LOCAL] INPATH \'filepath\' [OVERWRITE] INTO TABLE tablename PARTITION (partcol1=val1, partcol2=val2 ...)\\r\\n```\\r\\n\\r\\n3. \u67e5\u8be2\u5206\u533a\u6570\u636e\uff0c\u53ea\u9700\u8981\u628a\u5206\u533a\u5b57\u6bb5\u5f53\u6210\u666e\u901a\u5b57\u6bb5\u653e\u5728where\u5b50\u53e5\u4e2d\u8fc7\u6ee4\u5373\u53ef\u3002\\r\\n\\r\\n4. \u589e\u52a0/\u5220\u9664\u5206\u533a\uff0c\u76f8\u5f53\u4e8e\u65b0\u5efa/\u5220\u9664\u6587\u4ef6\u5939\uff0c**\u6ce8\u610f\u6dfb\u52a0\u591a\u4e2a\u5206\u533a\u6ca1\u6709\u9017\u53f7\uff0c\u4f46\u5220\u9664\u591a\u4e2a\u5206\u533a\u6709\u9017\u53f7**\u3002\\r\\n\\r\\n```sql\\r\\nALTER TABLE tablename ADD PARTITION(partcol1=val1) [ PARTITION(partcol2=val2)];\\r\\nALTER TABLE tablename DROP PARTITION(partcol1=val1) [, PARTITION(partcol2=val2)];\\r\\n```\\r\\n\\r\\n5. \u67e5\u770b\u5206\u533a\u8868\u5206\u533a\u4fe1\u606f:\\r\\n\\r\\n```sql\\r\\nSHOW PARTITIONS tablename;\\r\\nDESC FORMATTED tablename;\\r\\n```\\r\\n\\r\\n### \u591a\u7ea7\u5206\u533a\\r\\n\\r\\n\u5f53\u6bcf\u5929\u7684\u6570\u636e\u91cf\u4e5f\u5f88\u5927\u65f6\uff0c\u53ef\u4ee5\u6309\u7167\u5c0f\u65f6\u7ee7\u7eed\u5206\u533a(\u5373\u5728\u6309\u5929\u4e3a\u76ee\u5f55\u4e0b\u521b\u5efa\u6309\u5c0f\u65f6\u7684\u76ee\u5f55)\uff0c\u5373\u521b\u5efa\u591a\u7ea7\u5206\u533a(\u6307\u5b9a\u591a\u4e2a\u5206\u533a\u5b57\u6bb5)\u3002\u540c\u6837\u5730\uff0c\u5bf9\u4e8e\u591a\u7ea7\u5206\u533a\u8868\u7684\u6570\u636e\u52a0\u8f7d\uff0c\u4f7f\u7528LOAD DATA\u65f6\u8981\u6307\u5b9a\u6240\u6709\u5206\u533a\u5b57\u6bb5\u7684\u503c\uff0c\u4e0d\u7136Hive\u4e0d\u77e5\u9053\u8be5\u653e\u54ea\u4e2a\u5b50\u6587\u4ef6\u5939\u4e0b(\u52a8\u6001\u5206\u533a\u53ef\u4ee5)\u3002\\r\\n\\r\\n\u73b0\u5728\u901a\u8fc7`dfs -mkdir`\u81ea\u884c\u521b\u5efa\u6587\u4ef6\u5939\u548c`dfs -put`\u4e0a\u4f20\u6570\u636e\u6587\u4ef6\uff0c\u6b64\u65f6\u6267\u884cSELECT\u8bed\u53e5\u67e5\u8be2\u4e0d\u5230\u7ed3\u679c\u3002\u8981\u8ba9\u5206\u533a\u8868\u548c\u6570\u636e\u5173\u8054\uff0c\u6709\u5982\u4e0b3\u79cd\u65b9\u5f0f\uff1a\\r\\n\\r\\n1. \u6267\u884c\u4fee\u590d\u547d\u4ee4`MSCK REPAIR TABLE tablename`\uff1b\\r\\n2. \u6dfb\u52a0\u5206\u533a`ALTER TABLE tablename PARTITION(partcol1=val1) [ PARTITION(partcol2=val2)]`\uff1b\\r\\n3. \u4f7f\u7528`LOAD DATA`\u4e0a\u4f20\u6570\u636e\u6587\u4ef6\u3002\\r\\n\\r\\n### \u52a8\u6001\u5206\u533a\\r\\n\\r\\n\u9759\u6001\u5206\u533a\u6307\u63d2\u5165\u6570\u636e\u65f6\u663e\u5f0f\u6307\u5b9a\u5206\u533a\u5b57\u6bb5\u540d\u548c\u5206\u533a\u5b57\u6bb5\u503c\uff0c\u800c\u52a8\u6001\u5206\u533a\u6307Hive\u6839\u636e\u8868\u5b57\u6bb5\u503c\u81ea\u52a8\u5730\u521b\u5efa\u5bf9\u5e94\u5206\u533a\u5e76\u5c06\u6570\u636e\u63d2\u5165\u5206\u533a\uff0c\u5f00\u542f\u52a8\u6001\u5206\u533a\u9700\u8981\u8fdb\u884c\u5982\u4e0b\u914d\u7f6e\uff1a\\r\\n\\r\\n1. \u914d\u7f6e`hive.exec.dynamic.partition`\uff0c\u9ed8\u8ba4\u4e3atrue\u8868\u793a\u5f00\u542f\u52a8\u6001\u5206\u533a\uff1b\\r\\n2. \u914d\u7f6e`hive.exec.dynamic.partition.mode`\uff0c\u9ed8\u8ba4\u4e3a`strict`\u8868\u793a\u81f3\u5c11\u6307\u5b9a\u4e00\u4e2a\u5206\u533a\u4e3a\u9759\u6001\u5206\u533a\uff0c`nostrict`\u6a21\u5f0f\u8868\u793a\u5141\u8bb8\u6240\u6709\u5206\u533a\u5b57\u6bb5\u90fd\u53ef\u4ee5\u4f7f\u7528\u52a8\u6001\u5206\u533a\uff1b\\r\\n3. \u914d\u7f6e`hive.exec.max.dynamic.partitions`\uff0c\u8868\u793a\u6240\u6709\u6307\u5b9aMR\u8282\u70b9\u4e0a\u6700\u591a\u53ef\u4ee5\u521b\u5efa\u52a8\u6001\u5206\u533a\u7684\u6570\u91cf\uff0c\u9ed8\u8ba41000\uff1b\\r\\n4. \u914d\u7f6e`hive.exec.max.dynamic.partitions.pernode`\uff0c\u8868\u793a\u6bcf\u4e2aMR\u8282\u70b9\u4e0a\u6700\u591a\u53ef\u4ee5\u521b\u5efa\u52a8\u6001\u5206\u533a\u7684\u6570\u91cf\uff0c\u9ed8\u8ba4100\uff1b\\r\\n5. \u914d\u7f6e`hive.exec.max.created.files`\uff0c\u8868\u793a\u6574\u4e2aMR\u7a0b\u5e8f\u4e2d\u519c\u6700\u5927\u53ef\u4ee5\u521b\u5efaHDFS\u6587\u4ef6\u6570\u91cf\uff0c\u9ed8\u8ba4100000\uff1b\\r\\n6. \u53ef\u9009\u914d\u7f6e`hive.error.on.empty.partition`\uff0c\u8868\u793a\u6709\u7a7a\u5206\u533a\u751f\u6210\u65f6\u662f\u5426\u629b\u51fa\u5f02\u5e38\uff0c\u9ed8\u8ba4false\uff0c\u4e0d\u9700\u8981\u8bbe\u7f6e\u3002\\r\\n\\r\\n[Hive 3.x\u65b0\u589e\u7279\u6027](https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DML#LanguageManualDML-DynamicPartitionInserts)\uff1a\u52a8\u6001\u5206\u533aINSERT-SELECT\u63d2\u5165\u53ef\u4ee5\u4e0d\u7528\u6307\u5b9a\u5206\u533a\u5b57\u6bb5\uff0c\u751a\u81f3\u4e25\u683c\u6a21\u5f0f\u90fd\u4e0d\u9700\u8981\u5173\u95ed\u3002\\r\\n\\r\\n## \u5206\u6876\u8868\\r\\n\\r\\n\u5206\u6876\u8868\u5c06\u8868\u6570\u636e\u6587\u4ef6\u62c6\u5206\u4e3a\u591a\u4e2a\u5c0f\u6587\u4ef6\u6765\u66f4\u7ec6\u7c92\u5ea6\u7684\u7ba1\u7406\u6570\u636e\uff0c\u5373\u5206\u533a\u9488\u5bf9\u7684\u662f\u6570\u636e\u5b58\u50a8\u8def\u5f84\uff0c\u800c\u5206\u6876\u9488\u5bf9\u7684\u662f\u6570\u636e\u6587\u4ef6\u3002\u521b\u5efa\u5206\u6876\u8868\u7684\u57fa\u672c\u8bed\u6cd5\u5982\u4e0b\uff1a\\r\\n\\r\\n```sql\\r\\nCREATE [TEMPORARY] [EXTERNAL] TABLE [IF NOT EXISTS] [db_name.]table_name    -- (Note: TEMPORARY available in Hive 0.14.0 and later)\\r\\n  [(col_name data_type [column_constraint_specification] [COMMENT col_comment], ... [constraint_specification])]\\r\\n  [CLUSTERED BY (col_name, col_name, ...) [SORTED BY (col_name [ASC|DESC], ...)] INTO num_buckets BUCKETS]\\r\\n```\\r\\n\\r\\n**\u548c\u5206\u533a\u8868\u8981\u6c42\u5206\u533a\u5b57\u6bb5\u5fc5\u987b\u4e0d\u80fd\u548c\u8868\u5b57\u6bb5\u91cd\u540d\u76f8\u53cd\uff0c\u5206\u6876\u8868\u8981\u6c42\u5206\u6876\u5b57\u6bb5\u4e00\u5b9a\u662f\u8868\u5b57\u6bb5\u540d**\u3002\u548cPARTITIONED BY\u4e00\u6837\u6ce8\u610fCLUSTERED BY\u52a0\u4e86ed\u3002\u5206\u6876\u7b97\u6cd5\u662f\u8ba1\u7b97\u5206\u6876\u5b57\u6bb5\u7684\u54c8\u5e0c\u503c\uff0c\u7136\u540e\u5bf9\u6876\u4e2a\u6570\u53d6\u6a21\u51b3\u5b9a\u8bb0\u5f55\u653e\u5728\u54ea\u4e2a\u6876\u4e2d\u3002\u64cd\u4f5c\u5206\u6876\u8868\u65f6\u9700\u8981\u6ce8\u610f\uff1a\\r\\n\\r\\n1. \u8bbe\u7f6ereduce\u4e2a\u6570\u4e3a-1\u6216\u8005\u5927\u4e8e\u6876\u6570\uff0c\u8ba9Job\u81ea\u884c\u51b3\u5b9a\u7528\u591a\u5c11\u4e2areduce\uff1b\\r\\n2. \u4eceHDFS\u4e0aLOAD\u6570\u636e\u5230\u5206\u6876\u8868\uff0c\u9632\u6b62\u672c\u5730\u6587\u4ef6\u627e\u4e0d\u5230\uff1b\\r\\n3. \u4e0d\u8981\u4f7f\u7528\u672c\u5730\u6a21\u5f0f\u3002\\r\\n\\r\\n### \u62bd\u6837\u67e5\u8be2\\r\\n\\r\\nHive\u63d0\u4f9b[TABLESAMPLE\u4ece\u53e5](https://cwiki.apache.org/confluence/display/Hive/LanguageManual+Sampling)\u7528\u4e8e\u67e5\u8be2\u62bd\u6837\u6570\u636e\u800c\u4e0d\u662f\u6574\u4e2a\u8868\u6570\u636e\uff0c\u5206\u4e3a\u5206\u6876\u8868\u62bd\u6837\u548c\u5757\u62bd\u6837\u4e24\u79cd\uff0c\u8bed\u6cd5\u5982\u4e0b\uff1a\\r\\n\\r\\n```sql\\r\\n# \u5206\u6876\u8868\u62bd\u6837\\r\\nselectstatement FROM fromstatement TABLESAMPLE (BUCKET x OUT OF y [ON colname])\\r\\n# \u6570\u636e\u5757\u62bd\u6837\\r\\nselectstatement FROM fromstatement TABLESAMPLE (n PERCENT) | (ByteLengthLiteral)\\r\\n```\\r\\n\\r\\n\u5bf9\u4e8e\u5206\u6876\u8868\u62bd\u6837\uff0c\u6570\u636e\u6839\u636e\u62bd\u6837\u5217colname\u968f\u673a\u5730\u5206\u6210y\u4efd\uff0c\u7f16\u53f7\u4ece1\u5230y\uff0c\u7136\u540e\u8fd4\u56de\u7f16\u53f7\u4e3ax\u7684\u6570\u636e\uff0c\u5efa\u8baey\u662f\u8868\u6876\u6570\u7684\u56e0\u5b50\u6216\u500d\u6570\u3002colname\u975e\u5206\u533a\u5b57\u6bb5\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a`rand()`\u8868\u793a\u5bf9\u6574\u884c\u6570\u636e\u62bd\u6837\u3002\u5bf9\u4e8e\u666e\u901a\u8868\u4f7f\u7528TABLESAMPLE\u4ece\u53e5\u4f1a\u626b\u63cf\u6574\u4e2a\u8868\u6570\u636e\uff0c\u5bfc\u81f4\u6548\u7387\u4f4e\uff0c\u56e0\u6b64\u5f80\u5f80\u5c06\u5176\u8fd0\u7528\u5230\u5206\u6876\u8868\u4e0a\uff0c\u5e76\u4e14\u62bd\u6837\u5217colname\u548c\u5206\u6876\u5b57\u6bb5\u76f8\u540c\u3002\u4f8b\u5982\u5206\u6876\u8868\u6876\u6570\u4e3a32\uff0c\u5bf9\u4e8e`TABLESAMPLE(BUCKET 3 OUT OF 16 ON id)`\uff0c\u5b83\u4f1a\u9009\u62e9\u7b2c3\u4e2a\u548c\u7b2c19\u4e2a\u6876\u6570\u636e\u5408\u621032/16=2\u4e2a\u6876\u8fd4\u56de\uff0c\u800c\u5bf9\u4e8e`TABLESAMPLE(BUCKET 3 OUT OF 64 ON id)`\uff0c\u5b83\u4f1a\u9009\u62e9\u7b2c3\u4e2a\u6876\u76841/2\u6570\u636e\u8fd4\u56de\u3002**\u6ce8\u610fx\u5fc5\u987b\u5c0f\u4e8e\u7b49\u4e8ey\uff0c\u5426\u5219\u62a5\u9519**\u3002\\r\\n\\r\\n\u5bf9\u4e8e\u6570\u636e\u5757\u62bd\u6837\uff0c\u5b83\u62bd\u53d6\u81f3\u5c11n%\u6570\u636e(\u6ce8\u610f\u5e76\u4e0d\u4e00\u5b9a\u662f\u884c\u6570)\u4f5c\u4e3a\u8f93\u5165\uff0c\u4ec5\u652f\u6301`CombineHiveInputFormat`\uff0c\u67d0\u4e9b\u538b\u7f29\u683c\u5f0f\u4e0d\u652f\u6301\u3002\u5982\u679c\u62bd\u6837\u5931\u8d25\u5219\u626b\u63cf\u6574\u4e2a\u8868/\u5206\u533a\u3002**\u6570\u636e\u5757\u62bd\u6837\u8f93\u5165\u5728HDFS\u5757\u7ea7\u522b**\uff0c\u6bd4\u5982n%\u6570\u636e\u5927\u5c0f\u4e3a100MB\u800c\u5757\u5927\u5c0f\u4e3a128MB\uff0c\u6b64\u65f6\u8f93\u5165128MB\u3002\u4e5f\u53ef\u4ee5\u76f4\u63a5\u6307\u5b9a\u62bd\u53d6\u5927\u5c0f\uff0c\u4f8b\u5982`SELECT * FROM source TABLESAMPLE(100M)`\u3002\\r\\n\\r\\n## \u603b\u7ed3\\r\\n\\r\\n1. \u5206\u533a\u5c31\u662f\u5206\u76ee\u5f55\uff0c\u591a\u4e2a\u5206\u533a\u5b57\u6bb5\u5bf9\u5e94\u591a\u5c42\u5b50\u76ee\u5f55\uff1b\\r\\n2. \u5728Hive3.x\u4e4b\u524d\uff0c\u52a8\u6001\u5206\u533a\u9700\u8981\u5173\u95ed\u4e25\u683c\u6a21\u5f0f\uff1b\\r\\n3. \u5206\u6876\u8868\u91c7\u6837\u5c06\u6570\u636e\u5206\u4e3ay\u4efd\u53d6\u7b2cx\u4efd(\u4ece1\u5f00\u59cb\u8ba1\u6570)\uff0c\u6570\u636e\u5757\u91c7\u6837\u57fa\u4e8e\u5757\uff0c\u5bf9\u6570\u636e\u683c\u5f0f\u6709\u8981\u6c42\u3002"},{"id":"/2022/02/21/Learning-Hive3.x-03","metadata":{"permalink":"/blog/2022/02/21/Learning-Hive3.x-03","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2022/02/21-Learning-Hive3.x-03.md","source":"@site/blog/2022/02/21-Learning-Hive3.x-03.md","title":"Hive 3.x\u5b66\u4e60\u7b14\u8bb0(3)","description":"Hive 3.1.2\u5b66\u4e60\u7b14\u8bb0(3)\uff1aHive SQL","date":"2022-02-21T00:00:00.000Z","formattedDate":"February 21, 2022","tags":[{"label":"Hive","permalink":"/blog/tags/hive"},{"label":"BigData","permalink":"/blog/tags/big-data"}],"readingTime":7.275,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"Hive 3.x\u5b66\u4e60\u7b14\u8bb0(3)","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["Hive","BigData"],"description":"Hive 3.1.2\u5b66\u4e60\u7b14\u8bb0(3)\uff1aHive SQL","hide_table_of_contents":false},"prevItem":{"title":"Hive 3.x\u5b66\u4e60\u7b14\u8bb0(4)","permalink":"/blog/2022/02/22/Learning-Hive3.x-04"},"nextItem":{"title":"Hive 3.x\u5b66\u4e60\u7b14\u8bb0(2)","permalink":"/blog/2022/02/20/Learning-Hive3.x-02"}},"content":":pencil:Hive 3.1.2\u5b66\u4e60\u7b14\u8bb0\u7b2c3\u7bc7\uff1aHive SQL\u3002\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\nHive SQL(HQL)\u5206\u4e3aDDL(\u6570\u636e\u5b9a\u4e49\u8bed\u8a00\uff0cData Definition Language)\u3001\u6570\u636e\u67e5\u8be2\u548cDML(\u6570\u636e\u64cd\u63a7\u8bed\u8a00\uff0cData Manipulation Language)\uff0c\u66f4\u591a\u5185\u5bb9\u8be6\u89c1[Hive SQL Language Manual](https://cwiki.apache.org/confluence/display/Hive/LanguageManual)\u3002\\r\\n\\r\\n## DDL\\r\\n\\r\\n- \u521b\u5efa\u6570\u636e\u5e93\uff1a\\r\\n\\r\\n```sql\\r\\nCREATE DATABASE [IF NOT EXISTS] database_name\\r\\n[COMMENT database_comment]\\r\\n[LOCATION hdfs_path]\\r\\n[WITH DBPROPERTIES (property_name=property_value, ...)];\\r\\n```\\r\\n\\r\\n- \u663e\u793a\u6570\u636e\u5e93\u4fe1\u606f(\u52a0extended\u663e\u793a\u8be6\u60c5)\uff1a`desc database [extended] <dbname>`\uff1b\\r\\n\\r\\n- **\u521b\u5efa\u8868**\uff1a\\r\\n\\r\\n```sql\\r\\nCREATE [TEMPORARY] [EXTERNAL] TABLE [IF NOT EXISTS] [db_name.]table_name    -- (Note: TEMPORARY available in Hive 0.14.0 and later)\\r\\n  [(col_name data_type [column_constraint_specification] [COMMENT col_comment], ... [constraint_specification])]\\r\\n  [COMMENT table_comment]\\r\\n  [PARTITIONED BY (col_name data_type [COMMENT col_comment], ...)]\\r\\n  [CLUSTERED BY (col_name, col_name, ...) [SORTED BY (col_name [ASC|DESC], ...)] INTO num_buckets BUCKETS]\\r\\n  [SKEWED BY (col_name, col_name, ...)                  -- (Note: Available in Hive 0.10.0 and later)]\\r\\n     ON ((col_value, col_value, ...), (col_value, col_value, ...), ...)\\r\\n     [STORED AS DIRECTORIES]\\r\\n  [\\r\\n   [ROW FORMAT row_format] \\r\\n   [STORED AS file_format]\\r\\n     | STORED BY \'storage.handler.class.name\' [WITH SERDEPROPERTIES (...)]  -- (Note: Available in Hive 0.6.0 and later)\\r\\n  ]\\r\\n  [LOCATION hdfs_path]\\r\\n  [TBLPROPERTIES (property_name=property_value, ...)]   -- (Note: Available in Hive 0.6.0 and later)\\r\\n  [AS select_statement];   -- (Note: Available in Hive 0.5.0 and later; not supported for external tables)\\r\\n \\r\\nCREATE [TEMPORARY] [EXTERNAL] TABLE [IF NOT EXISTS] [db_name.]table_name\\r\\n  LIKE existing_table_or_view_name\\r\\n  [LOCATION hdfs_path];\\r\\n```\\r\\n\\r\\n### \u5916\u90e8\u8868\u548c\u7ba1\u7406\u8868\\r\\n\\r\\nHive\u9ed8\u8ba4\u521b\u5efa\u7684\u8868\u90fd\u662f\u7ba1\u7406\u8868(Managed Table\uff0c\u4e5f\u79f0\u5185\u90e8\u8868)\uff0c\u9ed8\u8ba4\u5c06\u8868\u6570\u636e\u653e\u5728`hive.metastore.warehouse.dir`\u914d\u7f6e\u9879\u6307\u5b9a\u7684\u76ee\u5f55\u4e0b\u3002**\u5f53\u5220\u9664\u7ba1\u7406\u8868\u65f6\uff0cHive\u4f1a\u5220\u9664\u8868\u6570\u636e\u800c\u5220\u9664\u5916\u90e8\u8868\u65f6\u4e0d\u4f1a\u5220\u9664\u8868\u6570\u636e\uff0c\u4ec5\u4ec5\u5220\u9664\u8868\u5143\u4fe1\u606f**\u3002\\r\\n\\r\\n:::info \u8be5\u4f7f\u7528\u54ea\u79cd\u8868\uff1f\\r\\n\u539f\u59cb\u6570\u636e\u5148\u4fdd\u5b58\u5230\u5916\u90e8\u8868\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u7edf\u8ba1\u5206\u6790\u4ea7\u751f\u7684\u7ed3\u679c\u4fdd\u5b58\u5230\u5185\u90e8\u8868\\r\\n:::\\r\\n\\r\\n\u901a\u8fc7`ALTER TABLE <tablename> SET TBLPROPERTIES(\'EXTERNAL\'=\'TRUE\');`\u6216\u8005`ALTER TABLE <tablename> SET TBLPROPERTIES(\'EXTERNAL\'=\'FALSE\');`\u6765\u8f6c\u6362\u7ba1\u7406\u8868\u548c\u5185\u90e8\u8868\uff0c**\u6ce8\u610f\uff1a(\'EXTERNAL\'=\'TRUE\')\u548c(\'EXTERNAL\'=\'FALSE\')\u4e3a\u56fa\u5b9a\u5199\u6cd5\uff0c\u533a\u5206\u5927\u5c0f\u5199**\u3002\\r\\n\\r\\n## DML\\r\\n\\r\\n\u6839\u636e[Hive DML Wiki](https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DML)\u5206\u4e3a\uff1a\u6570\u636e\u5bfc\u5165\u3001\u6570\u636e\u5bfc\u51fa\u3001\u6570\u636e\u6e05\u9664\u3001\u6570\u636e\u66f4\u65b0\u548c\u6570\u636e\u5408\u5e765\u4e2a\u90e8\u5206\uff0c\u5176\u4e2d\u6570\u636eDELETE\u6e05\u9664\u3001\u6570\u636e\u66f4\u65b0UPDATE\u548c\u6570\u636e\u5408\u5e76MERGE\u4ec5\u9002\u7528\u4e8e\u4e8b\u52a1\u8868\u3002\\r\\n\\r\\n### \u6570\u636e\u5bfc\u5165\\r\\n\\r\\n#### \u6587\u4ef6\u5bfc\u5165\\r\\n\\r\\n\u901a\u8fc7\u6587\u4ef6\u5bfc\u5165\u6570\u636e\u5230\u8868\uff0c\u8bed\u6cd5\u5982\u4e0b\u3002\u52a0LOCAL\u8868\u793a\u4ece\u672c\u5730\u6587\u4ef6\u5bfc\u5165(**\u62f7\u8d1d\u5230HDFS\uff0c\u539f\u6587\u4ef6\u8fd8\u5728**)\uff0c\u5426\u5219\u4eceHDFS\u4e2d\u5bfc\u5165(**\u79fb\u52a8\u5230\u8868\u6570\u636e\u76ee\u5f55\uff0c\u539f\u6587\u4ef6\u201c\u5220\u9664\u201d**)\u3002\\r\\n\\r\\n```sql\\r\\nLOAD DATA [LOCAL] INPATH \'filepath\' [OVERWRITE] INTO TABLE tablename [PARTITION (partcol1=val1, partcol2=val2 ...)]\\r\\n \\r\\nLOAD DATA [LOCAL] INPATH \'filepath\' [OVERWRITE] INTO TABLE tablename [PARTITION (partcol1=val1, partcol2=val2 ...)] [INPUTFORMAT \'inputformat\' SERDE \'serde\'] (3.0 or later)\\r\\n```\\r\\n\\r\\n#### \u7b80\u5355\u63d2\u5165\\r\\n\\r\\n\u7b80\u5355\u63d2\u5165\u6570\u636e\u5230\u8868\uff0c\u8bed\u6cd5\u5982\u4e0b\u3002`INTO`\u8ffd\u52a0\u5199\u6570\u636e\uff0c`OVERWRITE`\u8986\u76d6\u5199\u6570\u636e\u3002\\r\\n\\r\\n```sql\\r\\nINSERT INTO[OVERWRITE] TABLE tablename [PARTITION (partcol1[=val1], partcol2[=val2] ...)] VALUES values_row [, values_row ...]\\r\\n# \u5176\u4e2dvalues_row := ( value [, value ...] )\uff0c\u800cvalue\u8981\u4e48\u662fnull\u6216\u8005\u4efb\u4f55\u6709\u6548\u7684SQL\u5b57\u9762\u91cf\\r\\n```\\r\\n\\r\\n#### \u67e5\u8be2SQL\u63d2\u5165\\r\\n\\r\\n\u5c06SQL\u67e5\u8be2\u7ed3\u679c\u63d2\u5165\u5230\u8868\uff0c\u8bed\u6cd5\u5982\u4e0b\u3002**\u6ce8\u610f\u53ea\u6709`INSERT OVERWRITE`\u65f6\u624d\u80fd\u642d\u914d`IF NOT EXISTS`\uff0c\u8868\u793a\u63d2\u5165\u65f6\u521b\u5efa\u4e0d\u5b58\u5728\u7684\u5206\u533a\uff1b\u5f53\u8868\u5c5e\u6027`auto.purge`\u4e3atrue\u5e76\u4e14\u4e3a\u7ba1\u7406\u8868\u65f6\uff0c\u8986\u76d6\u5199\u4f1a\u5c06\u65e7\u6570\u636e\u76f4\u63a5\u5220\u9664\u800c\u4e0d\u662f\u79fb\u5230Trash**\u3002\u6807\u51c6\u63d2\u5165\u548c\u52a8\u6001\u5206\u533a\u63d2\u5165\u7684\u533a\u522b\u5728\u4e8e\u5206\u533a\u5b57\u6bb5\u4e0d\u8981\u6c42\u63d0\u4f9b\u503c\u3002\\r\\n\\r\\n```sql\\r\\n# 1. \u6807\u51c6\u8bed\u6cd5\\r\\nINSERT OVERWRITE TABLE tablename1 [PARTITION (partcol1=val1, partcol2=val2 ...) [IF NOT EXISTS]] select_statement1 FROM from_statement;\\r\\n\\r\\nINSERT INTO TABLE tablename1 [PARTITION (partcol1=val1, partcol2=val2 ...)] select_statement1 FROM from_statement;\\r\\n\\r\\n# 2. \u591a\u6761\u63d2\u5165\\r\\nFROM from_statement\\r\\nINSERT OVERWRITE TABLE tablename1 [PARTITION (partcol1=val1, partcol2=val2 ...) [IF NOT EXISTS]] select_statement1\\r\\n[INSERT OVERWRITE TABLE tablename2 [PARTITION ... [IF NOT EXISTS]] select_statement2]\\r\\n[INSERT INTO TABLE tablename2 [PARTITION ...] select_statement2] ...;\\r\\n\\r\\nFROM from_statement\\r\\nINSERT INTO TABLE tablename1 [PARTITION (partcol1=val1, partcol2=val2 ...)] select_statement1\\r\\n[INSERT INTO TABLE tablename2 [PARTITION ...] select_statement2]\\r\\n[INSERT OVERWRITE TABLE tablename2 [PARTITION ... [IF NOT EXISTS]] select_statement2] ...;\\r\\n\\r\\n# 3. \u52a8\u6001\u5206\u533a\u63d2\u5165\\r\\nINSERT OVERWRITE TABLE tablename PARTITION (partcol1[=val1], partcol2[=val2] ...) select_statement FROM from_statement;\\r\\n\\r\\nINSERT INTO TABLE tablename PARTITION (partcol1[=val1], partcol2[=val2] ...) select_statement FROM from_statement;\\r\\n```\\r\\n\\r\\n#### \u5176\u4ed6\u65b9\u5f0f\\r\\n\\r\\n1. \u6839\u636e\u67e5\u8be2SQL\u7ed3\u679c\u521b\u5efa\u8868\u5e76\u63d2\u5165\u6570\u636e\uff0c\u7528\u4e8e\u751f\u6210\u4e2d\u95f4\u8868\uff0c\u8bed\u6cd5\u4e3a`CREATE TABLE IF NOT EXISTS tablename AS select_statement FROM from_statement`\uff1b\\r\\n2. \u6307\u5b9a\u52a0\u8f7d\u6570\u636e\u8def\u5f84\u521b\u5efa\u8868\uff1b\\r\\n3. \u4f7f\u7528`IMPORT`\u5c06\u6570\u636e\u5bfc\u5165\u5230\u8868\uff0c\u53ea\u80fd\u4f7f\u7528`EXPORT`\u8f93\u51fa\u7684\u5185\u5bb9\u5bfc\u5165\uff01\\r\\n\\r\\n:::danger LOAD\u3001INSERT\u548cIMPORT\u5bfc\u5165\u6570\u636e\u7684\u533a\u522b\\r\\n\\r\\n- LOAD\u4ec5\u4ec5\u662f\u6dfb\u52a0\u3001\u79fb\u52a8HDFS\u6587\u4ef6\uff0c\u4e0d\u521b\u5efa\u8868\u548c\u5206\u533a\\r\\n- INSERT\u9700\u8981\u6267\u884cMR\u7a0b\u5e8f\uff0c\u5728\u5411\u5206\u6876\u8868\u63d2\u5165\u6570\u636e\u65f6\u5fc5\u987b\u4f7f\u7528\uff0c\u4e0d\u521b\u5efa\u8868\u4f46\u4f1a\u521b\u5efa\u5206\u533a\\r\\n- IMPORT\u53ea\u80fd\u5bfc\u5165EXPORT\u8f93\u51fa\u7684\u5185\u5bb9\uff0c\u81ea\u52a8\u521b\u5efa\u8868/\u5206\u533a\u3002\u5982\u679c\u8868\u5b58\u5728\uff0c\u975e\u5206\u533a\u8868\u8981\u6c42\u4e3a\u7a7a\uff0c\u5206\u533a\u8868\u8981\u6c42\u63d2\u5165\u5206\u533a\u4e0d\u5b58\u5728\u3002\\r\\n:::\\r\\n\\r\\n### \u6570\u636e\u5bfc\u51fa\\r\\n\\r\\n#### INSERT\u5bfc\u51fa\\r\\n\\r\\n```sql\\r\\n# 1. \u6807\u51c6\u8bed\u6cd5\\r\\nINSERT OVERWRITE [LOCAL] DIRECTORY directory1\\r\\n  [ROW FORMAT row_format] [STORED AS file_format] (Note: Only available starting with Hive 0.11.0)\\r\\n  SELECT ... FROM ...\\r\\n\\r\\n# 2. \u591a\u6761\u63d2\u5165\\r\\nFROM from_statement\\r\\nINSERT OVERWRITE [LOCAL] DIRECTORY directory1 select_statement1\\r\\n[INSERT OVERWRITE [LOCAL] DIRECTORY directory2 select_statement2] ...\\r\\n\\r\\nrow_format\\r\\n  : DELIMITED [FIELDS TERMINATED BY char [ESCAPED BY char]] [COLLECTION ITEMS TERMINATED BY char]\\r\\n        [MAP KEYS TERMINATED BY char] [LINES TERMINATED BY char]\\r\\n        [NULL DEFINED AS char] (Note: Only available starting with Hive 0.13)\\r\\n```\\r\\n\\r\\n#### Hadoop\u547d\u4ee4\u5bfc\u51fa\\r\\n\\r\\n\u4f7f\u7528`hadoop fs -get`\u547d\u4ee4\u4e0b\u8f7d\u8868\u6570\u636e\u6587\u4ef6\u5230\u672c\u5730\u3002\\r\\n\\r\\n#### Hive Shell\u547d\u4ee4\u5bfc\u51fa\\r\\n\\r\\n\u4f7f\u7528\u683c\u5f0f\uff1a`hive -e[-f] \u6267\u884csql\u6216\u8005\u811a\u672c\u540d > \u8f93\u51fa\u6587\u4ef6`\u3002\\r\\n\\r\\n#### EXPORT\\r\\n\\r\\n`EXPORT`\u547d\u4ee4\u7528\u4e8e\u5c06\u8868\u6570\u636e**\u8fde\u540c\u5143\u6570\u636e**\u4e00\u5757\u5bfc\u51fa\u5230\u7279\u5b9a\u8f93\u51fa\u4f4d\u7f6e\uff0c\u548c`IMPORT`\u642d\u914d\u4f7f\u7528\u5728\u4e24\u4e2aHadoop\u96c6\u7fa4\u4e4b\u95f4\u8fc1\u79fbHive\u8868(\u5143\u6570\u636e\u5e93\u53ef\u4ee5\u4e0d\u540c)\u3002\\r\\n\\r\\n```sql\\r\\nEXPORT TABLE tablename [PARTITION (part_column=\\"value\\"[, ...])]\\r\\n  TO \'export_target_path\' [ FOR replication(\'eventid\') ]\\r\\n```\\r\\n\\r\\n### \u6570\u636e\u6e05\u9664\\r\\n\\r\\n1. \u4f7f\u7528`DELETE`\u5220\u9664\u8868\u6570\u636e\uff1a`DELETE FROM tablename [WHERE expression]`\uff1b\\r\\n2. \u4f7f\u7528`TRUNCATE`\u5220\u9664\u8868\u6216\u5206\u533a\u6570\u636e\uff0c**\u53ea\u9002\u7528\u4e8e\u7ba1\u7406\u8868**\uff0c\u8bed\u6cd5\u5982\u4e0b\uff1a\\r\\n\\r\\n```sql\\r\\n# \u4eceHive 4.0\u5f00\u59cbTABLE\u5173\u952e\u5b57\u53ef\u7701\u7565\uff0c\u4e0d\u6307\u5b9a\u5206\u533a\u5219\u5220\u9664\u6240\u6709\u5206\u533a\\r\\nTRUNCATE [TABLE] table_name [PARTITION partition_spec];\\r\\n \\r\\npartition_spec:\\r\\n  : (partition_column = partition_col_value, partition_column = partition_col_value, ...)\\r\\n```\\r\\n\\r\\n:::danger DELETE\u3001TRUNCATE\u548cDROP\u7684\u533a\u522b\\r\\n\\r\\n1. \u7c7b\u578b\uff1aDELETE\u5c5e\u4e8eDML\uff0c\u800cTRUNCATE\u548cDROP\u5c5e\u4e8eDDL\uff1b\\r\\n2. \u662f\u5426\u4fdd\u7559\u5143\u6570\u636e\uff1aDELETE\u548cTRUNCATE\u4ec5\u5220\u9664\u8868\u6570\u636e\uff0c\u8868\u7ed3\u6784\u4f9d\u7136\u5b58\u5728\uff0c\u4f46DROP\u5220\u9664\u8868\u6570\u636e\u540c\u65f6\u5220\u9664\u8868\u7ed3\u6784\uff1b\\r\\n3. \u5bf9\u76ee\u6807\u8868\u8981\u6c42\uff1aDELETE\u4ec5\u7528\u4e8e\u4e8b\u52a1\u8868\uff0cTRUNCATE\u4ec5\u7528\u4e8e\u7ba1\u7406\u8868\u3002\\r\\n:::\\r\\n\\r\\n## \u603b\u7ed3\\r\\n\\r\\n1. LOCAL\u52a0\u8f7d\u6570\u636e\u590d\u5236\u6587\u4ef6\uff0c\u4e0d\u52a0LOCAL\u5219\u79fb\u52a8\u6587\u4ef6\uff1b\\r\\n2. \u63d2\u5165\u6570\u636eLOAD\u3001INSERT\u548cIMPORT\u7684\u533a\u522b\uff1b\\r\\n3. \u6e05\u9664\u6570\u636eDELETE\u3001TRUNCATE\u548cDROP\u7684\u533a\u522b\uff1b\\r\\n4. DELETE\u3001UPDATE\u548cMERGE\u4ec5\u9002\u7528\u4e8e\u4e8b\u52a1\u8868\u3002"},{"id":"/2022/02/20/Learning-Hive3.x-02","metadata":{"permalink":"/blog/2022/02/20/Learning-Hive3.x-02","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2022/02/20-Learning-Hive3.x-02.md","source":"@site/blog/2022/02/20-Learning-Hive3.x-02.md","title":"Hive 3.x\u5b66\u4e60\u7b14\u8bb0(2)","description":"Hive 3.1.2\u5b66\u4e60\u7b14\u8bb0(2)\uff1ahive\u547d\u4ee4\u4f7f\u7528\u548cHive\u6570\u636e\u7c7b\u578b","date":"2022-02-20T00:00:00.000Z","formattedDate":"February 20, 2022","tags":[{"label":"Hive","permalink":"/blog/tags/hive"},{"label":"BigData","permalink":"/blog/tags/big-data"}],"readingTime":5.4,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"Hive 3.x\u5b66\u4e60\u7b14\u8bb0(2)","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["Hive","BigData"],"description":"Hive 3.1.2\u5b66\u4e60\u7b14\u8bb0(2)\uff1ahive\u547d\u4ee4\u4f7f\u7528\u548cHive\u6570\u636e\u7c7b\u578b","hide_table_of_contents":false},"prevItem":{"title":"Hive 3.x\u5b66\u4e60\u7b14\u8bb0(3)","permalink":"/blog/2022/02/21/Learning-Hive3.x-03"},"nextItem":{"title":"Hive 3.x\u5b66\u4e60\u7b14\u8bb0(1)","permalink":"/blog/2022/02/19/Learning-Hive3.x-01"}},"content":":pencil:Hive 3.1.2\u5b66\u4e60\u7b14\u8bb0\u7b2c2\u7bc7\uff1ahive\u547d\u4ee4\u4f7f\u7528\u548cHive\u6570\u636e\u7c7b\u578b\u3002\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## hive\u547d\u4ee4\u4f7f\u7528\\r\\n\\r\\n\u5728${HIVE_HOME}/bin\u4e0b\u63d0\u4f9b\u4e86hive\u811a\u672c\u547d\u4ee4\uff0c\u901a\u8fc7\u6267\u884c`hive -help`\u547d\u4ee4\u5f97\u5230\u5982\u4e0b\u53ef\u9009\u53c2\u6570\uff1a\\r\\n\\r\\n```bash\\r\\n[kayhaw@hadoop102 bin]$ hive -help\\r\\nwhich: no hbase in (/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/module/jdk1.8.0_212/bin:/opt/module/hadoop-3.1.3/bin:/opt/module/hadoop-3.1.3/sbin:/opt/module/apache-hive-3.1.2/bin:/home/kayhaw/.local/bin:/home/kayhaw/bin)\\r\\nHive Session ID = 61f38c61-9723-42c3-97c0-5ca19b080c46\\r\\nusage: hive\\r\\n -d,--define <key=value>          Variable substitution to apply to Hive\\r\\n                                  commands. e.g. -d A=B or --define A=B\\r\\n    --database <databasename>     Specify the database to use\\r\\n -e <quoted-query-string>         SQL from command line\\r\\n -f <filename>                    SQL from files\\r\\n -H,--help                        Print help information\\r\\n    --hiveconf <property=value>   Use value for given property\\r\\n    --hivevar <key=value>         Variable substitution to apply to Hive\\r\\n                                  commands. e.g. --hivevar A=B\\r\\n -i <filename>                    Initialization SQL file\\r\\n -S,--silent                      Silent mode in interactive shell\\r\\n -v,--verbose                     Verbose mode (echo executed SQL to the\\r\\n                                  console)\\r\\n```\\r\\n\\r\\n- `-e`\u548c`-f`\u53c2\u6570\u5206\u522b\u7528\u4e8e\u547d\u4ee4\u884c\u8f93\u5165\u548c\u6307\u5b9a\u6587\u4ef6\u6765\u6267\u884cHQL\uff1b\\r\\n- **`--hiveconf`\u5728\u542f\u52a8hive\u547d\u4ee4\u65f6\u6307\u5b9aHive\u73af\u5883\u53d8\u91cf**\uff0c\u4ec5\u5728\u672c\u6b21\u4f1a\u8bdd\u751f\u6548\uff1b\\r\\n- \u8f93\u5165`quit;`\u6216`exit;`\u9000\u51fa\uff1b\\r\\n- **\u8f93\u5165`dfs`\u547d\u4ee4\u64cd\u4f5cHDFS\u6587\u4ef6\u7cfb\u7edf**\uff1b\\r\\n- \u8f93\u5165`set`\u67e5\u770b\u6240\u6709\u914d\u7f6e\u4fe1\u606f\uff0c\u8f93\u5165`set <\u53c2\u6570\u540d>=<\u53c2\u6570\u503c>`\u4fee\u6539Hive\u53c2\u6570\u503c\uff0c\u4ec5\u5728\u8f93\u5165\u4e4b\u540e\u672c\u6b21\u4f1a\u8bdd\u751f\u6548\uff1b\\r\\n- \u6240\u6709\u6267\u884c\u547d\u4ee4\u8bb0\u5f55\u5728`${HOME}/.hivehistory`\u6587\u4ef6\u4e2d\u3002\\r\\n\\r\\n## \u5176\u4ed6\u914d\u7f6e\\r\\n\\r\\n1. \u4fee\u6539Hive\u65e5\u5fd7\u5b58\u653e\u4f4d\u7f6e\uff1a\u5728`${HIVE_HOME}/conf/hive-log4j2.properties.template`\u6587\u4ef6\u4e2d\u9ed8\u8ba4\u65e5\u5fd7\u4f4d\u7f6e\u4e3a`/tmp/kayhaw/hive.log`\uff0c\u5c06\u6539\u6587\u4ef6\u62f7\u8d1d\u4e3a`hive-log4j2.properties`\u5e76\u4fee\u6539`property.hive.log.dir`\u53c2\u6570\u503c\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\r\\n\\r\\n```properties\\r\\n# property.hive.log.dir = ${sys:java.io.tmpdir}/${sys:user.name}\\r\\nproperty.hive.log.dir = ${env:HIVE_HOME}/logs\\r\\n```\\r\\n\\r\\n:::tip LOG4J2\u914d\u7f6e\u6587\u4ef6\u4f7f\u7528\u73af\u5883\u53d8\u91cf\\r\\n\u4e00\u5f00\u59cb\u6539\u4e3a`${HIVE_HOME}/logs`\u53d1\u73b0\u4e0d\u751f\u6548\uff0c\u56e0\u4e3a\u8fd9\u662fproperties\u6587\u4ef6\u800c\u4e0d\u662fshell\u811a\u672c\uff0c\u67e5\u770b[Environment Lookup](https://logging.apache.org/log4j/2.x/manual/lookups.html#EnvironmentLookup)\u53ef\u77e5\u4f7f\u7528`env:`\u524d\u7f00\u8ba9LOG4J2\u6765\u67e5\u627e\u73af\u5883\u53d8\u91cf\u3002\\r\\n:::\\r\\n\\r\\n2. \u8bbe\u7f6e\u6253\u5370\u5e93\u540d\u548c\u5217\u540d\uff1a\u5728`hive-site.xml`\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a\\r\\n\\r\\n```xml\\r\\n\x3c!-- \u6253\u5370\u5217\u540d --\x3e\\r\\n<property>\\r\\n  <name>hive.cli.print.header</name>\\r\\n  <value>true</value>\\r\\n</property>\\r\\n\x3c!-- \u6253\u5370\u5e93\u540d --\x3e\\r\\n<property>\\r\\n  <name>hive.cli.print.current.db</name>\\r\\n  <value>true</value>\\r\\n</property>\\r\\n```\\r\\n\\r\\n**\u914d\u7f6e\u52a0\u8f7d\u987a\u5e8f\uff1ahive-default.xml->hive-site.xml->hive\u547d\u4ee4\u542f\u52a8`--hiveconf`->hive\u547d\u4ee4\u4e2d`set`\uff0c\u540e\u8005\u8986\u76d6\u524d\u8005\u540c\u540d\u914d\u7f6e\u53c2\u6570\u3002\u540e\u4e24\u6b65\u7684\u8bbe\u7f6e\u4ec5\u9650\u4e8e\u672c\u6b21\u4f1a\u8bdd\uff0c\u67d0\u4e9b\u7cfb\u7edf\u53c2\u6570(\u5982log4j2\u76f8\u5173)\u9700\u8981\u901a\u8fc7\u524d\u4e24\u6b65\u8bbe\u7f6e\uff0c\u56e0\u6b64\u5b83\u4eec\u5728\u4f1a\u8bdd\u5efa\u7acb\u4e4b\u524d\u5c31\u4f1a\u8bfb\u53d6\u914d\u7f6e\u3002**\\r\\n\\r\\n## \u6570\u636e\u7c7b\u578b\\r\\n\\r\\n\u8be6\u89c1\u5b98\u7f51\u4fe1\u606f[Data Types](https://cwiki.apache.org/confluence/display/Hive/LanguageManual+Types)\u3002\\r\\n\\r\\n### \u57fa\u672c\u7c7b\u578b\\r\\n\\r\\n| \u5206\u7c7b     | \u540d\u79f0                      | \u957f\u5ea6(\u5b57\u8282)/\u8303\u56f4 | \u5907\u6ce8            |\\r\\n| -------- | ------------------------- | --------- | ----------------- |\\r\\n| \u6574\u6570     | TINYINT                   | 1         | \u6709\u7b26\u53f7         |\\r\\n|          | SMALLINT                  | 2         | \u6709\u7b26\u53f7         |\\r\\n|          | INT [INTEGER]             | 4         | \u6709\u7b26\u53f7         |\\r\\n|          | BIGINT                    | 8         | \u6709\u7b26\u53f7         |\\r\\n| \u6d6e\u70b9\u6570    | FLOAT                     | 4         | \u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570 |\\r\\n|          | DOUBLE [DOUBLE PERCISION] | 8         | \u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570 |\\r\\n|          | DECIMAL [NUMERIC]         |           | NUMRIC\u81ea3.0.0\u5f15\u5165 |\\r\\n| \u5b57\u7b26\u4e32    | STRING                    |           |                   |\\r\\n|          | CHAR                      |           | since 0.13.0      |\\r\\n|          | VARCHAR                   |           | since 0.12.0      |\\r\\n| \u65f6\u95f4\u65e5\u671f  | TIMESTAMP                 |           | since 0.8.0       |\\r\\n|          | DATE                      |           | since 0.12.0      |\\r\\n|          | INTERVAL                  |           | since 1.2.0       |\\r\\n| \u5176\u4ed6     | BOOLEAN                   |           |                   |\\r\\n|          | BINARY                    |           | since 0.8.0       |\\r\\n\\r\\n### \u590d\u5408\u7c7b\u578b\\r\\n\\r\\nHive\u63d0\u4f9b\u7684\u590d\u5408\u7c7b\u578b\u5305\u542b\u6570\u7ec4\u3001map\u3001struct\u548cunion\u56db\u79cd\uff0c\u5b83\u4eec\u4e4b\u95f4\u53ef\u4ee5\u4e92\u76f8\u5d4c\u5957\u58f0\u660e\u3002\\r\\n\\r\\n| \u7c7b\u578b | \u63cf\u8ff0                 | \u58f0\u660e\u8bed\u6cd5                                            |\\r\\n| ------ | ---------------------- | ------------------------------------------------------- |\\r\\n| array  | \u901a\u8fc7`\u5217\u540d[\u4e0b\u6807]`\u83b7\u53d6\u503c | ARRAY<data_type>                                        |\\r\\n| map    | \u901a\u8fc7`\u5217\u540d[key]`\u83b7\u53d6\u503c | MAP<primitive_type, data_type>                          |\\r\\n| struct | \u901a\u8fc7`\u5217\u540d.key`\u83b7\u53d6\u503c | STRUCT<col_name : data_type [COMMENT col_comment], ...> |\\r\\n| union  | :question:             | UNIONTYPE<data_type, data_type, ...>                    |\\r\\n\\r\\n```sql title=\\"\u590d\u5408\u7c7b\u578b\u4f7f\u7528\u793a\u4f8b\\"\\r\\ncreate table test(\\r\\n  name string,\\r\\n  friends array<string>,\\r\\n  children map<string, int>,\\r\\n  address struct<street:string, city:string>\\r\\n)\\r\\nrow format delimited fields terminated by \',\'   # \u6307\u5b9a\u5b57\u6bb5\u5206\u9694\u7b26\\r\\ncollection items terminated by \'_\'              # \u6307\u5b9amap\u3001struct\u548carray\u7684\u5143\u7d20\u5206\u9694\u7b26\\r\\nmap keys terminated by \':\'                      # \u6307\u5b9amap\u4e2dkey\u548cvalue\u7684\u5206\u9694\u7b26\\r\\nlines terminated by \'\\\\n\';                       # \u6307\u5b9a\u884c\u5206\u9694\u7b26\\r\\n```\\r\\n\\r\\n:::info \u9ed8\u8ba4\u5206\u9694\u7b26\\r\\nHive\u9ed8\u8ba4\u884c\u5206\u9694\u7b26\u4e3a`\'\\\\n\'`\uff0c\u9ed8\u8ba4\u5b57\u6bb5\u5206\u9694\u7b26\u4e3a`\'\\\\001\'`(\u663e\u793a\u4e3a`^A`)\uff0c\u9ed8\u8ba4\u5143\u7d20\u5206\u9694\u7b26\u4e3a`\'\\\\002\'`(\u663e\u793a\u4e3a`^B`)\uff0c\u9ed8\u8ba4kv\u5206\u9694\u7b26\u4e3a`\'\\\\003\'`(\u663e\u793a\u4e3a`^C`)\u3002\\r\\n:::\\r\\n\\r\\n## \u7c7b\u578b\u8f6c\u6362\\r\\n\\r\\nHive\u7684\u7c7b\u578b\u8f6c\u6362\u5206\u4e3a\u9690\u5f0f\u8f6c\u6362\u548c\u663e\u5f0f\u8f6c\u6362\uff0c\u5176\u4e2d\u9690\u5f0f\u8f6c\u6362\u7531Hive\u81ea\u52a8\u5b8c\u6210\uff0c\u89c4\u5219\u5982\u4e0b\uff1a\\r\\n\\r\\n1. \u6240\u6709\u6574\u6570\u7c7b\u578b\u53ef\u4ee5\u9690\u5f0f\u8f6c\u4e3a\u8303\u56f4\u66f4\u5927\u7684\u7c7b\u578b\uff1b\\r\\n2. \u6240\u6709\u6574\u6570\u7c7b\u578b\u3001FLOAT \u548c**STRING**\u7c7b\u578b\u90fd\u53ef\u4ee5\u9690\u5f0f\u5730\u8f6c\u6362\u6210DOUBLE;\\r\\n3. TINYINT\u3001SMALLINT\u548cINT\u53ef\u4ee5\u8f6c\u6362\u4e3aFLOAT\uff1b\\r\\n4. BOOLEAN \u7c7b\u578b\u4e0d\u53ef\u4ee5\u8f6c\u6362\u4e3a\u4efb\u4f55\u5176\u5b83\u7684\u7c7b\u578b\u3002\\r\\n\\r\\n\u663e\u5f0f\u7c7b\u578b\u8f6c\u6362\u901a\u8fc7`CAST`\u5b9e\u73b0\uff0c\u5982`CAST(\'1\' AS INT)`\u628a\u5b57\u7b26\u4e32\\"1\\"\u8f6c\u4e3a\u6574\u65701\uff0c**\u5982\u679c\u8f6c\u6362\u5931\u8d25\u5219\u8fd4\u56deNULL**\u3002\\r\\n\\r\\n## \u603b\u7ed3\\r\\n\\r\\n1. Hive\u914d\u7f6e\u7684\u4f18\u5148\u7ea7\u548c\u52a0\u8f7d\u987a\u5e8f\uff1b\\r\\n2. \u8bbe\u7f6eHive\u65e5\u5fd7\u8def\u5f84\u3001\u547d\u4ee4\u884c\u663e\u793a\u5e93\u540d\u548c\u5217\u540d\u7684\u65b9\u6cd5\uff1b\\r\\n3. [Hive\u8fd8\u672a\u5b8c\u5168\u652f\u6301UNIONTYPE](https://cwiki.apache.org/confluence/display/Hive/LanguageManual+Types#LanguageManualTypes-UnionTypesunionUnionTypes)\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528\u3002"},{"id":"/2022/02/19/Learning-Hive3.x-01","metadata":{"permalink":"/blog/2022/02/19/Learning-Hive3.x-01","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2022/02/19-Learning-Hive3.x-01.md","source":"@site/blog/2022/02/19-Learning-Hive3.x-01.md","title":"Hive 3.x\u5b66\u4e60\u7b14\u8bb0(1)","description":"Hive 3.1.2\u5b66\u4e60\u7b14\u8bb0(1)\uff1aHive\u7b80\u4ecb\u4e0e\u5b89\u88c5","date":"2022-02-19T00:00:00.000Z","formattedDate":"February 19, 2022","tags":[{"label":"Hive","permalink":"/blog/tags/hive"},{"label":"BigData","permalink":"/blog/tags/big-data"}],"readingTime":9.915,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"Hive 3.x\u5b66\u4e60\u7b14\u8bb0(1)","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["Hive","BigData"],"description":"Hive 3.1.2\u5b66\u4e60\u7b14\u8bb0(1)\uff1aHive\u7b80\u4ecb\u4e0e\u5b89\u88c5","hide_table_of_contents":false},"prevItem":{"title":"Hive 3.x\u5b66\u4e60\u7b14\u8bb0(2)","permalink":"/blog/2022/02/20/Learning-Hive3.x-02"},"nextItem":{"title":"\u8ba1\u7b97\u673a\u7f51\u7edc\u77e5\u8bc6\u603b\u7ed3(1)","permalink":"/blog/2022/02/15/NetworkingSummary-01"}},"content":":pencil:Hive 3.1.2\u5b66\u4e60\u7b14\u8bb0\u7b2c1\u7bc7\uff1aHive\u7b80\u4ecb\u4e0e\u5b89\u88c5\u3002\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## Hive\u7b80\u4ecb\\r\\n\\r\\nHive\u662f\u57fa\u4e8eHadoop\u7684**\u6570\u636e\u4ed3\u5e93\u5de5\u5177(\u975e\u4f20\u7edf\u610f\u4e49\u4e0a\u6570\u636e\u5e93)**\uff0c\u7531Facebook\u5f00\u6e90\u7528\u4e8e\u89e3\u51b3\u6d77\u91cf\u7ed3\u6784\u5316\u65e5\u5fd7\uff0cHive\u5c06\u7ed3\u6784\u5316\u6570\u636e\u6587\u4ef6\u6620\u5c04\u4e3a\u4e00\u5f20\u8868\uff0c\u5e76\u63d0\u4f9b\u7c7bSQL(HQL)\u67e5\u8be2\u529f\u80fd\uff0c\u5176\u672c\u8d28\u662f\u5c06HQL\u7ffb\u8bd1\u4e3aMapReduce\u7a0b\u5e8f\u3002\\r\\n\\r\\n:smile:\u4f18\u70b9\uff1a\\r\\n\\r\\n1. HQL\u7c7b\u4f3cSQL\uff0c\u4f7f\u7528\u8d77\u6765\u5bb9\u6613\u4e0a\u624b\uff1b\\r\\n2. \u907f\u514d\u5199MR\u7a0b\u5e8f\uff0c\u964d\u4f4e\u5b66\u4e60\u6210\u672c\uff1b\\r\\n3. \u6267\u884c\u5ef6\u8fdf\u9ad8\uff0c\u56e0\u6b64\u9002\u7528\u4e8e\u5bf9\u5b9e\u65f6\u6027\u8981\u6c42\u4e0d\u9ad8\u4e14\u6570\u636e\u91cf\u5927\u7684\u573a\u666f\uff1b\\r\\n4. \u652f\u6301\u81ea\u5b9a\u4e49\u51fd\u6570\u3002\\r\\n\\r\\n:angry:\u7f3a\u70b9\uff1a\\r\\n\\r\\n1. HQL\u65e0\u6cd5\u8868\u8fbe\u8fed\u4ee3\u5f0f\u7b97\u6cd5\uff0c\u53d7\u9650\u4e8eMapReduce\u6d41\u7a0b\uff1b\\r\\n2. \u6267\u884c\u6548\u7387\u4f4e\uff0c\u751f\u6210MapReduce\u4f5c\u4e1a\u4e0d\u591f\u667a\u80fd\u5316\uff1b\\r\\n3. \u8c03\u4f18\u56f0\u96be\u3002\\r\\n\\r\\n### Hive\u67b6\u6784\\r\\n\\r\\n\u4e0eMetastore\u4ea4\u4e92\u83b7\u53d6\u6570\u636e\u6587\u4ef6\u5728HDFS\u4e0a\u7684\u4f4d\u7f6e\uff0c\u7f16\u5199\u7684HQL\u4f9d\u6b21\u7ecf\u8fc7\u89e3\u6790\u5668\u3001\u7f16\u8bd1\u5668\u3001\u4f18\u5316\u5668\u548c\u6267\u884c\u5668\u7ffb\u8bd1\u4e3aMapReduce\u7a0b\u5e8f\u6267\u884c\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a\\r\\n\\r\\n- **\u89e3\u6790\u5668**\uff1a\u5c06HQL\u8f6c\u4e3a\u4e3a\u62bd\u8c61\u8bed\u6cd5\u6811AST\uff0c\u5e76\u8fdb\u884c\u8bed\u6cd5\u5206\u6790\uff1b\\r\\n- **\u7f16\u8bd1\u5668**\uff1a\u7531AST\u751f\u6210\u903b\u8f91\u6267\u884c\u8ba1\u5212\uff1b\\r\\n- **\u4f18\u5316\u5668**\uff1a\u4f18\u5316\u903b\u8f91\u6267\u884c\u8ba1\u5212\uff1b\\r\\n- **\u6267\u884c\u5668**\uff1a\u5c06\u903b\u8f91\u6267\u884c\u8ba1\u5212\u8f6c\u4e3a\u53ef\u4ee5\u8fd0\u884c\u7684\u7269\u7406\u8ba1\u5212(MapReduce/Spark\u7a0b\u5e8f)\u3002\\r\\n\\r\\n### Hive\u7279\u6027\\r\\n\\r\\n1. **\u6570\u636e\u66f4\u65b0**\uff1aHive\u4e3a\u6570\u636e\u4ed3\u5e93\u800c\u8bbe\u8ba1\uff0c\u9002\u7528\u8bfb\u591a\u5199\u5c11\u7684\u573a\u666f\uff0c\u56e0\u6b64Hive**\u4e0d\u5efa\u8bae**\u6539\u5199\u6570\u636e\uff0c\u800c\u4f20\u7edf\u6570\u636e\u5e93\u7ecf\u5e38\u4fee\u6539\uff1b\\r\\n2. **\u6267\u884c\u5ef6\u8fdf**\uff1aHive\u67e5\u8be2\u6570\u636e\u65f6\u6ca1\u6709\u7d22\u5f15\u9700\u8981\u626b\u63cf\u6574\u4e2a\u8868\uff0c\u5e76\u4e14MapReduce\u6846\u67b6\u4e5f\u6709\u8f83\u9ad8\u5ef6\u8fdf\uff1b\u4f46\u5728\u5927\u89c4\u6a21\u6570\u636e\u4e0b\u624d\u80fd\u4f53\u73b0Hive\u4f18\u52bf\uff1b\\r\\n3. **\u6570\u636e\u89c4\u6a21**\uff1aHive\u57fa\u4e8eHadoop\u96c6\u7fa4\u53ef\u4ee5\u5904\u7406\u5927\u89c4\u6a21\u6570\u636e\\r\\n\\r\\n## Hive\u5b89\u88c5\\r\\n\\r\\n### \u5b89\u88c5\u5305\\r\\n\\r\\n1. [apache-hive-3.1.2-bin.tar.gz](http://archive.apache.org/dist/hive/hive-3.1.2/apache-hive-3.1.2-bin.tar.gz)\\r\\n2. [mysql-5.7.28-1.el7.x86_64.rpm-bundle.tar](https://downloads.mysql.com/archives/community/)\\r\\n\\r\\n<img style={{width:\\"80%\\", height:\\"80%\\"}} src=\\"/img/blog/HiveNotes/mysql-5.7.28-bundle.png\\" title=\\"mysql-5.7.28-1.el7.x86_64.rpm-bundle.tar\\"/>\\r\\n\\r\\n3. [mysql-connector-java-5.1.37.tar.gz](https://downloads.mysql.com/archives/c-j/)\\r\\n\\r\\n<img style={{width:\\"80%\\", height:\\"80%\\"}} src=\\"/img/blog/HiveNotes/mysql-connector-java-5.1.37.png\\" title=\\"mysql-connector-java-5.1.37\\"/>\\r\\n\\r\\n### \u5b89\u88c5\u6b65\u9aa4\\r\\n\\r\\n1. \u5c06apache-hive-3.1.2-bin.tar.gz\u89e3\u538b\u5230/opt/module\u76ee\u5f55\u4e0b\uff0c\u5e76\u91cd\u547d\u540d\u4e3aapache-hive-3.1.2\uff1a\\r\\n\\r\\n```bash\\r\\ntar -zxvf /opt/software/apache-hive-3.1.2-bin.tar.gz -C /opt/module/\\r\\nmv /opt/module/apache-hive-3.1.2-bin/ /opt/module/apache-hive-3.1.2\\r\\n```\\r\\n\\r\\n2. \u6dfb\u52a0\u5982\u4e0b\u73af\u5883\u53d8\u91cf\u5e76\u4f7f\u4e4b\u751f\u6548(**`source /etc/profile.d/my_env.sh`**)\uff1a\\r\\n\\r\\n```bash title=\\"/etc/profile.d/my_env.sh\\"\\r\\n# HIVE_HOME\\r\\nexport HIVE_HOME=/opt/module/apache-hive-3.1.2\\r\\nexport PATH=$PATH:$HIVE_HOME/bin\\r\\n```\\r\\n\\r\\n3. \u89e3\u51b3\u65e5\u5fd7jar\u5305\u51b2\u7a81\uff0c\u5c06\u5176\u91cd\u547d\u540d\u4f7f\u4e4b\u65e0\u6cd5\u52a0\u8f7d\uff1a\\r\\n\\r\\n```bash\\r\\nmv $HIVE_HOME/lib/log4j-slf4j-impl-2.10.0.jar $HIVE_HOME/lib/log4j-slf4j-impl-2.10.0.bak\\r\\n```\\r\\n\\r\\n### \u521d\u8bd5Hive\\r\\n\\r\\n1. **\u521d\u59cb\u5316\u5143\u6570\u636e\u5e93**\uff1a`schematool -dbType derby -initSchema`\uff1b\\r\\n2. \u542f\u52a8hive\uff0c\u76f4\u63a5\u8f93\u5165`hive`\u5373\u53ef\uff0c\u4ea4\u4e92\u754c\u9762\u7c7b\u4f3cMySQL\u5ba2\u6237\u7aef\u53ef\u4ee5\u6267\u884cHQL\uff1b\\r\\n3. \u65b0\u5efassh\u4f1a\u8bdd\u4e5f\u6267\u884c`hive`\u547d\u4ee4\uff0c\u53d1\u73b0\u5982\u4e0b\u62a5\u9519\uff1a\\r\\n\\r\\n```bash\\r\\nCaused by: ERROR XSDB6: Another instance of Derby may have already booted \\r\\nthe database /opt/module/hive/metastore_db.\\r\\n at \\r\\norg.apache.derby.iapi.error.StandardException.newException(Unknown \\r\\nSource)\\r\\n at \\r\\norg.apache.derby.iapi.error.StandardException.newException(Unknown Source)\\r\\n at \\r\\norg.apache.derby.impl.store.raw.data.BaseDataFileFactory.privGetJBMSLockO\\r\\nnDB(Unknown Source)\\r\\n at \\r\\norg.apache.derby.impl.store.raw.data.BaseDataFileFactory.run(Unknown \\r\\nSource)\\r\\n...\\r\\n```\\r\\n\\r\\n\u7531\u4e8eHive\u9ed8\u8ba4\u4f7f\u7528derby\u4f5c\u4e3a\u5143\u6570\u636e\u5e93\uff0c\u4f46\u6b64\u65f6\u4e0d\u652f\u6301\u5176\u4ed6\u4f1a\u8bdd\u7684\u5171\u4eab\uff0c\u56e0\u6b64\u63a5\u4e0b\u6765\u5c06\u5143\u6570\u636e\u5e93\u7531derby\u6539\u4e3aMySQL\u3002\\r\\n\\r\\n:::caution \u521d\u6b21\u542f\u52a8\u62a5\u9519\\r\\n\u521d\u6b21\u542f\u52a8\u65f6\u62a5\u5982\u4e0b\u9519\u8bef\uff0c\u539f\u56e0\u662fHadoop\u548cHive\u4e2dguava\u7248\u672c\u4e0d\u4e00\u81f4\uff0c\u5c06`${HADOOP_HOME}/share/hadoop/common/lib/`\u4e0b\u7684\u9ad8\u7248\u672cjar\u590d\u5236\u5230`${HIVE_HOME}/lib/`\u4e0b\u5e76\u5c06\u4f4e\u7248\u672cjar\u5305\u5220\u9664\u3002\\r\\n\\r\\n```bash\\r\\nException in thread \\"main\\" java.lang.NoSuchMethodError: com.google.common.base.Preconditions.checkArgument(ZLjava/lang/String;Ljava/lang/Object;)V\\r\\n\\tat org.apache.hadoop.conf.Configuration.set(Configuration.java:1357)\\r\\n\\tat org.apache.hadoop.conf.Configuration.set(Configuration.java:1338)\\r\\n\\tat org.apache.hadoop.mapred.JobConf.setJar(JobConf.java:518)\\r\\n\\tat org.apache.hadoop.mapred.JobConf.setJarByClass(JobConf.java:536)\\r\\n\\tat org.apache.hadoop.mapred.JobConf.<init>(JobConf.java:430)\\r\\n\\tat org.apache.hadoop.hive.conf.HiveConf.initialize(HiveConf.java:5141)\\r\\n\\tat org.apache.hadoop.hive.conf.HiveConf.<init>(HiveConf.java:5104)\\r\\n\\tat org.apache.hive.beeline.HiveSchemaTool.<init>(HiveSchemaTool.java:96)\\r\\n\\tat org.apache.hive.beeline.HiveSchemaTool.main(HiveSchemaTool.java:1473)\\r\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\r\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\r\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\r\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\r\\n\\tat org.apache.hadoop.util.RunJar.run(RunJar.java:318)\\r\\n\\tat org.apache.hadoop.util.RunJar.main(RunJar.java:232)\\r\\n```\\r\\n:::\\r\\n\\r\\n### \u66f4\u6362\u5143\u6570\u636e\u5e93\\r\\n\\r\\n\u9996\u5148\u6309\u7167\u5982\u4e0b\u6b65\u9aa4\u5b89\u88c5MySQL\uff1a\\r\\n\\r\\n1. \u68c0\u67e5\u5e76\u5220\u9664CentOS\u81ea\u5e26\u7684Mariadb\u76f8\u5173\u4f9d\u8d56\uff1a\\r\\n\\r\\n```bash\\r\\nrpm -qa|grep mariadb\\r\\nsudo rpm -e --nodeps mariadb-libs\\r\\n```\\r\\n\\r\\n2. \u89e3\u538bmysql-5.7.28-1.el7.x86_64.rpm-bundle.tar\uff0c\u5f97\u5230\u591a\u4e2armp\u5305\u5e76\u5b89\u88c5\uff1a\\r\\n\\r\\n```bash\\r\\ntar -xf mysql-5.7.28-1.el7.x86_64.rpm-bundle.tar\\r\\n## \u6309\u5e8f\u6267\u884c\uff0c\u540e\u9762\u7684\u4f9d\u8d56\u4e8e\u524d\u9762\\r\\nsudo rpm -ivh mysql-community-common-5.7.28-1.el7.x86_64.rpm\\r\\nsudo rpm -ivh mysql-community-libs-5.7.28-1.el7.x86_64.rpm\\r\\nsudo rpm -ivh mysql-community-libs-compat-5.7.28-1.el7.x86_64.rpm\\r\\nsudo rpm -ivh mysql-community-client-5.7.28-1.el7.x86_64.rpm\\r\\nsudo rpm -ivh mysql-community-server-5.7.28-1.el7.x86_64.rpm\\r\\n```\\r\\n\\r\\n3. \u5220\u9664`/etc/my.cnf`\u6587\u4ef6\u4e2ddatadir\u53c2\u6570\u6307\u5b9a\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u5185\u5bb9\\r\\n4. \u521d\u59cb\u5316MySQL\u6570\u636e\u5e93\uff1a\\r\\n\\r\\n```bash\\r\\nsudo mysqld --initialize --user=mysql\\r\\n```\\r\\n\\r\\n5. \u5728MySQL\u65e5\u5fd7\u4e2d\u627e\u5230\u751f\u6210\u7684root\u5bc6\u7801(\u672c\u6b21\u4e3a`Mzn7/gl.i!-4`)\uff1a\\r\\n\\r\\n```bash\\r\\nsudo cat /var/log/mysqld.log\\r\\n2022-02-18T10:29:24.176884Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).\\r\\n2022-02-18T10:29:24.545101Z 0 [Warning] InnoDB: New log files created, LSN=45790\\r\\n2022-02-18T10:29:24.593907Z 0 [Warning] InnoDB: Creating foreign key constraint system tables.\\r\\n2022-02-18T10:29:24.655737Z 0 [Warning] No existing UUID has been found, so we assume that this is the first time that this server has been started. Generating a new UUID: a49026e8-90a5-11ec-af0f-000c293a2d67.\\r\\n2022-02-18T10:29:24.658007Z 0 [Warning] Gtid table is not ready to be used. Table \'mysql.gtid_executed\' cannot be opened.\\r\\n2022-02-18T10:29:25.387668Z 0 [Warning] CA certificate ca.pem is self signed.\\r\\n2022-02-18T10:29:26.020911Z 1 [Note] A temporary password is generated for root@localhost: Mzn7/gl.i!-4\\r\\n```\\r\\n\\r\\n6. \u542f\u52a8MySQL\u670d\u52a1\uff1a\\r\\n\\r\\n```bash\\r\\nsudo systemctl start mysqld\\r\\n```\\r\\n\\r\\n7. \u4fee\u6539root\u5bc6\u7801\u4e3a`root123`\u5e76\u8bbe\u7f6eroot\u8d26\u53f7\u4ee5\u4efb\u610fip\u767b\u5f55\uff1a\\r\\n\\r\\n```bash\\r\\n[kayhaw@hadoop102 module]$ mysql -u root -p\\r\\nEnter password: [\u8f93\u5165Mzn7/gl.i!-4]\\r\\n...\\r\\nmysql> set password = password(\\"root123\\");\\r\\nmysql> update mysql.user set host=\'%\' where user=\'root\';\\r\\nmysql> flush privileges;\\r\\n```\\r\\n\\r\\n\u73b0\u5728MySQL\u5df2\u7ecf\u914d\u7f6e\u597d\u4e86\uff0c\u63a5\u4e0b\u6765\u8fdb\u884cHive\u76f8\u5173\u914d\u7f6e\uff1a\\r\\n\\r\\n1. \u5c06MySQL JDBC\u9a71\u52a8\u62f7\u8d1d\u5230Hive\u7684lib\u76ee\u5f55\u4e0b\uff1a\\r\\n\\r\\n```bash\\r\\ntar -zxvf mysql-connector-java-5.1.37.tar.gz\\r\\ncp mysql-connector-java-5.1.37/mysql-connector-java-5.1.37-bin.jar $HIVE_HOME/lib\\r\\n```\\r\\n\\r\\n2. \u5728`$HIVE_HOME/conf`\u76ee\u5f55\u4e0b\u65b0\u5efa`hive-site.xml`\u6587\u4ef6\u5e76\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a\\r\\n\\r\\n```xml title=\\"$HIVE_HOME/conf/hive-site.xml\\"\\r\\n<?xml version=\\"1.0\\"?>\\r\\n<?xml-stylesheet type=\\"text/xsl\\" href=\\"configuration.xsl\\"?>\\r\\n<configuration>\\r\\n \x3c!-- jdbc \u8fde\u63a5\u7684 URL --\x3e\\r\\n <property>\\r\\n <name>javax.jdo.option.ConnectionURL</name>\\r\\n <value>jdbc:mysql://hadoop102:3306/metastore?useSSL=false</value>\\r\\n</property>\\r\\n \x3c!-- jdbc \u8fde\u63a5\u7684 Driver--\x3e\\r\\n <property>\\r\\n <name>javax.jdo.option.ConnectionDriverName</name>\\r\\n <value>com.mysql.jdbc.Driver</value>\\r\\n</property>\\r\\n\x3c!-- jdbc \u8fde\u63a5\u7684 username--\x3e\\r\\n <property>\\r\\n <name>javax.jdo.option.ConnectionUserName</name>\\r\\n <value>root</value>\\r\\n </property>\\r\\n \x3c!-- jdbc \u8fde\u63a5\u7684 password --\x3e\\r\\n <property>\\r\\n <name>javax.jdo.option.ConnectionPassword</name>\\r\\n <value>root123</value>\\r\\n</property>\\r\\n \x3c!-- Hive \u5143\u6570\u636e\u5b58\u50a8\u7248\u672c\u7684\u9a8c\u8bc1 --\x3e\\r\\n <property>\\r\\n <name>hive.metastore.schema.verification</name>\\r\\n <value>false</value>\\r\\n</property>\\r\\n \x3c!--\u5143\u6570\u636e\u5b58\u50a8\u6388\u6743--\x3e\\r\\n <property>\\r\\n <name>hive.metastore.event.db.notification.api.auth</name>\\r\\n <value>false</value>\\r\\n </property>\\r\\n \x3c!-- Hive \u9ed8\u8ba4\u5728 HDFS \u7684\u5de5\u4f5c\u76ee\u5f55 --\x3e\\r\\n <property>\\r\\n <name>hive.metastore.warehouse.dir</name>\\r\\n <value>/user/hive/warehouse</value>\\r\\n </property>\\r\\n</configuration>\\r\\n```\\r\\n\\r\\n3. \u767b\u5f55MySQL\u5e76\u521b\u5efaHive\u5143\u6570\u636e\u5e93`metastore`\uff0c**\u6ce8\u610f\u540d\u79f0\u548c\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4**\u3002\\r\\n4. \u521d\u59cb\u5316Hive\u5143\u6570\u636e\u5e93\uff1a\\r\\n\\r\\n```bash\\r\\nschematool -initSchema -dbType mysql -verbose\\r\\n```\\r\\n\\r\\n### \u5f00\u542fmetastore\u670d\u52a1\\r\\n\\r\\n\u5230\u76ee\u524d\u4e3a\u6b62\u53ea\u662f\u5728\u672c\u5730\u4f7f\u7528hive\u547d\u4ee4\u5f00\u542f\u4f1a\u8bdd\u8fdb\u884c\u4ea4\u4e92\uff0c\u63a5\u4e0b\u6765\u5f00\u542f\u5143\u6570\u636e\u670d\u52a1\u8ba9\u8fdc\u7a0b\u5ba2\u6237\u7aef\u80fd\u591f\u8bbf\u95eeHive\u670d\u52a1\uff1b\\r\\n\\r\\n1. `hive-site.xml`\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a\\r\\n\\r\\n```xml title=\\"$HIVE_HOME/conf/hive-site.xml\\"\\r\\n\x3c!-- \u6307\u5b9a\u5b58\u50a8\u5143\u6570\u636e\u8981\u8fde\u63a5\u7684\u5730\u5740 --\x3e\\r\\n<property>\\r\\n  <name>hive.metastore.uris</name>\\r\\n  <value>thrift://hadoop102:9083</value>\\r\\n</property>\\r\\n```\\r\\n\\r\\n2. \u542f\u52a8metastore\u670d\u52a1\uff1a\\r\\n\\r\\n```bash\\r\\n[kayhaw@hadoop102 conf]$ hive --service metastore\\r\\n2022-02-19 23:32:28: Starting Hive Metastore Server\\r\\n```\\r\\n\\r\\n\u6ce8\u610f\u547d\u4ee4\u5f00\u542f\u524d\u53f0\u8fdb\u7a0b\u670d\u52a1\uff0c\u4e0d\u80fd\u9000\u51fa\uff0c\u6b64\u65f6\u901a\u8fc7`hive`\u547d\u4ee4\u8bbf\u95ee\u7684\u5143\u6570\u636e\u670d\u52a1\u7531hadoop102:9083\u63d0\u4f9b\u3002\\r\\n\\r\\n### \u5f00\u542fhiveserver2\u670d\u52a1\\r\\n\\r\\n\u4e3a\u4e86\u8ba9\u8fdc\u7a0b\u5ba2\u6237\u7aef\u80fd\u4ee5JDBC\u65b9\u5f0f\u8bbf\u95eeHive\uff0c\u8fd8\u9700\u8981\u5f00\u542fhiveserver2\u670d\u52a1\uff1a\\r\\n\\r\\n1. `hive-site.xml`\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a\\r\\n\\r\\n```xml title=\\"$HIVE_HOME/conf/hive-site.xml\\"\\r\\n\x3c!-- \u6307\u5b9a hiveserver2 \u8fde\u63a5\u7684 host --\x3e\\r\\n<property>\\r\\n  <name>hive.server2.thrift.bind.host</name>\\r\\n  <value>hadoop102</value>\\r\\n</property>\\r\\n\x3c!-- \u6307\u5b9a hiveserver2 \u8fde\u63a5\u7684\u7aef\u53e3\u53f7 --\x3e\\r\\n<property>\\r\\n  <name>hive.server2.thrift.port</name>\\r\\n  <value>10000</value>\\r\\n</property>\\r\\n```\\r\\n\\r\\n2. \u542f\u52a8hiveserver2\u670d\u52a1\uff1a\\r\\n\\r\\n```bash\\r\\n[kayhaw@hadoop102 conf]$ hive --service metastore\\r\\n2022-02-19 23:32:28: Starting Hive Metastore Server\\r\\n```\\r\\n\\r\\n3. \u4f7f\u7528beeline\u8fde\u63a5hive\uff1a\\r\\n\\r\\n```bash\\r\\nbeeline -u jdbc:hive2://hadoop102:10000 -n kayhaw\\r\\nConnecting to jdbc:hive2://hadoop102:10000\\r\\nConnected to: Apache Hive (version 3.1.2)\\r\\nDriver: Hive JDBC (version 3.1.2)\\r\\nTransaction isolation: TRANSACTION_REPEATABLE_READ\\r\\nBeeline version 3.1.2 by Apache Hive\\r\\n```\\r\\n\\r\\n\u8fd9\u91cc\u901a\u8fc7beeline\u8fde\u63a5Hive\u65f6\u62a5\u9519`Error: Could not open client transport with JDBC Uri: jdbc:hive2://hadoop102:10000: Failed to open new session: java.lang.RuntimeException`\uff0c\u9700\u8981\u4fee\u6539Hadoop\u4e2d\u7684core-site.xml\u6587\u4ef6\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\u540e**\u91cd\u542fHadoop\u670d\u52a1**\u3002\\r\\n\\r\\n```xml\\r\\n\x3c!-- kayhaw\u6362\u6210\u5b9e\u9645\u767b\u5f55\u7528\u6237\u540d --\x3e\\r\\n<property>\\r\\n\\t<name>hadoop.proxyuser.kayhaw.hosts</name>\\r\\n  <value>*</value>\\r\\n</property>\\r\\n<property>\\r\\n  <name>hadoop.proxyuser.kayhaw.groups</name>\\r\\n  <value>*</value>\\r\\n</property>\\r\\n```\\r\\n\\r\\n### \u542f\u52a8\u670d\u52a1\u811a\u672c\\r\\n\\r\\n\u4e3a\u4e86\u5feb\u901f\u542f\u52a8metastore\u548chiveserver2\u670d\u52a1\uff0c\u5c01\u88c5\u5982\u4e0b\u811a\u672c\uff1a\\r\\n\\r\\n```bash title=\\"$HOME/bin/hiveservice.sh\\"\\r\\n#!/bin/bash\\r\\nHIVE_LOG_DIR=$HIVE_HOME/logs\\r\\nif [ ! -d $HIVE_LOG_DIR ]\\r\\nthen\\r\\nmkdir -p $HIVE_LOG_DIR\\r\\nfi\\r\\n#\u68c0\u67e5\u8fdb\u7a0b\u662f\u5426\u8fd0\u884c\u6b63\u5e38\uff0c\u53c2\u6570 1 \u4e3a\u8fdb\u7a0b\u540d\uff0c\u53c2\u6570 2 \u4e3a\u8fdb\u7a0b\u7aef\u53e3\\r\\nfunction check_process()\\r\\n{\\r\\n pid=$(ps -ef 2>/dev/null | grep -v grep | grep -i $1 | awk \'{print $2}\')\\r\\n ppid=$(netstat -nltp 2>/dev/null | grep $2 | awk \'{print $7}\' | cut -d \'/\' -f 1)\\r\\n echo $pid\\r\\n [[ \\"$pid\\" =~ \\"$ppid\\" ]] && [ \\"$ppid\\" ] && return 0 || return 1\\r\\n}\\r\\nfunction hive_start()\\r\\n{\\r\\n metapid=$(check_process HiveMetastore 9083)\\r\\n cmd=\\"nohup hive --service metastore >$HIVE_LOG_DIR/metastore.log 2>&1 &\\"\\r\\n [ -z \\"$metapid\\" ] && eval $cmd || echo \\"Metastroe \u670d\u52a1\u5df2\u542f\u52a8\\"\\r\\n server2pid=$(check_process HiveServer2 10000)\\r\\n cmd=\\"nohup hiveserver2 >$HIVE_LOG_DIR/hiveServer2.log 2>&1 &\\"\\r\\n [ -z \\"$server2pid\\" ] && eval $cmd || echo \\"HiveServer2 \u670d\u52a1\u5df2\u542f\u52a8\\"\\r\\n}\\r\\nfunction hive_stop()\\r\\n{\\r\\n metapid=$(check_process HiveMetastore 9083)\\r\\n [ \\"$metapid\\" ] && kill $metapid || echo \\"Metastore \u670d\u52a1\u672a\u542f\u52a8\\"\\r\\n server2pid=$(check_process HiveServer2 10000)\\r\\n [ \\"$server2pid\\" ] && kill $server2pid || echo \\"HiveServer2 \u670d\u52a1\u672a\u542f\u52a8\\"\\r\\n}\\r\\ncase $1 in\\r\\n\\"start\\")\\r\\n hive_start\\r\\n ;;\\r\\n\\"stop\\")\\r\\n hive_stop\\r\\n ;;\\r\\n\\"restart\\")\\r\\n hive_stop\\r\\n sleep 2\\r\\n hive_start\\r\\n ;;\\r\\n\\"status\\")\\r\\n check_process HiveMetastore 9083 >/dev/null && echo \\"Metastore \u670d\u52a1\u8fd0\u884c\u6b63\u5e38\\" || echo \\"Metastore \u670d\u52a1\u8fd0\u884c\u5f02\u5e38\\"\\r\\n check_process HiveServer2 10000 >/dev/null && echo \\"HiveServer2 \u670d\u52a1\u8fd0\u884c\u6b63\u5e38\\" || echo \\"HiveServer2 \u670d\u52a1\u8fd0\u884c\u5f02\u5e38\\"\\r\\n ;;\\r\\n*)\\r\\n echo Invalid Args!\\r\\n echo \'Usage: \'$(basename $0)\' start|stop|restart|status\'\\r\\n ;;\\r\\nesac\\r\\n```\\r\\n\\r\\n## \u603b\u7ed3\\r\\n\\r\\n1. \u5b89\u88c5Hive\u4e4b\u524d\u9700\u8981\u642d\u5efaHadoop\u73af\u5883\uff0c\u542f\u52a8Hive\u670d\u52a1\u524d\u786e\u4fddHadoop\u670d\u52a1\u542f\u52a8\uff1b\\r\\n2. metastore\u670d\u52a1\u7528\u4e8e\u8fdc\u7a0b\u8bbf\u95eeHive\u670d\u52a1\uff0chiveserver2\u670d\u52a1\u7528\u4e8eJDBC\u8bbf\u95eeHive\u670d\u52a1\uff0c\u540e\u8005\u4f9d\u8d56\u4e8e\u524d\u8005\uff1b\\r\\n3. \u5b89\u88c5\u542f\u52a8Hive\u65f6\u7684\u4e00\u4e9b\u5c0f\u95ee\u9898\uff1a\u5305\u7248\u672c\u5dee\u5f02\u3001core-site.xml\u6587\u4ef6\u7b49\uff1b\\r\\n4. \u5982\u679c\u914d\u7f6e\u4e86`hive.metastore.uris`\u53c2\u6570\uff0c\u5c31\u4e00\u5b9a\u8981\u5f00\u542fmetaserver\u670d\u52a1\u3002"},{"id":"/2022/02/15/NetworkingSummary-01","metadata":{"permalink":"/blog/2022/02/15/NetworkingSummary-01","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2022/02/15-NetworkingSummary-01.md","source":"@site/blog/2022/02/15-NetworkingSummary-01.md","title":"\u8ba1\u7b97\u673a\u7f51\u7edc\u77e5\u8bc6\u603b\u7ed3(1)","description":"\u8ba1\u7b97\u673a\u7f51\u7edc\u77e5\u8bc6\u603b\u7ed3(1)\uff1aTCP/IP","date":"2022-02-15T00:00:00.000Z","formattedDate":"February 15, 2022","tags":[{"label":"Networking Basic","permalink":"/blog/tags/networking-basic"},{"label":"Summary","permalink":"/blog/tags/summary"}],"readingTime":11.335,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"\u8ba1\u7b97\u673a\u7f51\u7edc\u77e5\u8bc6\u603b\u7ed3(1)","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["Networking Basic","Summary"],"description":"\u8ba1\u7b97\u673a\u7f51\u7edc\u77e5\u8bc6\u603b\u7ed3(1)\uff1aTCP/IP","hide_table_of_contents":false},"prevItem":{"title":"Hive 3.x\u5b66\u4e60\u7b14\u8bb0(1)","permalink":"/blog/2022/02/19/Learning-Hive3.x-01"},"nextItem":{"title":"Hadoop 3.x\u5b66\u4e60\u7b14\u8bb0(6)","permalink":"/blog/2022/02/10/Learning-Hadoop3.x-06"}},"content":":pencil:\u8ba1\u7b97\u673a\u7f51\u7edc\u77e5\u8bc6\u603b\u7ed3(1)\uff1aTCP/IP\u3002\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## \u4f20\u8f93\u5c42\\r\\n\\r\\n### TCP3\u6b21\u63e1\u624b\\r\\n\\r\\n3\u6b21\u63e1\u624b\u6307\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u5efa\u7acbTCP\u8fde\u63a5\u7684\u8fc7\u7a0b\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a\\r\\n\\r\\n1. Client\u5411Server\u53d1\u9001\u8bf7\u6c42\u8fde\u63a5\u62a5\u6587(\u6807\u5fd7\u4f4dSYN=1\uff0c\u5e8f\u5217\u53f7seqnum=x\uff0cx\u4e3a\u968f\u673a\u6570)\uff0c\u53d1\u9001\u540eClient\u8fdb\u5165`SYN_SENT`\u72b6\u6001\uff1b\\r\\n2. Server\u63a5\u6536\u5230SYN=1\u7684TCP\u62a5\u6587\uff0c\u56de\u590d\u786e\u8ba4\u62a5\u6587(\u6807\u5fd7\u4f4dSYN=1\uff0cACK=1\uff0cack=x+1\uff0cseqnum=y\uff0cy\u4e3a\u968f\u673a\u6570)\uff0c\u53d1\u9001\u540eServer\u8fdb\u5165`SYN_RCVD`\u72b6\u6001\uff1b\\r\\n3. Client\u6536\u5230\u786e\u8ba4\u62a5\u6587\uff0c\u68c0\u67e5acknum\u662f\u5426\u4e3ax+1\uff0cACK\u662f\u5426\u4e3a1\uff0c\u5982\u679c\u6b63\u786e\u5219\u6062\u590d\u786e\u8ba4\u62a5\u6587(ACK=1\uff0cack=y+1)\uff0c\u53d1\u9001\u540eClient\u8fdb\u5165`ESTABLISHED`\u72b6\u6001\uff1bServer\u6536\u5230Client\u7684\u56de\u590d\u62a5\u6587\u540e\u4e5f\u68c0\u67e5ACK\u4e3a1\u548cack\u4e3ay+1\uff0c\u6b63\u786e\u5219Server\u8fdb\u5165`ESTABLISHED`\u72b6\u6001\u3002\\r\\n\\r\\n\u5927\u5199\u7684ACK\u8868\u793a\u6807\u5fd7\u4f4d\uff0c\u5c0f\u5199\u7684ack\u8868\u793a\u786e\u8ba4\u53f7\u3002\\r\\n\\r\\n:question: **3\u6b21\u63e1\u624b\u662f\u5426\u53ef\u4ee5\u51cf\u4e3a2\u6b21\u63e1\u624b**\uff1a\u4e0d\u53ef\u4ee5\u30023\u6b21\u63e1\u624b\u662f\u8fde\u63a5\u53cc\u65b9\u4e92\u76f8\u544a\u77e5\u5e8f\u5217\u53f7ack\u5e76\u786e\u8ba4\u7684\u8fc7\u7a0b\uff0c\u5982\u679c\u53ea\u67092\u6b21\u63e1\u624b\uff0c\u5219\u53ea\u6709\u8fde\u63a5\u53d1\u8d77\u65b9\u7684\u5e8f\u5217\u53f7\u88ab\u786e\u8ba4\uff0c\u7531\u6b64\u4ea7\u751f\u95ee\u9898\uff1a\u5df2\u7ecf\u5931\u6548\u7684\u8fde\u63a5\u8bf7\u6c42\u53c8\u4f20\u5230\u4e86Server\uff0c\u670d\u52a1\u5668\u8ba4\u4e3a\u662fClient\u53d1\u9001\u8fde\u63a5\u8bf7\u6c42\u9a6c\u4e0a\u5efa\u7acb\u8fde\u63a5\uff0c\u7136\u540e\u53d1\u9001\u786e\u8ba4\u62a5\u6587\uff0c\u4f46Client\u4e0d\u4f1a\u7406\u776c\u786e\u8ba4\u62a5\u6587\u800cServer\u8ba4\u4e3a\u8fde\u63a5\u5df2\u7ecf\u5efa\u7acb\uff0c\u6b64\u65f6Server\u4e00\u76f4\u7b49\u5f85Client\u53d1\u9001\u6570\u636e\uff0c\u9020\u6210\u8d44\u6e90\u6d6a\u8d39\u3002\\r\\n\\r\\n:question: **3\u6b21\u63e1\u624b\u662f\u5426\u53ef\u4ee5\u589e\u52a0\u4e3a4\u6b21\u63e1\u624b**\uff1a\u53ef\u4ee5\uff0c\u65e2\u71363\u6b21\u63e1\u624b\u5df2\u7ecf\u786e\u4fdd\u8fde\u63a5\u6b63\u786e\u5efa\u7acb\uff0c\u90a34\u6b21\u66f4\u4e0d\u5728\u8bdd\u4e0b\uff0c\u4e3a\u4e86\u63d0\u9ad8\u4f20\u8f93\u6548\u7387\u9009\u62e9\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u5c0f\u6b21\u65703\u3002\\r\\n\\r\\n:question: **\u7b2c3\u6b21\u63e1\u624b\u5ba2\u6237\u7aef\u7684ACK\u786e\u8ba4\u62a5\u6587\u4e22\u5931\u4f1a\u600e\u6837**\uff1a\u5bf9\u4e8eServer\uff0c\u5b83\u6ca1\u6709\u6536\u5230ACK\u786e\u8ba4\u540e\u91cd\u53d1\u4e4b\u524d\u7684SYN+ACK\u62a5\u65875\u6b21\uff0c\u7136\u540e\u8fdb\u5165`CLOSED`\u72b6\u6001\uff0c\u6b64\u65f6Client\u6536\u5230\u91cd\u53d1\u62a5\u6587\u4f1a\u91cd\u65b0\u4f20ACK\u7ed9Server\uff1b\u5bf9\u4e8eClient\uff0c\u5982\u679cServer\u5728\u8d85\u65f6\u91cd\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u6b64\u65f6Client\u91cd\u53d1ACK\u786e\u8ba4\u62a5\u6587\uff0cServer\u63a5\u6536\u540e\u8fdb\u5165`ESTABLISHED`\u72b6\u6001\uff0c\u5982\u679cServer\u5df2\u7ecf\u5904\u4e8e`CLOSED`\u72b6\u6001\uff0c\u5219Client\u53d1\u9001\u6570\u636eServer\u4f1a\u4ee5RST\u62a5\u6587\u5e94\u7b54\u3002\\r\\n\\r\\n:question: **\u5df2\u7ecf\u5efa\u7acb\u8fde\u63a5\u4f46\u5ba2\u6237\u7aef\u6545\u969c\u4f1a\u600e\u6837**\uff1aServer\u6bcf\u6536\u5230Client\u7684\u8bf7\u6c42\u540e\u90fd\u4f1a\u590d\u4f4d\u4e00\u4e2a\u8ba1\u65f6\u5668\uff0c\u9ed8\u8ba4\u4e3a2\u5c0f\u65f6\uff0c\u82e5\u8ba1\u65f6\u5668\u5230\u70b9\u540e\u8fd8\u672a\u6536\u5230Client\u6570\u636e\uff0cServer\u5411Client\u53d1\u9001\u63a2\u6d4b\u62a5\u6587\uff0c\u4ee5\u540e\u6bcf\u969475\u79d2\u53d1\u9001\u4e00\u6b21\uff0c\u5982\u679c\u53d1\u900110\u4e2a\u63a2\u6d4b\u62a5\u6587\u540eClient\u4ecd\u65e0\u54cd\u5e94\u5219Server\u8ba4\u4e3aClient\u6545\u969c\u5e76\u5173\u95ed\u8fde\u63a5\u3002\\r\\n\\r\\n:question: **\u7b2c3\u6b21\u63e1\u624b\u662f\u5426\u53ef\u4ee5\u643a\u5e26\u6570\u636e**\uff1a\u53ef\u4ee5\uff0c\u6b64\u65f6Client\u5df2\u7ecf\u786e\u8ba4Server\u63a5\u6536\u3001\u53d1\u9001\u6b63\u5e38\uff0c\u4f46\u7b2c1\u6b21\u63e1\u624b\u4e0d\u80fd\u643a\u5e26\u6570\u636e\uff0c\u5426\u5219\u53ef\u4ee5\u901a\u8fc7\u53d1\u9001\u542b\u5927\u91cf\u6570\u636e\u7684SYN\u62a5\u6587\u6765\u653b\u51fbServer\u3002\\r\\n\\r\\n#### \u534a\u8fde\u63a5\u961f\u5217\u4e0eSYN Flooding\u653b\u51fb\\r\\n\\r\\nServer\u4e0eClient\u7b2c1\u6b21\u63e1\u624b\u540e\u8fdb\u5165`SYN_RCVD`\u72b6\u6001\uff0c\u6b64\u65f6\u53cc\u65b9\u8fd8\u672a\u5b8c\u5168\u5efa\u7acb\u8fde\u63a5\uff0cServer\u5c06\u8be5\u72b6\u6001\u4e0b\u7684\u8bf7\u6c42\u8fde\u63a5\u653e\u5230\u961f\u5217\u4e2d\uff0c\u79f0\u4e4b\u4e3a**\u534a\u8fde\u63a5\u961f\u5217**\u3002SYN Flooding\u653b\u51fb\u6307\u901a\u8fc7\u53d1\u9001\u5927\u91cf\u7684\u534a\u8fde\u63a5\u8bf7\u6c42\uff0c\u8ba9Server\u82b1\u8d39\u5927\u91cfCPU\u548c\u5185\u5b58\u8d44\u6e90\u6765\u7ef4\u62a4\u534a\u8fde\u63a5\u961f\u5217\uff0c\u4ece\u800c\u5bfc\u81f4\u7cfb\u7edf\u8fd0\u884c\u7f13\u6162\u751a\u81f3\u5d29\u6e83\uff0c\u9632\u8303\u63aa\u65bd\u6709\u8bbe\u7f6e\u7f51\u5173\u8d85\u65f6\u3001\u4f7f\u7528SYN\u7f51\u5173\u3001SYN\u4ee3\u7406\u7b49\u3002\\r\\n\\r\\n### TCP4\u6b21\u6325\u624b\\r\\n\\r\\n4\u6b21\u6325\u624b\u6307\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u65ad\u5f00TCP\u8fde\u63a5\u7684\u8fc7\u7a0b\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a\\r\\n\\r\\n1. Client\u5411Server\u53d1\u9001\u8bf7\u6c42\u65ad\u5f00\u62a5\u6587(FIN=1\uff0cseq=x)\uff0c\u53d1\u9001\u540e\u8fdb\u5165`FIN_WAIT_1`\u72b6\u6001\uff1b\\r\\n2. Server\u63a5\u6536\u5230FIN\u62a5\u6587\uff0c\u8fd4\u56de\u786e\u8ba4\u62a5\u6587(ACK=1, ack=x+1)\uff0c\u53d1\u9001\u540e\u8fdb\u5165`CLOSE_WAIT`\u72b6\u6001\uff0c\u800cClient\u8fdb\u5165`FIN_WAIT_2`\u72b6\u6001\uff1b\\r\\n3. Server\u5411Client\u53d1\u9001\u8bf7\u6c42\u5173\u95ed\u62a5\u6587(FIN=1, seq=y)\uff0c\u53d1\u9001\u540e\u8fdb\u5165`LAST_ACK`\u72b6\u6001\uff1b\\r\\n4. Client\u63a5\u6536\u5230FIN\u62a5\u6587\uff0c\u8fd4\u56de\u786e\u8ba4\u62a5\u6587(ACK=1\uff0cseq=y+1)\uff0c\u8fdb\u5165`TIME_WAIT`\u72b6\u6001\uff1bServer\u6536\u5230\u540e\u8fdb\u5165`CLOSED`\u72b6\u6001\uff0c\u5ba2\u6237\u7aef\u7b49\u5f852*MSL\u540e\u4e5f\u8fdb\u5165`CLOSED`\u72b6\u6001\u3002\\r\\n\\r\\n\u7b80\u5355\u6765\u8bf4\uff0c4\u6b21\u6325\u624b\u5c31\u662f2\u8f6e\u7684FIN\u53d1\u9001\u548cACK\u56de\u590d\u3002\\r\\n\\r\\n:question: **\u7b2c2\u30013\u6b21\u63e1\u624b\u662f\u5426\u53ef\u4ee5\u5408\u5e76\u4e3a1\u6b21**\uff1a\u4e0d\u53ef\u4ee5\uff01Server\u63a5\u6536\u5230Client\u7684FIN\u62a5\u6587\u65f6\uff0c\u53ef\u80fd\u8fd8\u6709\u4e00\u4e9b\u6570\u636e\u6ca1\u6709\u53d1\u5b8c\uff0c\u56e0\u6b64\u5148\u56deACK\u8868\u793a\u63a5\u6536\u5230\u4e86Client\u7684FIN\u8bf7\u6c42\uff0c\u7b49\u5230\u5176\u6570\u636e\u53d1\u9001\u5b8c\u6bd5\u540e\u518d\u53d1\u9001FIN\u8868\u793aServer\u4e5f\u8981\u65ad\u5f00\u8fde\u63a5\u3002\\r\\n\\r\\n:question: **\u4e3a\u4ec0\u4e48Client\u8fdb\u5165`TIME_WAIT`\u72b6\u6001\u540e\u8981\u7b49\u5f852\\\\*MSL\u624d\u5173\u95ed\u800c\u4e0d\u662f\u76f4\u63a5\u8fdb\u5165`CLOSED`\u72b6\u6001**\uff1aMSL(Maximum Segment Lifetime)s\u662f\u62a5\u6587\u5728\u7f51\u7edc\u4e2d\u5b58\u5728\u7684\u6700\u957f\u65f6\u95f4\uff0c\u8d85\u8fc7\u6539\u65f6\u95f4\u7684\u62a5\u6587\u4f1a\u88ab\u4e22\u5f03\u3002\u7b49\u5f852*MSL\u6709\u4e24\u4e2a\u539f\u56e0\uff1a\u7b2c\u4e00\uff0c**\u786e\u8ba4Server\u80fd\u6536\u5230Client\u7684ACK\u62a5\u6587**\uff0cServer\u53ef\u80fd\u6ca1\u6709\u6536\u5230Client\u7b2c4\u6b21\u6325\u624b\u7684ACK\u62a5\u6587\uff0c\u6b64\u65f6Server\u4f1a\u91cd\u53d1FIN\u62a5\u6587\uff0c\u5982\u679c\u6b64\u65f6Client\u5904\u4e8e`CLOSED`\u72b6\u6001\u90a3\u4e48\u91cd\u53d1\u7684FIN\u62a5\u6587\u5c31\u627e\u4e0d\u5230\u5bf9\u5e94\u7684\u8fde\u63a5\uff0c\u8ba9Client\u5904\u4e8e`TIME_WAIT`\u80fd\u786e\u4fdd\u54cd\u5e94\u91cd\u53d1\u7684FIN\u62a5\u6587\uff0c\u4ece\u800c\u4fdd\u8bc1Server\u80fd\u6536\u5230ACK\uff1b\u7b2c\u4e8c\uff0c**\u4fdd\u8bc1\u672c\u6b21\u8fde\u63a5\u7684\u6570\u636e\u62a5\u6587\u4ece\u7f51\u7edc\u4e2d\u6d88\u5931**\uff0c\u5982\u679cClient\u53d1\u9001ACK\u540e\u76f4\u63a5\u8fdb\u5165`CLOSED`\u72b6\u6001\uff0c\u7136\u540e\u53c8\u5411Server\u53d1\u9001\u65b0\u8bf7\u6c42\u8fde\u63a5\uff0c\u5047\u8bbe\u7aef\u53e3\u53f7\u4e0d\u53d8\uff0c\u65e7\u8fde\u63a5\u7684\u62a5\u6587\u5ef6\u8fdf\u5230\u65b0\u8fde\u63a5\u8fbe\u5230Server\uff0c\u6b64\u65f6Server\u8ba4\u4e3a\u5ef6\u8fdf\u62a5\u6587\u662f\u65b0\u8fde\u63a5\u7684\uff0c\u7531\u6b64\u4ea7\u751f\u810f\u6570\u636e\uff0c\u56e0\u6b64Client\u9700\u8981\u7b492\\\\*MSL\u6765\u786e\u4fdd\u672c\u6b21\u8fde\u63a5\u7684\u6240\u6709\u62a5\u6587\u5728\u7f51\u7edc\u4e2d\u6d88\u5931\u3002\\r\\n\\r\\n### \u7c98\u5305\u548c\u62c6\u5305\\r\\n\\r\\nTCP\u534f\u8bae\u9762\u5411\u5b57\u8282\u6d41\uff0c\u53d1\u9001\u6570\u636e\u5305\u5927\u5c0f\u4e0d\u56fa\u5b9a\uff0c\u5e76\u4e14\u62a5\u6587\u4e5f\u4e0d\u5b58\u5728\u6307\u5b9a\u6570\u636e\u5305\u5927\u5c0f\u7684\u5b57\u6bb5\u3002\u7531\u4e8eTCP\u6839\u636e\u7f13\u51b2\u533a\u7684\u5927\u5c0f\u8fdb\u884c\u5305\u7684\u5212\u5206\uff0c\u6240\u4ee5\u5728\u4e1a\u52a1\u4e0a\u4e00\u4e2a\u5b8c\u6574\u7684\u5305\u53ef\u80fd\u4f1a\u88ab\u62c6\u5206\u4e3a\u591a\u4e2a\u5305\u53d1\u9001\uff0c\u6216\u8005\u591a\u4e2a\u5c0f\u7684\u6570\u636e\u5305\u5408\u5e76\u4e3a\u4e00\u4e2a\u5927\u7684\u53d1\u9001\uff0c\u5373TCP\u7c98\u5305\u548c\u62c6\u5305\u3002\u89e3\u51b3\u65b9\u6cd5\u6709\u5982\u4e0b\u51e0\u79cd\uff1a\\r\\n\\r\\n1. \u6d88\u606f\u5b9a\u957f\uff1a\u53d1\u9001\u6570\u636e\u5305\u5927\u5c0f\u56fa\u5b9a\uff0c\u4e0d\u8db3\u90e8\u5206\u7528\u7a7a\u683c\u8865\u5145\uff1b\\r\\n2. \u4f7f\u7528\u5206\u9694\u7b26\uff1a\u4f8b\u5982\u5728\u6570\u636e\u672b\u5c3e\u6dfb\u52a0\u6362\u884c\u7b26\u8868\u793a\u5b8c\u6574\u6d88\u606f\uff0c\u6570\u636e\u5305\u542b\u5206\u9694\u7b26\u65f6\u4e0d\u9002\u7528\uff1b\\r\\n3. \u5934\u90e8\u6307\u5b9a\uff1a\u5c06\u6d88\u606f\u5206\u4e3a\u6d88\u606f\u5934\u548c\u6d88\u606f\u5c3e\u4e24\u90e8\u5206\uff0c\u6d88\u606f\u5934\u6307\u5b9a\u957f\u5ea6\u3002\\r\\n\\r\\n### \u6d41\u91cf\u63a7\u5236\u548c\u62e5\u585e\u63a7\u5236\\r\\n\\r\\n\u6d41\u91cf\u63a7\u5236\u662fTCP\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u7528\u4e8e\u786e\u8ba4\u5bf9\u65b9\u80fd\u591f\u63a5\u6536\u6570\u636e\u5927\u5c0f\u7684\u673a\u5236\uff0c\u901a\u8fc7\u6ed1\u52a8\u7a97\u53e3\u5b9e\u73b0\uff1a\u5728TCP\u62a5\u6587\u5934\u90e8\u8bbe\u8ba1\u4e86rwnd(Receiver Window)\u5b57\u6bb5\uff0c\u7531\u63a5\u6536\u65b9\u7528\u4e8e\u901a\u77e5\u53d1\u9001\u65b9\u81ea\u5df1\u5269\u4f59\u53ef\u63a5\u6536\u6570\u636e\u7684\u7f13\u51b2\u533a\u5927\u5c0f\uff0c\u53d1\u9001\u65b9\u6839\u636e\u8be5\u503c\u6765\u786e\u8ba4\u53d1\u9001\u6570\u636e\u7684\u5927\u5c0f\uff0c\u786e\u4fdd\u63a5\u6536\u65b9\u53ef\u4ee5\u53ca\u65f6\u5904\u7406(**\u63a5\u6536\u65b9\u4f1a\u4e22\u5931\u6765\u4e0d\u53ca\u5904\u7406\u7684\u6570\u636e**)\u3002\u53d1\u9001\u65b9\u7ef4\u62a4\u53d1\u9001\u7a97\u53e3\uff0c\u63a5\u6536\u65b9\u7ef4\u62a4\u63a5\u6536\u7a97\u53e3\uff0c\u53d1\u9001\u7a97\u53e3\u548c\u63a5\u6536\u7a97\u53e3\u7684\u5e8f\u53f7\u7684\u4e0a\u4e0b\u754c\u4e0d\u4e00\u5b9a\u8981\u4e00\u6837\uff0c\u751a\u81f3\u5927\u5c0f\u4e5f\u53ef\u4ee5\u4e0d\u540c\u3002\\r\\n\\r\\n:::info \u6d41\u91cf\u63a7\u5236\u5f15\u53d1\u7684\u6b7b\u9501\\r\\n\u5f53\u53d1\u9001\u65b9\u6536\u5230\u4e86\u7a97\u53e3\u4e3a0\u7684\u5e94\u7b54\uff0c\u4fbf\u505c\u6b62\u53d1\u9001\u6570\u636e\u7b49\u5f85\u63a5\u6536\u65b9\u7684\u4e0b\u4e00\u4e2a\u5e94\u7b54\uff1b\u4f46\u4e0d\u5e78\u5730\u662f\u4e0b\u4e00\u4e2a\u7a97\u53e3\u4e0d\u4e3a0\u5e94\u7b54\u5728\u4f20\u8f93\u4e2d\u4e22\u5931\uff0c\u7531\u6b64\u53d1\u9001\u65b9\u4e00\u76f4\u7b49\u5f85\u800c\u63a5\u6536\u65b9\u4ee5\u4e3a\u53d1\u9001\u65b9\u5df2\u7ecf\u6536\u5230\u5e94\u7b54\u4e5f\u5728\u7b49\u5f85\uff0c\u6700\u7ec8\u5bfc\u81f4\u53cc\u65b9\u4e92\u76f8\u7b49\u5f85\uff0c\u5f62\u6210\u6b7b\u9501\u3002\u89e3\u51b3\u65b9\u6cd5\u662f\u4f7f\u7528\u6301\u7eed\u8ba1\u65f6\u5668\uff0c\u6bcf\u5f53\u53d1\u9001\u65b9\u63a5\u6536\u5230\u5927\u5c0f\u4e3a0\u7684\u7a97\u53e3\u5e94\u7b54\u540e\u5c31\u5f00\u542f\u8be5\u8ba1\u65f6\u5668\uff0c\u65f6\u95f4\u4e00\u5230\u5c31\u4e3b\u52a8\u53d1\u9001\u62a5\u6587\u67e5\u8be2\u63a5\u6536\u65b9\u7a97\u53e3\u5927\u5c0f\uff0c\u82e5\u63a5\u6536\u65b9\u4ecd\u8fd4\u56de\u96f6\u7a97\u53e3\u5219\u91cd\u7f6e\u8ba1\u65f6\u5668\u5e76\u7b49\u5f85\uff0c\u5426\u5219\u8bf4\u660e\u5e94\u7b54\u62a5\u6587\u4e22\u5931\uff0c\u6b64\u65f6\u91cd\u7f6e\u53d1\u9001\u7a97\u53e3\u540e\u91cd\u65b0\u5f00\u59cb\u53d1\u9001\u3002\\r\\n:::\\r\\n\\r\\n\u6ed1\u52a8\u7a97\u53e3\u53ea\u8003\u8651\u5bf9\u65b9\u7684\u5904\u7406\u80fd\u529b\uff0c\u4f46\u6ca1\u6709\u8003\u8651\u6574\u4e2a\u7f51\u7edc\u7684\u8d1f\u8f7d\uff0c\u56e0\u6b64\u53c8\u8bbe\u8ba1\u4e86\u62e5\u585e\u63a7\u5236\uff0c\u5b83\u5305\u542b\u6162\u542f\u52a8\u3001\u62e5\u585e\u907f\u514d\u3001\u5feb\u91cd\u4f20\u548c\u5feb\u901f\u6062\u590d4\u79cd\u7b97\u6cd5\u3002\u5176\u4e2d\uff0c\u524d2\u4e2a\u7b97\u6cd5\u7528\u4e8e\u62e5\u585e\u53d1\u751f\u524d\uff0c\u7b2c3\u4e2a\u7528\u4e8e\u62e5\u585e\u53d1\u751f\u65f6\uff0c\u7b2c4\u4e2a\u7528\u4e8e\u62e5\u585e\u89e3\u51b3\u540e\u3002\u5728TCP\u62a5\u6587\u4e2d\u8bbe\u7f6ecwnd(Congestion Window)\u5b57\u6bb5\u8868\u793a\u62e5\u585e\u7a97\u53e3\u5927\u5c0f\uff0c\u5b83\u7531\u53d1\u9001\u65b9\u63a2\u6d4b\u7f51\u7edc\u60c5\u51b5\u4e3b\u52a8\u8c03\u6574\u3002\u5b9e\u9645\u4e2d\u4f1a\u540c\u65f6\u8003\u8651\u6d41\u91cf\u63a7\u5236\u548c\u62e5\u585e\u63a7\u5236\uff0c\u56e0\u6b64**\u53d1\u9001\u65b9\u7684\u7a97\u53e3\u5927\u5c0f\u4e0d\u8d85\u8fc7min(rwnd, cwnd)**\u3002\\r\\n\\r\\n1. **\u6162\u542f\u52a8**\uff1a\u4e00\u5f00\u59cb\u8bbe\u7f6ecwnd\u4e3a1\uff0c\u6bcf\u7ecf\u8fc7\u4e00\u4e2a\u4f20\u8f93\u8f6e\u6b21\uff0ccwnd\u52a0\u500d\u3002\u4e3a\u4e86\u9632\u6b62cwnd\u589e\u957f\u8fc7\u5927\uff0c\u8fd8\u8bbe\u7f6e\u4e86\u6162\u5f00\u59cb\u9608\u503cssthresh\uff1acwnd\u5c0f\u4e8essthresh\u65f6\u4f7f\u7528\u6162\u5f00\u59cb\u7b97\u6cd5\uff0c\u5927\u4e8e\u65f6\u4f7f\u7528\u62e5\u585e\u907f\u514d\u7b97\u6cd5\uff0c\u7b49\u4e8e\u4efb\u9009\u6162\u5f00\u59cb\u548c\u62e5\u585e\u907f\u514d\u3002\\r\\n\\r\\n2. **\u62e5\u585e\u907f\u514d**\uff1a\u5230cwnd\u5230\u8fbessthresh\u540e\uff0ccwnd\u6bcf\u7ecf\u8fc7\u4e00\u6b21\u4f20\u8f93\u8f6e\u6b21\u52a01\u800c\u4e0d\u662f\u52a0\u500d\u3002\u65e0\u8bba\u662f\u6162\u542f\u52a8\u8fd8\u662f\u62e5\u585e\u907f\u514d\u9636\u6bb5\uff0c**\u53ea\u8981\u53d1\u9001\u65b9\u5224\u65ad\u51fa\u73b0\u7f51\u7edc\u62e5\u585e(\u5224\u65ad\u4f9d\u636e\u662f\u672a\u6309\u65f6\u6536\u5230\u5e94\u7b54)\u5c31\u628assthresh\u8bbe\u7f6e\u4e3a\u51fa\u73b0\u62e5\u585e\u65f6\u7684\u4e00\u534a(\u4f46\u4e0d\u5c0f\u4e8e2)**\uff0c\u7136\u540e\u91cd\u65b0\u5c06cwnd\u8bbe\u7f6e\u4e3a1\uff0c\u6267\u884c\u6162\u542f\u52a8\u3002"},{"id":"/2022/02/10/Learning-Hadoop3.x-06","metadata":{"permalink":"/blog/2022/02/10/Learning-Hadoop3.x-06","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2022-02-10-Learning-Hadoop3.x-06.md","source":"@site/blog/2022-02-10-Learning-Hadoop3.x-06.md","title":"Hadoop 3.x\u5b66\u4e60\u7b14\u8bb0(6)","description":"Hadoop 3.1.3\u5b66\u4e60\u7b14\u8bb0(6)","date":"2022-02-10T00:00:00.000Z","formattedDate":"February 10, 2022","tags":[{"label":"Hadoop","permalink":"/blog/tags/hadoop"},{"label":"BigData","permalink":"/blog/tags/big-data"}],"readingTime":9.655,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"Hadoop 3.x\u5b66\u4e60\u7b14\u8bb0(6)","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["Hadoop","BigData"],"description":"Hadoop 3.1.3\u5b66\u4e60\u7b14\u8bb0(6)","hide_table_of_contents":false},"prevItem":{"title":"\u8ba1\u7b97\u673a\u7f51\u7edc\u77e5\u8bc6\u603b\u7ed3(1)","permalink":"/blog/2022/02/15/NetworkingSummary-01"},"nextItem":{"title":"Hadoop 3.x\u5b66\u4e60\u7b14\u8bb0(4)","permalink":"/blog/2022/02/07/Learning-Hadoop3.x-04"}},"content":":pencil:Hadoop 3.1.3\u5b66\u4e60\u7b14\u8bb0\u7b2c6\u7bc7\uff1a\u6e90\u7801\u5206\u6790\u3002\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## NameNode\u542f\u52a8\u6e90\u7801\u5206\u6790\\r\\n\\r\\n\u5206\u6790NameNode.java(\u5728hadoop-hdfs.jar\u5305\u4e0b)\uff0c\u4e3b\u8981\u6709\u4ee5\u4e0b\u6d41\u7a0b\uff1a\u542f\u52a8Web\u670d\u52a1\u3001\u52a0\u8f7d\u955c\u50cf\u6587\u4ef6\u548c\u7f16\u8f91\u65e5\u5fd7\u3001\u521d\u59cb\u5316RPC\u670d\u52a1\u5668\u3001\u542f\u52a8\u8d44\u6e90\u68c0\u67e5\u3001\u5fc3\u8df3\u68c0\u6d4b\u548c\u5b89\u5168\u6a21\u5f0f\u3002\\r\\n\\r\\n### \u542f\u52a8Web\u670d\u52a1\\r\\n\\r\\n\u4eceNameNode.java\u7684main() -> createNameNode -> NameNode\u6784\u9020\u65b9\u6cd5 -> initialize -> **startHttpServer**\u65b9\u6cd5\u542f\u52a8NameNode\u670d\u52a1\u3002\\r\\n\\r\\n```java \\r\\nprivate void startHttpServer(final Configuration conf) throws IOException {\\r\\n    httpServer = new NameNodeHttpServer(conf, this, getHttpServerBindAddress(conf));\\r\\n    httpServer.start();\\r\\n    httpServer.setStartupProgress(startupProgress);\\r\\n}\\r\\n\\r\\nprotected InetSocketAddress getHttpServerBindAddress(Configuration conf) {\\r\\n    InetSocketAddress bindAddress = getHttpServerAddress(conf);\\r\\n\\r\\n    // If DFS_NAMENODE_HTTP_BIND_HOST_KEY exists then it overrides the\\r\\n    // host name portion of DFS_NAMENODE_HTTP_ADDRESS_KEY.\\r\\n    final String bindHost = conf.getTrimmed(DFS_NAMENODE_HTTP_BIND_HOST_KEY);\\r\\n    if (bindHost != null && !bindHost.isEmpty()) {\\r\\n      bindAddress = new InetSocketAddress(bindHost, bindAddress.getPort());\\r\\n    }\\r\\n\\r\\n    return bindAddress;\\r\\n}\\r\\n```\\r\\n\\r\\n\u5176\u4e2dgetHttpServerBindAddress\u4ececonf\u83b7\u53d6`dfs.namenode.http-address`\u6765\u8bbe\u7f6e\u670d\u52a1\u7684\u5730\u5740\u548c\u7aef\u53e3\u53f7\uff0c\u82e5\u6ca1\u6709\u8bbe\u7f6e\u5219\u9ed8\u8ba4\u4e3a`0.0.0.0:9870`\uff1b\u63a5\u7740\u5224\u65ad\u662f\u5426\u914d\u7f6e`dfs.namenode.http-bind-host`\uff0c\u82e5\u6709\u8bbe\u7f6e\u5219\u7528\u5176\u4f5c\u4e3a\u670d\u52a1\u5730\u5740\u3002\\r\\n\\r\\n### \u52a0\u8f7d\u955c\u50cf\u6587\u4ef6\u548c\u7f16\u8f91\u6587\u4ef6\\r\\n\\r\\nNameNode.java\u7684loadNameSystem\u65b9\u6cd5\uff0c\u53c8\u8c03\u7528FSNamesystem.loadFromDisk\u65b9\u6cd5\uff0c\u6ce8\u610f\u52a0\u8f7d\u4f20\u5165\u955c\u50cf\u6587\u4ef6\u548c\u7f16\u8f91\u6587\u4ef6\u4e24\u4e2a\u5730\u5740\u3002\\r\\n\\r\\n```java\\r\\nstatic FSNamesystem loadFromDisk(Configuration conf) throws IOException {\\r\\n    checkConfiguration(conf);\\r\\n    FSImage fsImage = new FSImage(conf,\\r\\n        FSNamesystem.getNamespaceDirs(conf),\\r\\n        FSNamesystem.getNamespaceEditsDirs(conf));\\r\\n    ...\\r\\n}\\r\\n```\\r\\n\\r\\n### \u521b\u5efaRPC\u670d\u52a1\\r\\n\\r\\ninitialize\u65b9\u6cd5\u8c03\u7528createRpcServer\u65b9\u6cd5\uff0c\u521b\u5efa\u4e00\u4e2aNameNodeRpcServer\u5bf9\u8c61\uff0c\u5176\u6784\u9020\u65b9\u6cd5\u5305\u542b\u5982\u4e0b\u4ee3\u7801\u6765\u521b\u5efaRpc\u670d\u52a1\u5668\u3002\\r\\n\\r\\n```java\\r\\nlifelineRpcServer = new RPC.Builder(conf)\\r\\n    .setProtocol(HAServiceProtocolPB.class)\\r\\n    .setInstance(haPbService)\\r\\n    .setBindAddress(bindHost)\\r\\n    .setPort(lifelineRpcAddr.getPort())\\r\\n    .setNumHandlers(lifelineHandlerCount)\\r\\n    .setVerbose(false)\\r\\n    .setSecretManager(namesystem.getDelegationTokenSecretManager())\\r\\n    .build();\\r\\n```\\r\\n\\r\\n### \u8d44\u6e90\u68c0\u6d4b\\r\\n\\r\\ninitialize\u65b9\u6cd5\u8c03\u7528startCommonServices\u65b9\u6cd5\uff0c\u8c03\u7528FSNamesystem\u7684startCommonServices\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5305\u542b\u64cd\u4f5c\uff1a\\r\\n\\r\\n1. \u521b\u5efaNameNodeResourceChecker\u5bf9\u8c61\uff0c\u68c0\u67e5\u5143\u6570\u636e\u5b58\u50a8\u7a7a\u95f4\u662f\u5426\u5269\u4f59100MB\u53ef\u7528\\r\\n2. checkAvailableResources->hasAvailableDiskSpace->areResourcesAvailable->isResourceAvailable\uff0c\u68c0\u67e5\u8d44\u6e90\u662f\u5426\u5269\u4f59100MB\u7a7a\u95f4\\r\\n\\r\\n### \u5fc3\u8df3\u68c0\u6d4b\\r\\n\\r\\nstartCommonServices\u901a\u8fc7blockManager.activate->datanodeManager.activate(conf)->heartbeatManager.activate()->heartbeatThread.start()->Monitor.run()->heartbeatCheck()->isDatanodeDead()\uff0c\u5224\u65ad\u8282\u70b9\u662f\u5426\u6302\u6389\u7684\u5fc3\u8df3\u65f6\u957f$heartbeatExpireInterval=2*heartbeatRecheckInterval+10*1000*heartbeatIntervalSeconds$\uff0c\u5176\u4e2d$heartbeatRecheckInterval$\u9ed8\u8ba4\u4e3a5\u5206\u949f\uff0c$heartbeatIntervalSeconds$\u9ed8\u8ba4\u4e3a3\uff0c\u5373\u5224\u65ad\u8282\u70b9\u662f\u5426\u6302\u6389\u7684\u5fc3\u8df3\u65f6\u957f\u9ed8\u8ba4\u4e3a10\u5206\u949f\u52a030\u79d2\u3002\\r\\n\\r\\n### \u5b89\u5168\u6a21\u5f0f\u5f00\u542f\\r\\n\\r\\nFSNamesystem\u7684startCommonServices\u65b9\u6cd5\u8c03\u7528blockManager.activate->bmSafeMode.activate(blockTotal)\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff0c\u8c03\u7528setBlockTotal\u65b9\u6cd5\u8bbe\u7f6e\u6240\u6709\u5757\u7684\u603b\u6570\u548c\u5b89\u5168\u9608\u503c\uff0c\u8c03\u7528areThresholdsMet\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u53ef\u7528\u9608\u503c\uff0c\u76f8\u5e94\u7684\u8bbe\u7f6e\u662f\u5426\u8fdb\u5165\u5b89\u5168\u6a21\u5f0f\u3002\\r\\n\\r\\n```java\\r\\nvoid activate(long total) {\\r\\n  assert namesystem.hasWriteLock();\\r\\n  assert status == BMSafeModeStatus.OFF;\\r\\n\\r\\n  startTime = monotonicNow();\\r\\n  setBlockTotal(total);\\r\\n  if (areThresholdsMet()) {\\r\\n    boolean exitResult = leaveSafeMode(false);\\r\\n    Preconditions.checkState(exitResult, \\"Failed to leave safe mode.\\");\\r\\n  } else {\\r\\n    // enter safe mode\\r\\n    status = BMSafeModeStatus.PENDING_THRESHOLD;\\r\\n    initializeReplQueuesIfNecessary();\\r\\n    reportStatus(\\"STATE* Safe mode ON.\\", true);\\r\\n    lastStatusReport = monotonicNow();\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n## DataNode\u542f\u52a8\u6e90\u7801\u5206\u6790\\r\\n\\r\\nDataNode\u542f\u52a8\u540e\uff0c\u9996\u5148\u5411NameNode\u6ce8\u518c\u81ea\u5df1\uff0c\u7136\u540e\u5b9a\u671f(6\u5c0f\u65f6)\u5411NN\u4e0a\u62a5\u6240\u6709\u5757\u4fe1\u606f\uff0c\u6bcf\u96943\u79d2\u5411NN\u53d1\u9001\u5fc3\u8df3\uff0c\u5982\u679cNN\u8d85\u8fc710\u520630\u79d2\u6ca1\u6709\u6536\u5230DataNode\u5fc3\u8df3\u5219\u8ba4\u4e3a\u8be5\u8282\u70b9\u4e0d\u53ef\u7528\u3002\u542f\u52a8\u6d41\u7a0b\u5982\u4e0b\uff1a\\r\\n\\r\\n### \u521d\u59cb\u5316DataXceiverServer\\r\\n\\r\\n\u4ee5DataNode.java\u7684main\u65b9\u6cd5\u4e3a\u5165\u53e3\uff1asecureMain->createDataNode->instantiateDataNode->makeInstance->new DataNode->startDataNode->initDataXceiver\uff0c\u8c03\u7528`this.dataXceiverServer = new Daemon(threadGroup, xserver);`\u5f00\u542f\u670d\u52a1\u7ebf\u7a0b\u3002\\r\\n\\r\\n### \u521d\u59cb\u5316HTTP\u670d\u52a1\\r\\n\\r\\nstartDataNode\u65b9\u6cd5\u8c03\u7528startInfoServer\u4e3a\u5165\u53e3\uff1anew DatanodeHttpServer->new HttpServer2\uff0c\u7136\u540e\u5f00\u542fhttp\u670d\u52a1\uff0c\u63d0\u4f9b\u8bbf\u95eeDataNode\u4fe1\u606f\u7684endpoint\u3002\\r\\n\\r\\n### \u521d\u59cb\u5316Rpc\u670d\u52a1\\r\\n\\r\\nstartDataNode\u65b9\u6cd5\u8c03\u7528initIpcServer\u4e3a\u5165\u53e3\uff0c\u521b\u5efaRPC\u5bf9\u8c61\u3002\\r\\n\\r\\n### \u5411NameNode\u6ce8\u518c\\r\\n\\r\\nstartDataNode\u65b9\u6cd5\u8c03\u7528BlockPoolManager.refreshNamenodes\u65b9\u6cd5\u4e3a\u5165\u53e3\uff1adoRefreshNamenodes->createBPOS->new BPOfferService->new BPServiceActor\uff0c\u6709\u591a\u5c11\u4e2aNameNode\u5c31\u6dfb\u52a0\u591a\u5c11\u4e2aBPServiceActor\uff0c\u5728\u8c03\u7528createBPOS\u540e\uff0c\u8c03\u7528startAll\u65b9\u6cd5\u8fdb\u5165\u6ce8\u518c\uff1abpos.start()->actor.start()->BPServiceActor.run()->connectToNNAndHandshake()->db.connectToNN()->new DatanodeProtocolClientSideTranslatorPB()->createNamenode()->RPC.getProxy()\uff0c\u6700\u7ec8\u5f97\u5230\u4ee3\u7406\u5bf9\u8c61\u3002\u7136\u540e\u5f00\u59cb\u6ce8\u518cDataNode\u4fe1\u606f\uff1aregister()->bpNamenode.registerDatanode(newBpRegistration)->rpcProxy.registerDatanode()\uff0c\u901a\u8fc7rpc\u8c03\u7528**NameNode**\u7684registerDatanode\u65b9\u6cd5\u3002\\r\\n\\r\\n### \u53d1\u9001\u5fc3\u8df3\\r\\n\\r\\n\u56de\u5230BPServiceActor.run()\u65b9\u6cd5\uff0c\u8c03\u7528offerService\u4e3a\u5165\u53e3\uff1asendHeartBeat->bpNamenode.sendHeartbeat->NameNodeRpcServer.sendHeartbeat->namesystem.handleHeartbeat->blockManager.getDatanodeManager().handleHeartbeat->heartbeatManager.updateHeartbeat->blockManager.updateHeartbeat->node.updateHeartbeat->updateHeartbeatState\uff0c\u7531NameNode\u8fd4\u56de\u4e00\u4e2aHeartbeatResponse\u5bf9\u8c61\u4f5c\u4e3a\u5fc3\u8df3\u54cd\u5e94\u3002\\r\\n\\r\\n```java\\r\\nvoid updateHeartbeatState(StorageReport[] reports, long cacheCapacity,\\r\\n    long cacheUsed, int xceiverCount, int volFailures,\\r\\n    VolumeFailureSummary volumeFailureSummary) {\\r\\n  updateStorageStats(reports, cacheCapacity, cacheUsed, xceiverCount,\\r\\n      volFailures, volumeFailureSummary);\\r\\n  setLastUpdate(Time.now());\\r\\n  setLastUpdateMonotonic(Time.monotonicNow());\\r\\n  rollBlocksScheduled(getLastUpdateMonotonic());\\r\\n}\\r\\n```\\r\\n\\r\\n## HDFS\u6587\u4ef6\u4e0a\u4f20\u6e90\u7801\u5206\u6790\\r\\n\\r\\n\u7b2c\u4e00\u90e8\u5206\uff1a\u65b0\u589e\u6587\u4ef6\u5143\u4fe1\u606f\u3002\u4ee5FileSystem.create(Path path, boolean overwrite)\u65b9\u6cd5\u4e3a\u5165\u53e3\uff0c\u8c03\u7528\u62bd\u8c61\u65b9\u6cd5create->DistributedFileSystem.create()->dfs.create->DFSOutputStream.newStreamForCreate->dfsClient.namenode.create(\u8c03\u7528\u5ba2\u6237\u7aef\u7684Rpc\u521b\u5efa\u65b9\u6cd5)->namesystem.startFile()[NameNodeRpcServer.java, Line 791]->startFileInt(FSNamesystem.java, Line 2375)->FSDirWriteFileOp.startFile->FSDirWriteFileOp.addFile->fsd.addINode(Line 568)\uff0c\u6700\u540e\u901a\u8fc7addINode\u65b9\u6cd5\u5c06\u8def\u5f84\u6dfb\u52a0\u5230\u6587\u4ef6\u7cfb\u7edf\u5143\u4fe1\u606f\u4e2d\u3002\\r\\n\\r\\n```java\\r\\npublic void testPut2() throws IOException {\\r\\n    FSDataOutputStream fos = fs.create(new Path(\\"/input2\\"));\\r\\n    fos.write(\\"hello world\\".getBytes());\\r\\n}\\r\\n```\\r\\n\\r\\n\u56de\u5230DFSOutputStream.java\u7684276\u884c\uff0c\u5728\u6dfb\u52a0\u5b8c\u6587\u4ef6\u5143\u4fe1\u606f\u540e\uff0c\u5728313\u884c\u521b\u5efa\u6587\u4ef6\u8f93\u51fa\u6d41DFSOutputStream\u5bf9\u8c61out\uff0c\u8be5\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u8c03\u7528\u4e86\u5982\u4e0bcomputePacketChunkSize\u65b9\u6cd5\u6765\u8ba1\u7b97Packet\u5305\u542b\u7684chunk\u6570\u91cf\u548cpacket\u7684\u5927\u5c0f\uff1a\\r\\n\\r\\n```java\\r\\nprotected void computePacketChunkSize(int psize, int csize) {\\r\\n  final int bodySize = psize - PacketHeader.PKT_MAX_HEADER_LEN;\\r\\n  final int chunkSize = csize + getChecksumSize();\\r\\n  chunksPerPacket = Math.max(bodySize/chunkSize, 1);\\r\\n  packetSize = chunkSize*chunksPerPacket;\\r\\n  DFSClient.LOG.debug(\\"computePacketChunkSize: src={}, chunkSize={}, \\"\\r\\n          + \\"chunksPerPacket={}, packetSize={}\\",\\r\\n      src, chunkSize, chunksPerPacket, packetSize);\\r\\n}\\r\\n```\\r\\n\\r\\n\u9ed8\u8ba4Packet\u5927\u5c0f\u4e3a64KB\uff0cchunk\u5927\u5c0f\u4e3a512Byte\uff0cchunksum\u5927\u5c0f\u4e3a4Byte\u3002\u521b\u5efa\u5b8cout\u5bf9\u8c61\u540e\uff0c\u63a5\u7740\u8c03\u7528\u5176start\u65b9\u6cd5\uff1aDataStreamer.start()->DataStreamer.run()->dataQueue.wait()\u3002\u5176\u4e2ddataQueue\u662f`LinkedList<DFSPacket>`\u7c7b\u578b\u5bf9\u8c61\uff0c\u8c03\u7528wait\u65b9\u6cd5\u963b\u585e\u961f\u5217\u76f4\u5230\u6709packet\u5165\u961f\u3002\\r\\n\\r\\n\u7b2c\u4e8c\u90e8\u5206\uff1a\u5199\u6570\u636e\u3002\u7b2c\u4e00\u6b65\u662f\u5199packet\uff0c\u4ee5FSDataOutputStream.write\u65b9\u6cd5\u4e3a\u5165\u53e3\uff1aFilterOutputStream.write->FSOutputSummer.write->FSOutputSummer.flushBuffer->FSOutputSummer.writeChecksumChunks->DFSOutputStream.writeChunk->DFSOutputStream.enqueueCurrentPacketFull->DFSOutputStream.enqueueCurrentPacket->DataStreamer.waitAndQueuePacket\uff0c\u7b2c\u4e00\u6b21\u5199\u6570\u636e\u961f\u5217\u4e3a\u7a7a\uff0c\u56e0\u6b64\u63a5\u4e0b\u6765\u8c03\u7528queuePacket\u65b9\u6cd5\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u6709\uff0c\u5b83\u5c06packet\u6dfb\u52a0\u5728\u961f\u5217\u672b\u5c3e\uff0c\u7136\u540e\u8c03\u7528notifyAll\u5524\u9192\u6240\u6709\u963b\u585e\u7ebf\u7a0b\u3002\\r\\n\\r\\n```java\\r\\nvoid queuePacket(DFSPacket packet) {\\r\\n  synchronized (dataQueue) {\\r\\n    if (packet == null) return;\\r\\n    packet.addTraceParent(Tracer.getCurrentSpanId());\\r\\n    dataQueue.addLast(packet);\\r\\n    lastQueuedSeqno = packet.getSeqno();\\r\\n    LOG.debug(\\"Queued {}, {}\\", packet, this);\\r\\n    dataQueue.notifyAll();\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n\u7b2c\u4e8c\u6b65\uff0c\u5efa\u7acb\u6570\u636e\u4f20\u8f93\u7ba1\u7406pipeline\u3002\u56de\u5230DataStreamer\u7684run\u65b9\u6cd5\uff0c\u4ee5setPipeline\u65b9\u6cd5\u4e3a\u5165\u53e3\uff1aDataStreamer.nextBlockOutputStream->DataStreamer.locateFollowingBlock->DFSOutputStream.addBlock->dfsClient.namenode.addBlock(NameNodeRpcServer.addBlock)->FSNamesystem.getAdditionalBlock->FSDirWriteFileOp.chooseTargetForNewBlock->BlockManager.chooseTarget4NewBlock->BlockPlacementPolicyDefault.chooseTarget->BlockPlacementPolicyDefault.chooseTargetInOrder->\\r\\n\\r\\n```java\\r\\nprotected Node chooseTargetInOrder(int numOfReplicas, \\r\\n                                 Node writer,\\r\\n                                 final Set<Node> excludedNodes,\\r\\n                                 final long blocksize,\\r\\n                                 final int maxNodesPerRack,\\r\\n                                 final List<DatanodeStorageInfo> results,\\r\\n                                 final boolean avoidStaleNodes,\\r\\n                                 final boolean newBlock,\\r\\n                                 EnumMap<StorageType, Integer> storageTypes)\\r\\n                                 throws NotEnoughReplicasException {\\r\\n  final int numOfResults = results.size();\\r\\n  if (numOfResults == 0) {\\r\\n    DatanodeStorageInfo storageInfo = chooseLocalStorage(writer,\\r\\n        excludedNodes, blocksize, maxNodesPerRack, results, avoidStaleNodes,\\r\\n        storageTypes, true);\\r\\n\\r\\n    writer = (storageInfo != null) ? storageInfo.getDatanodeDescriptor()\\r\\n                                    : null;\\r\\n\\r\\n    if (--numOfReplicas == 0) {\\r\\n      return writer;\\r\\n    }\\r\\n  }\\r\\n  final DatanodeDescriptor dn0 = results.get(0).getDatanodeDescriptor();\\r\\n  if (numOfResults <= 1) {\\r\\n    chooseRemoteRack(1, dn0, excludedNodes, blocksize, maxNodesPerRack,\\r\\n        results, avoidStaleNodes, storageTypes);\\r\\n    if (--numOfReplicas == 0) {\\r\\n      return writer;\\r\\n    }\\r\\n  }\\r\\n  if (numOfResults <= 2) {\\r\\n    final DatanodeDescriptor dn1 = results.get(1).getDatanodeDescriptor();\\r\\n    if (clusterMap.isOnSameRack(dn0, dn1)) {\\r\\n      chooseRemoteRack(1, dn0, excludedNodes, blocksize, maxNodesPerRack,\\r\\n          results, avoidStaleNodes, storageTypes);\\r\\n    } else if (newBlock){\\r\\n      chooseLocalRack(dn1, excludedNodes, blocksize, maxNodesPerRack,\\r\\n          results, avoidStaleNodes, storageTypes);\\r\\n    } else {\\r\\n      chooseLocalRack(writer, excludedNodes, blocksize, maxNodesPerRack,\\r\\n          results, avoidStaleNodes, storageTypes);\\r\\n    }\\r\\n    if (--numOfReplicas == 0) {\\r\\n      return writer;\\r\\n    }\\r\\n  }\\r\\n  chooseRandom(numOfReplicas, NodeBase.ROOT, excludedNodes, blocksize,\\r\\n      maxNodesPerRack, results, avoidStaleNodes, storageTypes);\\r\\n  return writer;\\r\\n}\\r\\n```\\r\\n\\r\\n\u56de\u5230DataStreamer.nextBlockOutputStream\u65b9\u6cd5\uff0c\u5728\u8c03\u7528locateFollowingBlock\u540e\u5f97\u5230\u4e0a\u4f20\u8282\u70b9\u7684\u4f4d\u7f6e\u4fe1\u606f\u540e\uff0c\u63a5\u7740\u4ee5createBlockOutputStream\u65b9\u6cd5\u4e3a\u5165\u53e3\uff1anew Sender(out).writeBlock->Sender.send(out, Op.WRITE_BLOCK, proto.build()\u53d1\u9001\u6570\u636e\u3002\u5bf9\u5e94\u5730\uff0cDataXceiverServer\u7684run\u65b9\u6cd5\u6267\u884cDataXceiver\u7684run\u65b9\u6cd5\uff0c\u6839\u636e\u53d1\u9001\u7aef\u7684op\u7c7b\u578b\u8c03\u7528processOp\u8fdb\u884c\u5904\u7406\u3002\u7531\u4e8e\u53d1\u9001\u7aefop\u7c7b\u578b\u4e3aWRITE_BLOCK\uff0c\u8c03\u7528Receiver.opWriteBlock(DataInputStream in)\u65b9\u6cd5\uff0c\u7ee7\u800c\u8c03\u7528DataXceiver.writeBlock\u65b9\u6cd5\uff1a\u9996\u5148\u901a\u8fc7setCurrentBlockReceiver\u5199\u5757\u6587\u4ef6\uff0c\u7136\u540e\u5224\u65ad\u76ee\u6807\u8282\u70b9\u4e2a\u6570\u662f\u5426\u5927\u4e8e0\uff0c\u662f\u7684\u8bdd\u53c8\u7528new Sender(mirrorOut).writeBlock\u5199\u6570\u636e\uff08\u89e6\u53d1\u5199\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u94fe\u5f0f\u8c03\u7528\uff09\u3002\\r\\n\\r\\n\u56de\u5230DataStreamer\u7684run\u65b9\u6cd5\uff0c\u5728717\u884c\u8c03\u7528setPipeline\u540e\uff0c\u63a5\u7740\u8c03\u7528initDataStreaming\u65b9\u6cd5\uff0c\u901a\u8fc7ResponseProcessor\u7ebf\u7a0b\u5bf9\u8c61\u5904\u7406\u5199\u6210\u529f\u54cd\u5e94\u3002\\r\\n\\r\\n```java title=\\"ResponseProcessor.run(), Line 1179-1183\\"\\r\\nlastAckedSeqno = seqno;\\r\\npipelineRecoveryCount = 0;\\r\\nackQueue.removeFirst();\\r\\npacketSendTime.remove(seqno);\\r\\ndataQueue.notifyAll();\\r\\n```\\r\\n\\r\\n\u5728\u53d1\u9001packet\u540e\uff0c\u4e0d\u4f1a\u5c06\u8be5packet\u5220\u9664\u800c\u662f\u6dfb\u52a0\u5230ackQueue\u4e2d\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a\\r\\n\\r\\n```java title=\\"DataStreamer.run(), Line 753-767\\"\\r\\nsynchronized (dataQueue) {\\r\\n  // move packet from dataQueue to ackQueue\\r\\n  if (!one.isHeartbeatPacket()) {\\r\\n    if (scope != null) {\\r\\n      spanId = scope.getSpanId();\\r\\n      scope.detach();\\r\\n      one.setTraceScope(scope);\\r\\n    }\\r\\n    scope = null;\\r\\n    dataQueue.removeFirst();\\r\\n    ackQueue.addLast(one);\\r\\n    packetSendTime.put(one.getSeqno(), Time.monotonicNow());\\r\\n    dataQueue.notifyAll();\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n## Yarn\u5de5\u4f5c\u673a\u5236\\r\\n\\r\\n### \u4efb\u52a1\u63d0\u4ea4\\r\\n\\r\\nJob.waitForCompletion\u4e3a\u5165\u53e3\uff1aJob.submit->submitter.submitJobInternal->submitClient.submitJob->YARNRunner.submitJob\uff0c\u8be5\u65b9\u6cd5\u67092\u4e2a\u4e3b\u8981\u65b9\u6cd5\u8c03\u7528\uff1acreateApplicationSubmissionContext\u548csubmitApplication\u3002\u5148\u770b\u521b\u5efa\u5e94\u7528\u6267\u884c\u73af\u5883\u65b9\u6cd5\uff1a\u5b83\u4f1a\u8c03\u7528setupAMCommand\u65b9\u6cd5\u6784\u5efaApp master\u7684\u542f\u52a8\u547d\u4ee4\uff0c\u8be5\u65b9\u6cd5\u8bbe\u7f6e\u4e00\u5806java\u542f\u52a8\u53c2\u6570\u540e\uff0c\u8bbe\u7f6e\u542f\u52a8\u7c7b\u4e3a`org.apache.hadoop.mapreduce.v2.app.MRAppMaster`\uff0c\u5e76\u5c06\u6807\u51c6\u8f93\u51fa\u548c\u6807\u51c6\u9519\u8bef\u91cd\u5b9a\u5411\u5230\u5bf9\u5e94\u6587\u4ef6\u5939\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a\\r\\n\\r\\n```java title=\\"YARNRunner.java, Line 498-502\\"\\r\\nvargs.add(MRJobConfig.APPLICATION_MASTER_CLASS);\\r\\nvargs.add(\\"1>\\" + ApplicationConstants.LOG_DIR_EXPANSION_VAR +\\r\\n    Path.SEPARATOR + ApplicationConstants.STDOUT);\\r\\nvargs.add(\\"2>\\" + ApplicationConstants.LOG_DIR_EXPANSION_VAR +\\r\\n    Path.SEPARATOR + ApplicationConstants.STDERR);\\r\\n```\\r\\n\\r\\n\u5728\u521b\u5efa\u597d\u5e94\u7528\u63d0\u4ea4\u4e0a\u4e0b\u6587\u73af\u5883\u5bf9\u8c61appContext\u540e\uff0c\u63a5\u7740\u8c03\u7528submitApplication\u63d0\u4ea4\uff0c\u8be5\u65b9\u6cd5\u8fdb\u800c\u8c03\u7528YarnClinetImpl.submitApplication\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u53c8\u8c03\u7528ClientRMService.submitApplication\u65b9\u6cd5(\u5230\u4e86ResourceManager\u670d\u52a1)\uff0c\u5c06\u63d0\u4ea4\u4e0a\u4e0b\u6587\u4fe1\u606f\u63d2\u5165\u5230\u961f\u5217\u4e2d\u3002\\r\\n\\r\\n### MRAppMaster\u542f\u52a8\\r\\n\\r\\n\u5c06\u4efb\u52a1\u4fe1\u606f\u63d2\u5165\u5230\u961f\u5217\u540e\uff0c\u7531MRAppMaster\u6765\u83b7\u53d6\u961f\u5217\u4efb\u52a1\u5e76\u5b89\u6392\u6267\u884c\u3002\u4ee5MRAppMaster.main\u65b9\u6cd5\u4e3a\u5165\u53e3\uff1ainitAndStartAppMaster->init->serviceInit->createDispatcher\u521b\u5efa\u8c03\u5ea6\u5668\u3002\u5728init\u65b9\u6cd5\u540e\u8c03\u7528start\u65b9\u6cd5\u542f\u52a8\u670d\u52a1\uff1aserviceStart->startJobs->dispatcher.getEventHandler().handle(startJobEvent)->GenericEventHandler.eventQueue.put(event)\uff0c\u5c06\u4efb\u52a1\u63d0\u4ea4\u5230\u8fd0\u884c\u961f\u5217\u3002\\r\\n\\r\\n### YarnChild\u6267\u884c\u4efb\u52a1\\r\\n\\r\\nYarnChild\u662fMRAppMaster\u4e2d\u6267\u884c\u4efb\u52a1\u7684\u5c01\u88c5\uff0c\u4ee5\u5176main\u65b9\u6cd5\u4e3a\u5165\u53e3\uff1aTask.run->MapTask.run/ReduceTask.run\u3002\u4ee5MapTaskRun\u4e3a\u4f8b\uff0c\u8c03\u7528runNewMapper->mapper.run->\u81ea\u5b9a\u4e49Mapper.run\u3002"},{"id":"/2022/02/07/Learning-Hadoop3.x-04","metadata":{"permalink":"/blog/2022/02/07/Learning-Hadoop3.x-04","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2022-02-07-Learning-Hadoop3.x-04.md","source":"@site/blog/2022-02-07-Learning-Hadoop3.x-04.md","title":"Hadoop 3.x\u5b66\u4e60\u7b14\u8bb0(4)","description":"Hadoop 3.1.3\u5b66\u4e60\u7b14\u8bb0(4)","date":"2022-02-07T00:00:00.000Z","formattedDate":"February 7, 2022","tags":[{"label":"Hadoop","permalink":"/blog/tags/hadoop"},{"label":"BigData","permalink":"/blog/tags/big-data"}],"readingTime":7.805,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"Hadoop 3.x\u5b66\u4e60\u7b14\u8bb0(4)","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["Hadoop","BigData"],"description":"Hadoop 3.1.3\u5b66\u4e60\u7b14\u8bb0(4)","hide_table_of_contents":false},"prevItem":{"title":"Hadoop 3.x\u5b66\u4e60\u7b14\u8bb0(6)","permalink":"/blog/2022/02/10/Learning-Hadoop3.x-06"},"nextItem":{"title":"Hadoop 3.x\u5b66\u4e60\u7b14\u8bb0(3)","permalink":"/blog/2022/01/31/Learning-Hadoop3.x-03"}},"content":":pencil:Hadoop 3.1.3\u5b66\u4e60\u7b14\u8bb0\u7b2c4\u7bc7\uff1aYarn\u3002\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## Yarn\u7b80\u4ecb\\r\\n\\r\\nYarn\u662f\u4e00\u4e2a\u8d44\u6e90\u8c03\u5ea6\u5e73\u53f0\uff0c\u8d1f\u8d23\u4e3a\u8fd0\u7b97\u7a0b\u5e8f\u63d0\u4f9b\u670d\u52a1\u5668\u8fd0\u7b97\u8d44\u6e90\uff0c\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u64cd\u4f5c\u7cfb\u7edf\u5e73\u53f0\uff0c\u800cMapReduce\u7b49\u8fd0\u7b97\u7a0b\u5e8f\u5219\u76f8\u5f53\u4e8e\u8fd0\u884c\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u4e0a\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\\r\\n\\r\\n### \u57fa\u672c\u7ec4\u4ef6\\r\\n\\r\\n- ResourceManager(RM)\uff1a\\r\\n  - \u5904\u7406\u5ba2\u6237\u7aef\u8bf7\u6c42\uff1b\\r\\n  - \u76d1\u63a7NodeManager\\r\\n  - \u542f\u52a8\u6216\u76d1\u63a7ApplicationMaster\\r\\n- NodeManager(NM)\uff1a\\r\\n  - \u7ba1\u7406\u5355\u4e2a\u8282\u70b9\u8d44\u6e90\\r\\n  - \u5904\u7406\u6765\u81eaResourceManager\u7684\u547d\u4ee4\\r\\n  - \u5904\u7406\u6765\u81eaApplicationMaster\u7684\u547d\u4ee4\\r\\n- ApplicationMaster(AM)\uff1a\\r\\n  - \u4e3a\u5e94\u7528\u7a0b\u5e8f\u7533\u8bf7\u8d44\u6e90\u5e76\u5206\u914d\u4efb\u52a1\\r\\n  - \u4efb\u52a1\u76d1\u63a7\u4e0e\u5bb9\u9519\\r\\n- Container\uff1a\u8ba1\u7b97\u8d44\u6e90\u7684\u62bd\u8c61\uff0c\u5305\u62ec\u5185\u5b58\u3001CPU\u3001\u78c1\u76d8\u3001\u7f51\u7edc\u7b49\\r\\n\\r\\n### \u5de5\u4f5c\u6d41\u7a0b\\r\\n\\r\\n1. MapReduce\u7a0b\u5e8f\u5728\u5ba2\u6237\u7aef\u8282\u70b9\u88ab\u63d0\u4ea4\uff1b\\r\\n2. YarnRunner\u5411RM\u7533\u8bf7\u4e00\u4e2aApplication\uff1b\\r\\n3. RM\u5c06\u5e94\u7528\u7a0b\u5e8f\u7684\u8d44\u6e90\u8def\u5f84\u8fd4\u56de\u7ed9YarnRunner\uff1b\\r\\n4. MR\u7a0b\u5e8f\u5c06\u8fd0\u884c\u8d44\u6e90\u63d0\u4ea4\u5230HDFS\u4e0a\uff1b\\r\\n5. \u8d44\u6e90\u63d0\u4ea4\u5b8c\u6bd5\u540e\uff0c\u7533\u8bf7\u8fd0\u884cmrAppMaster\uff1b\\r\\n6. RM\u5c06\u7528\u6237\u7684\u8bf7\u6c42\u521d\u59cb\u5316\u6210\u4e00\u4e2aTask\uff1b\\r\\n7. \u5176\u4e2d\u4e00\u4e2aNM\u9886\u53d6\u5230Task\u4efb\u52a1\uff1b\\r\\n8. \u8be5NM\u521b\u5efacontainer\uff0c\u5e76\u4ea7\u751fMRAppmaster\uff1b\\r\\n9. Container\u4eceHDFS\u4e0a\u62f7\u8d1d\u8d44\u6e90\u5230\u672c\u5730\uff1b\\r\\n10. MRAppmaster\u5411RM\u7533\u8bf7\u8fd0\u884cMapTask\u8d44\u6e90\uff1b\\r\\n11. RM\u5c06\u8fd0\u884cMapTask\u4efb\u52a1\u5206\u914d\u7ed9\u53e6\u5916\u4e24\u4e2aNodeManager\uff0c\u53e6\u4e24\u4e2aNodeManager\u5206\u522b\u9886\u53d6\u4efb\u52a1\u5e76\u521b\u5efa\u5bb9\u5668\uff1b\\r\\n12. MR\u5411\u4e24\u4e2a\u63a5\u6536\u5230\u4efb\u52a1\u7684NodeManager\u53d1\u9001\u7a0b\u5e8f\u542f\u52a8\u811a\u672c\uff0c\u8fd9\u4e24\u4e2aNodeManager\u5206\u522b\u542f\u52a8MapTask\uff0cMapTask\u5bf9\u6570\u636e\u5206\u533a\u6392\u5e8f\uff1b\\r\\n13. MrAppMaster\u7b49\u5f85\u6240\u6709MapTask\u8fd0\u884c\u5b8c\u6bd5\u540e\uff0c\u5411RM\u7533\u8bf7\u5bb9\u5668\uff0c\u8fd0\u884cReduceTask\uff1b\\r\\n14. ReduceTask\u5411MapTask\u83b7\u53d6\u76f8\u5e94\u5206\u533a\u7684\u6570\u636e\uff1b\\r\\n15. \u7a0b\u5e8f\u8fd0\u884c\u5b8c\u6bd5\u540e\uff0cMR\u4f1a\u5411RM\u7533\u8bf7\u6ce8\u9500\u81ea\u5df1\u3002\\r\\n\\r\\n### \u8c03\u5ea6\u7b56\u7565\\r\\n\\r\\nHadoop\u4f5c\u4e1a\u8c03\u5ea6\u5668\u4e3b\u8981\u67093\u79cd\uff1aFIFO\u3001\u5bb9\u91cf\u8c03\u5ea6\u5668(Capacity Scheduler)\u548c\u516c\u5e73(Fair Scheduler)\u3002Apache Hadoop\u9ed8\u8ba4\u4f7f\u7528\u5bb9\u91cf\u8c03\u5ea6\u5668\uff0cCDH\u9ed8\u8ba4\u4f7f\u7528\u516c\u5e73\u8c03\u5ea6\u5668\uff0c\u914d\u7f6e\u53c2\u6570\u89c1yarn-default.xml\uff1a\\r\\n\\r\\n```xml\\r\\n<property>\\r\\n  <description>The class to use as the resource scheduler.</description>\\r\\n  <name>yarn.resourcemanager.scheduler.class</name>\\r\\n  <value>org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler</value>\\r\\n</property>\\r\\n```\\r\\n\\r\\n#### FIFO\\r\\n\\r\\n\u6309\u7167\u4efb\u52a1\u63d0\u4ea4\u5148\u540e\u987a\u5e8f\u4f9d\u6b21\u670d\u52a1\uff0c\u4f18\u70b9\u662f\u7b80\u5355\u6613\u61c2\uff0c\u7f3a\u70b9\u662f\u4e0d\u652f\u6301\u591a\u961f\u5217\uff0c\u751f\u4ea7\u73af\u5883\u5f88\u5c11\u4f7f\u7528\u3002\\r\\n\\r\\n#### \u5bb9\u91cf\u8c03\u5ea6\u5668\\r\\n\\r\\n\u7531Yahoo\u5f00\u53d1\uff0c\u5bb9\u91cf\u8c03\u5ea6\u5668\u7684\u7279\u70b9\u5982\u4e0b\uff1a\\r\\n\\r\\n1. \u591a\u961f\u5217\uff1a\u6bcf\u4e2a\u961f\u5217\u53ef\u914d\u7f6e\u4e00\u5b9a\u7684\u8d44\u6e90\u91cf\uff0c\u6bcf\u4e2a\u961f\u5217\u91c7\u7528FIFO\u8c03\u5ea6\u7b56\u7565\uff1b\\r\\n2. \u5bb9\u91cf\u4fdd\u8bc1\uff1a\u7ba1\u7406\u5458\u53ef\u4e3a\u6bcf\u4e2a\u961f\u5217\u8bbe\u7f6e\u8d44\u6e90\u6700\u4f4e\u4fdd\u8bc1\u548c\u8d44\u6e90\u4f7f\u7528\u4e0a\uff1b\\r\\n3. \u7075\u6d3b\u6027\uff1a\u5982\u679c\u4e00\u4e2a\u961f\u5217\u4e2d\u7684\u8d44\u6e90\u6709\u5269\u4f59\uff0c\u53ef\u4ee5\u6682\u65f6\u5171\u4eab\u7ed9\u90a3\u4e9b\u9700\u8981\u8d44\u6e90\u7684\u961f\u5217\uff0c\u800c\u4e00\u65e6\u8be5\u961f\u5217\u6709\u65b0\u7684\u5e94\u7528\uff0c\u7a0b\u5e8f\u63d0\u4ea4\uff0c\u5219\u5176\u4ed6\u961f\u5217\u501f\u8c03\u7684\u8d44\u6e90\u4f1a\u5f52\u8fd8\u7ed9\u8be5\u961f\u5217\uff1b\\r\\n4. \u591a\u79df\u6237\uff1a\u652f\u6301\u591a\u7528\u6237\u5171\u4eab\u96c6\u7fa4\u548c\u591a\u5e94\u7528\u7a0b\u5e8f\u540c\u65f6\u8fd0\u884c\u3002\u4e3a\u4e86\u9632\u6b62\u540c\u4e00\u4e2a\u7528\u6237\u7684\u4f5c\u4e1a\u72ec\u5360\u961f\u5217\u4e2d\u7684\u8d44\u6e90\uff0c\u8be5\u8c03\u5ea6\u5668\u4f1a\u5bf9\u540c\u4e00\u7528\u6237\u63d0\u4ea4\u7684\u4f5c\u4e1a\u6240\u5360\u8d44\u6e90\u91cf\u8fdb\u884c\u9650\u5b9a\u3002\\r\\n\\r\\n\u5bb9\u91cf\u8c03\u5ea6\u5668\u7684\u7b56\u7565\u5982\u4e0b\uff1a\\r\\n\\r\\n1. \u961f\u5217\u8d44\u6e90\u5206\u914d\uff1a\u4eceroot\u5f00\u59cb\u4f7f\u7528\u6df1\u5ea6\u4f18\u5148\u7b97\u6cd5\uff0c\u627e\u5230\u8d44\u6e90\u5360\u7528\u7387\u6700\u4f4e\u7684\u961f\u5217\u5206\u914d\uff1b\\r\\n2. \u4f5c\u4e1a\u8d44\u6e90\u5206\u914d\uff1a\u9ed8\u8ba4\u6309\u4f5c\u4e1a\u7684\u4f18\u5148\u7ea7\u3001\u63d0\u4ea4\u65f6\u95f4\u987a\u5e8f\u5206\u914d\uff1b\\r\\n3. \u5bb9\u5668\u8d44\u6e90\u5206\u914d\uff1a\u6309\u5bb9\u5668\u4f18\u5148\u7ea7\uff0c\u5982\u679c\u76f8\u540c\u6309\u6570\u636e\u672c\u5730\u6027\u539f\u5219\uff1a\u4efb\u52a1\u548c\u6570\u636e\u5728\u76f8\u540c\u8282\u70b9\u3001\u76f8\u540c\u673a\u67b6\u3001\u4e0d\u540c\u673a\u67b6\u3002\\r\\n\\r\\n#### \u516c\u5e73\u8c03\u5ea6\u5668\\r\\n\\r\\n\u540c\u961f\u5217\u7684\u6240\u6709\u4f5c\u4e1a\u5171\u4eab\u8d44\u6e90\uff0c\u6309\u65f6\u95f4\u83b7\u5f97\u516c\u5e73\u7684\u8d44\u6e90\u3002\u4e0e\u5bb9\u91cf\u8c03\u5ea6\u5668\u76f8\u6bd4\uff1a\\r\\n\\r\\n- \u76f8\u540c\u70b9\uff1a\\r\\n  - \u652f\u6301\u591a\u961f\u5217\uff1b\\r\\n  - \u5bb9\u91cf\u4fdd\u8bc1\uff0c\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u961f\u5217\u8bbe\u7f6e\u6700\u4f4e\u4fdd\u8bc1\u548c\u4e0a\u9650\uff1b\\r\\n  - \u7075\u6d3b\u6027\uff1a\u5176\u4ed6\u961f\u5217\u7684\u5269\u4f59\u8d44\u6e90\u53ef\u4ee5\u5171\u4eab\u7ed9\u5176\u4ed6\u961f\u5217\uff0c\u8be5\u961f\u5217\u6709\u4f5c\u4e1a\u63d0\u4ea4\u540e\u8d44\u6e90\u5f52\u8fd8\uff1b\\r\\n  - \u591a\u79df\u6237\uff1a\u652f\u6301\u591a\u7528\u6237\u5171\u4eab\u96c6\u7fa4\u548c\u591a\u5e94\u7528\u7a0b\u5e8f\u540c\u65f6\u8fd0\u884c\uff0c\u53ef\u9488\u5bf9\u540c\u4e00\u7528\u6237\u7684\u4f5c\u4e1a\u8d44\u6e90\u6682\u7528\u8fdb\u884c\u9650\u5236\u3002\\r\\n- \u4e0d\u540c\u70b9\uff1b\\r\\n  - \u6838\u5fc3\u8c03\u5ea6\u7b56\u7565\uff1a\u5bb9\u91cf\u8c03\u5ea6\u5668\u4f18\u5148\u9009\u62e9\u8d44\u6e90\u5229\u7528\u7387\u4f4e\u7684\u961f\u5217\u5b89\u6392\u4f5c\u4e1a\uff0c\u516c\u5e73\u8c03\u5ea6\u5668\u4f18\u9009\u9009\u62e9\u8d44\u6e90**\u7f3a\u989d**\u6bd4\u4f8b\u5927\u7684\u961f\u5217\u5b89\u6392\u4f5c\u4e1a\\r\\n  - \u961f\u5217\u8d44\u6e90\u5206\u914d\u7b56\u7565\uff1a\u5bb9\u91cf\u8c03\u5ea6\u5668\u652f\u6301FIFO\u548cDRF\uff0c\u516c\u5e73\u8c03\u5ea6\u5668\u652f\u6301FIFO\u3001FAIR\u3001DRF\u3002\\r\\n\\r\\n\u5176\u4e2d\uff0c\u7f3a\u989d\u6307\u67d0\u4e2a\u65f6\u523b\u4e00\u4e2a\u4f5c\u4e1a\u6309\u7167\u516c\u5e73\u5206\u914d\u7684\u8d44\u6e90\u548c\u5b9e\u9645\u83b7\u53d6\u8d44\u6e90\u7684\u5dee\u8ddd\u3002\u5f53\u4f7f\u7528FIFO\u7b56\u7565\u65f6\uff0c\u516c\u5e73\u8c03\u5ea6\u5668\u548c\u5bb9\u91cf\u8c03\u5ea6\u5668\u522b\u65e0\u5dee\u5f02\u3002FAIR\u7b56\u7565(\u9ed8\u8ba4)\u662f\u4e00\u79cd\u57fa\u4e8e\u6700\u5927\u6700\u5c0f\u516c\u5e73\u7b97\u6cd5\u5b9e\u73b0\u7684\u8d44\u6e90\u591a\u8def\u590d\u7528\u65b9\u5f0f\uff0c\u8d44\u6e90\u5206\u914d\u6d41\u7a0b\u4e0e\u5bb9\u91cf\u8c03\u5ea6\u5668\u4e00\u81f4\uff1a\u9009\u62e9\u961f\u5217\u3001\u9009\u62e9\u4f5c\u4e1a\u3001\u9009\u62e9\u5bb9\u5668\u3002\u6bcf\u6b65\u6309\u7167\u5982\u4e0b\u6d41\u7a0b\u5206\u914d\u8d44\u6e90\uff1a\\r\\n\\r\\n1. \u8ba1\u7b97\u5982\u4e0b\u53c2\u6570\uff1a\u5b9e\u9645\u6700\u5c0f\u8d44\u6e90\u4efd\u989dminshare = Min(\u8d44\u6e90\u9700\u6c42\u91cf, \u914d\u7f6e\u7684\u6700\u5c0f\u8d44\u6e90\u91cf)\uff0c\u662f\u5426\u9965\u997fisNeedy=\u8d44\u6e90\u4f7f\u7528\u91cf < minshare\uff0c\u8d44\u6e90\u5206\u914d\u6bd4minShareRatio = \u8d44\u6e90\u4f7f\u7528\u91cf / Max(mindshare, 1)\uff0c\u8d44\u6e90\u4f7f\u7528\u6743\u91cd\u6bd4useToWeightRatio = \u8d44\u6e90\u4f7f\u7528\u91cf / \u6743\u91cd\u3002\\r\\n2. \u5224\u65ad\u5bf9\u8c61\u9965\u997f\u72b6\u6001\uff0c\u4e0d\u4e00\u81f4\u7684\u9965\u997f\u4f18\u5148\uff1b\\r\\n3. \u9965\u997f\u72b6\u6001\u4e00\u81f4\uff0c\u8d44\u6e90\u5206\u914d\u6bd4\u5c0f\u8005\u4f18\u5148\uff1b\\r\\n4. \u8d44\u6e90\u5206\u914d\u6bd4\u76f8\u7b49\uff0c\u6309\u7167\u63d0\u4ea4\u987a\u5e8f\u4f18\u5148\u3002\\r\\n\\r\\nDRF(Dominant Resource Fairness)\uff1a\u4e4b\u524d\u63d0\u5230\u7684\u8d44\u6e90\u90fd\u662f\u5355\u4e00\u6807\u51c6\uff0c\u6bd4\u5982\u53ea\u8003\u8651\u5185\u5b58(Yarn\u9ed8\u8ba4)\uff0c\u4f46\u5b9e\u9645\u9700\u8981\u8003\u8651CPU\u3001\u7f51\u7edc\u5e26\u5bbd\u7b49\u5176\u4ed6\u56e0\u7d20\uff0c\u6b64\u65f6\u4f7f\u7528DRF\u7b56\u7565\u5bf9\u4e0d\u540c\u5e94\u7528\u8fdb\u884c\u4e0d\u540c\u8d44\u6e90\u7684\u4e00\u4e2a\u4e0d\u540c\u6bd4\u4f8b\u7684\u9650\u5236\u3002\\r\\n\\r\\n## Yarn\u547d\u4ee4\\r\\n\\r\\n\u9664\u4e86\u901a\u8fc7\u9875\u9762\u67e5\u770b\u5916\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u67e5\u770b\u7ba1\u7406Yarn\u4f5c\u4e1a\uff1a\\r\\n\\r\\n### \u4f5c\u4e1a\u67e5\u770b\\r\\n\\r\\n- `yarn application -list`\uff1a\u5217\u51fa\u6240\u6709\u4f5c\u4e1a\uff1b\\r\\n- `yarn application -list -appStates <state>`\uff1a\u6839\u636e\u72b6\u6001\u67e5\u770b\u4f5c\u4e1a\uff0c\u53ef\u9009\u72b6\u6001\u6709ALL\u3001NEW\u3001NEW_SAVING\u3001SUBMITTED\u3001ACCEPTED\u3001RUNNING\u3001FINISHED\u3001FAILED\u3001KILLED\uff1b\\r\\n\\r\\n### \u65e5\u5fd7\u67e5\u770b\\r\\n\\r\\n- `yarn logs -applicationId <id>`\uff1a\u67e5\u770b\u5e94\u7528\u65e5\u5fd7\uff1b\\r\\n- `yarn logs -applicationId <ApplicationId> -containerId <ContainerId>`\uff1a\u67e5\u770b\u67d0\u4e2a\u5bb9\u5668\u4e0a\u7684\u5e94\u7528\u65e5\u5fd7\u3002\\r\\n\\r\\n### \u5e94\u7528\u5c1d\u8bd5\u67e5\u770b\\r\\n\\r\\n- `yarn applicationattempt -list <ApplicationId>`\uff1a\u67e5\u770b\u5c1d\u8bd5\u5e94\u7528\u5217\u8868\uff1b\\r\\n- `yarn applicationattempt -status <ApplicationAttemptId>`\uff1a\u67e5\u770b\u5c1d\u8bd5\u5e94\u7528\u72b6\u6001\u3002\\r\\n\\r\\n### \u5bb9\u5668\u67e5\u770b\\r\\n\\r\\n- `yarn container -list <ApplicationAttemptId>`\uff1a\u5217\u51fa\u6240\u6709\u5bb9\u5668\uff1b\\r\\n- `yarn container -status <ContainerId>`\uff1a\u67e5\u770b\u5bb9\u5668\u72b6\u6001\u3002\\r\\n\\r\\n### \u8282\u70b9\u67e5\u770b\\r\\n\\r\\n- `yarn node -list -all`\uff1a\u5217\u51fa\u6240\u6709\u8282\u70b9\uff1b\\r\\n\\r\\n### \u66f4\u65b0\u961f\u5217\u914d\u7f6e\\r\\n\\r\\n- `yarn rmadmin -refreshQueues`\uff1a\u66f4\u65b0\u52a0\u8f7d\u961f\u5217\u914d\u7f6e\uff1b\\r\\n\\r\\n### \u961f\u5217\u67e5\u770b\\r\\n\\r\\n- `yarn queue -status <Queuename>`\u3002"},{"id":"/2022/01/31/Learning-Hadoop3.x-03","metadata":{"permalink":"/blog/2022/01/31/Learning-Hadoop3.x-03","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2022-01-31-Learning-Hadoop3.x-03.md","source":"@site/blog/2022-01-31-Learning-Hadoop3.x-03.md","title":"Hadoop 3.x\u5b66\u4e60\u7b14\u8bb0(3)","description":"Hadoop 3.1.3\u5b66\u4e60\u7b14\u8bb0(3)","date":"2022-01-31T00:00:00.000Z","formattedDate":"January 31, 2022","tags":[{"label":"Hadoop","permalink":"/blog/tags/hadoop"},{"label":"BigData","permalink":"/blog/tags/big-data"}],"readingTime":18.95,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"Hadoop 3.x\u5b66\u4e60\u7b14\u8bb0(3)","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["Hadoop","BigData"],"description":"Hadoop 3.1.3\u5b66\u4e60\u7b14\u8bb0(3)","hide_table_of_contents":false},"prevItem":{"title":"Hadoop 3.x\u5b66\u4e60\u7b14\u8bb0(4)","permalink":"/blog/2022/02/07/Learning-Hadoop3.x-04"},"nextItem":{"title":"Hadoop 3.x\u5b66\u4e60\u7b14\u8bb0(2)","permalink":"/blog/2022/01/30/Learning-Hadoop3.x-02"}},"content":":pencil:Hadoop 3.1.3\u5b66\u4e60\u7b14\u8bb0\u7b2c3\u7bc7\uff1aMapReduce\u3002\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## MapReduce\u7b80\u4ecb\\r\\n\\r\\nMapReduce\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u8fd0\u7b97\u7a0b\u5e8f\u7684\u7f16\u7a0b\u6846\u67b6\uff0c\u6838\u5fc3\u529f\u80fd\u662f\u5c06\u7528\u6237\u7f16\u5199\u7684\u4e1a\u52a1\u903b\u8f91\u4ee3\u7801\u548c\u81ea\u5e26\u7ec4\u4ef6\u6574\u5408\u6210\u5b8c\u6574\u7684\u5206\u5e03\u5f0f\u8fd0\u7b97\u7a0b\u5e8f\uff0c\u7136\u540e\u5728Hadoop\u96c6\u7fa4\u4e0a\u5e76\u53d1\u8fd0\u884c\u3002\\r\\n\\r\\n\u4f18\u70b9:smile:\uff1a\\r\\n\\r\\n1. \u6613\u4e8e\u7f16\u7a0b\uff0c\u7528\u6237\u53ea\u9700\u8981\u5173\u7cfb\u4e1a\u52a1\u903b\u8f91\uff1b\\r\\n2. \u6269\u5c55\u6027\u597d\uff0c\u53ef\u4ee5\u52a8\u6001\u589e\u52a0\u670d\u52a1\u5668\uff1b\\r\\n3. \u9ad8\u5bb9\u9519\u6027\uff0c\u8ba1\u7b97\u8282\u70b9\u6302\u70b9\u53ef\u4ee5\u5c06\u4efb\u52a1\u8f6c\u79fb\u5230\u5176\u4ed6\u8282\u70b9\uff1b\\r\\n4. \u9002\u5408\u6d77\u91cf\u6570\u636e\u8ba1\u7b97(TB/PB)\u3002\\r\\n\\r\\n\u7f3a\u70b9:angry:\uff1a\\r\\n\\r\\n1. \u4e0d\u9002\u5408\u5b9e\u65f6\u8ba1\u7b97\uff1b\\r\\n2. \u4e0d\u9002\u5408\u6d41\u5f0f\u8ba1\u7b97\uff1b\\r\\n3. \u4e0d\u9002\u5408DAG\u6709\u5411\u65e0\u73af\u56fe\u8ba1\u7b97\u3002\\r\\n\\r\\nMapReduce\u7a0b\u5e8f\u5206\u4e3a2\u4e2a\u9636\u6bb5\uff1aMap\u9636\u6bb5\u548cReduce\u9636\u6bb5\u3002Map\u9636\u6bb5\u7684MapTask\u5e76\u53d1\u8fd0\u884c\u4e92\u4e0d\u76f8\u5e72\uff0cReduce\u9636\u6bb5\u7684ReduceTask\u4e5f\u4e92\u4e0d\u76f8\u5173\uff0c\u4f46\u4f9d\u8d56\u4e8eMapTask\u7684\u8f93\u51fa\u3002MapReduce\u7a0b\u5e8f\u53ea\u80fd\u5305\u542b\u4e00\u4e2aMap\u9636\u6bb5\u548c\u4e00\u4e2aReduce\u9636\u6bb5\uff0c\u5982\u679c\u4e1a\u52a1\u903b\u8f91\u975e\u5e38\u590d\u6742\uff0c\u90a3\u4e48\u53ea\u80fd\u591a\u4e2aMapReduce\u7a0b\u5e8f\u4e32\u884c\u6267\u884c\u3002\\r\\n\\r\\nMR\u7a0b\u5e8f\u7f16\u5199\u5206\u4e3a3\u90e8\u5206\uff1aMapper\u3001Reducer\u548cDriver\u3002\\r\\n\\r\\n### Mapper\u7c7b\\r\\n\\r\\n1. \u81ea\u5b9a\u4e49\u7c7b\u7ee7\u627f`org.apache.hadoop.mapreduce.Mapper`\u7c7b\uff1b\\r\\n2. \u5b9a\u4e49\u8f93\u5165K-V\u6cdb\u578b\uff0c\u5373\u6cdb\u578b\u53c2\u6570\u5217\u8868\u7684\u7b2c1\u30012\u4e2a\u53c2\u6570\uff1b\\r\\n3. \u5b9a\u4e49\u8f93\u51faK-V\u6cdb\u578b\uff0c\u5373\u6cdb\u578b\u5217\u8868\u7684\u7b2c3\u30014\u4e2a\u53c2\u6570\uff1b\\r\\n4. map\u65b9\u6cd5\u4e2d\u5b9e\u73b0\u4e1a\u52a1\u903b\u8f91\uff1b\\r\\n5. **map()\u65b9\u6cd5\uff08MapTask\u8fdb\u7a0b\uff09\u5bf9\u6bcf\u4e00\u4e2aK-V\u5bf9\u8c03\u7528\u4e00\u6b21**\u3002\\r\\n\\r\\n```java title=WordCountMapper.java\\r\\npublic class WordCountMapper extends Mapper<LongWritable, Text, Text, IntWritable> {\\r\\n\\r\\n    // \u51cf\u5c11\u5bf9\u8c61\u521b\u5efa\u6b21\u6570\uff0c\u4e0d\u8981\u653e\u5230map\u91cc\u9762\\r\\n    private Text outK = new Text();\\r\\n    private IntWritable outV = new IntWritable(1);\\r\\n\\r\\n    @Override\\r\\n    protected void map(LongWritable key, Text value, Context context) throws IOException, InterruptedException {\\r\\n        // 1. \u83b7\u53d6\u4e00\u884c\\r\\n        String line = value.toString();\\r\\n        // 2. \u5207\u5206\\r\\n        String[] words = line.split(\\" \\");\\r\\n        // 3. \u5faa\u73af\u5199\u51fa\\r\\n        for (String word : words) {\\r\\n            outK.set(word);\\r\\n            context.write(outK, outV);\\r\\n        }\\r\\n    }\\r\\n\\r\\n}\\r\\n```\\r\\n\\r\\n### Reducer\u7c7b\\r\\n\\r\\n1. \u81ea\u5b9a\u4e49\u7c7b\u7ee7\u627f`org.apache.hadoop.mapreduce.Reducer`\u7c7b\uff1b\\r\\n2. \u8f93\u5165K-V\u6cdb\u578b\u662f\u5bf9\u5e94Mapper\u7684\u8f93\u51faK-V\u6cdb\u578b\uff1b\\r\\n3. reduce\u65b9\u6cd5\u5b9e\u73b0\u4e1a\u52a1\u903b\u8f91\uff1b\\r\\n4. **ReduceTask\u8fdb\u7a0b\u5bf9\u6bcf\u4e00\u7ec4\u76f8\u540ckey\u7684K-V\u7ec4\u8c03\u7528\u4e00\u6b21reduce()\u65b9\u6cd5**\u3002\\r\\n\\r\\n```java title=WordCountReducer.java\\r\\npublic class WordCountReducer extends Reducer<Text, IntWritable, Text, IntWritable> {\\r\\n\\r\\n    private IntWritable outV = new IntWritable();\\r\\n\\r\\n    @Override\\r\\n    protected void reduce(Text key, Iterable<IntWritable> values, Context context) throws IOException,\\r\\n        InterruptedException {\\r\\n        int sum = 0;\\r\\n        for (IntWritable value : values) {\\r\\n            sum += value.get();\\r\\n        }\\r\\n        outV.set(sum);\\r\\n        context.write(key, outV);\\r\\n    }\\r\\n    \\r\\n}\\r\\n```\\r\\n\\r\\n### Driver\u7c7b\\r\\n\\r\\n\u76f8\u5f53\u4e8eYARN\u96c6\u7fa4\u7684\u5ba2\u6237\u7aef\uff0c\u7528\u4e8e\u63d0\u4ea4MR\u4efb\u52a1\u5230YARN\u96c6\u7fa4\u3002\\r\\n\\r\\n```java\\r\\npublic class WordCountDriver {\\r\\n    public static void main(String[] args) throws IOException, ClassNotFoundException, InterruptedException {\\r\\n        // 1. \u83b7\u53d6Job\\r\\n        Configuration conf = new Configuration();\\r\\n        Job job = Job.getInstance(conf);\\r\\n        // 2. \u8bbe\u7f6ejar\u8def\u5f84\\r\\n        job.setJarByClass(WordCountDriver.class);\\r\\n        // 3. \u5173\u8054mapper\u548creducer\\r\\n        job.setMapperClass(WordCountMapper.class);\\r\\n        job.setReducerClass(WordCountReducer.class);\\r\\n        // 4. \u8bbe\u7f6emapper\u8f93\u51faKV\u7c7b\u578b\\r\\n        job.setMapOutputKeyClass(Text.class);\\r\\n        job.setMapOutputValueClass(IntWritable.class);\\r\\n        // 5. \u8bbe\u7f6e\u6700\u7ec8\u8f93\u51fa\u7684KV\u7c7b\u578b\\r\\n        job.setOutputKeyClass(Text.class);\\r\\n        job.setOutputValueClass(IntWritable.class);\\r\\n        // 6. \u8bbe\u7f6e\u8f93\u5165\u8f93\u51fa\u8def\u5f84\\r\\n        FileInputFormat.setInputPaths(job, new Path(\\"wcinput\\\\\\\\words.txt\\"));\\r\\n        FileOutputFormat.setOutputPath(job, new Path(\\"wcoutput\\"));\\r\\n        // 7. \u63d0\u4ea4Job\\r\\n        boolean result = job.waitForCompletion(true);\\r\\n        System.exit(result ? 0 : 1);\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n:::caution \u6ce8\u610f\\r\\n\\r\\n1. \u6ce8\u610f\u5bfc\u5165org.apache.hadoop.mapreduce.\\\\*\u800c\u4e0d\u662forg.apache.hadoop.mapred.*\uff0c\u524d\u8005\u662fHadoop 2.x/3.x\u4f7f\u7528\uff0c\u540e\u8005\u662fHadoop 1.x\uff1b\\r\\n2. WordCountDriver\u4e2d\u8bbe\u7f6e\u8f93\u51faKV\u7c7b\u578b\u4ee3\u7801\u5199\u9519\uff0c\u5bfc\u81f4\u7c7b\u578b\u4e0d\u4e00\u81f4\u62a5\u9519\u3002\\r\\n:::\\r\\n\\r\\n## \u5e8f\u5217\u5316\\r\\n\\r\\n\u5e8f\u5217\u5316\u662f\u5c06\u5185\u5b58\u4e2d\u5bf9\u8c61\u8f6c\u4e3a\u5b57\u8282\u5e8f\u5217\u4ee5\u4fbf\u4e8e\u6301\u4e45\u5316\u548c\u7f51\u7edc\u4f20\u8f93\u7684\u8fc7\u7a0b\uff0c\u53cd\u5e8f\u5217\u5316\u662f\u5c06\u5b57\u8282\u5e8f\u5217\u8f6c\u4e3a\u5185\u5b58\u4e2d\u5bf9\u8c61\u7684\u8fc7\u7a0b\u3002Java\u5e8f\u5217\u5316\u673a\u5236(Serializable)\u8fc7\u4e8e\u91cd\u91cf\uff0c\u9644\u5e26\u6821\u9a8c\u4fe1\u606f\u3001Header\u3001\u7ee7\u627f\u4f53\u7cfb\u7b49\uff0c\u4e0d\u4fbf\u4e8e\u7f51\u7edc\u4e2d\u9ad8\u6548\u4f20\u8f93\uff0c\u56e0\u6b64Hadoop\u81ea\u5b9a\u4e49\u4e86\u5e8f\u5217\u5316\u673a\u5236(Writable)\uff0c\u5177\u6709\u4ee5\u4e0b\u7279\u6027\uff1a\\r\\n\\r\\n1. \u7d27\u51d1\uff1a\u9ad8\u6548\u4f7f\u7528\u5b58\u50a8\u7a7a\u95f4\uff1b\\r\\n2. \u5feb\u901f\uff1a\u8bfb\u5199\u6570\u636e\u5f00\u9500\u5c0f\uff1b\\r\\n3. \u4e92\u64cd\u4f5c\uff1a\u652f\u6301\u591a\u8bed\u8a00\u4ea4\u4e92\u3002\\r\\n\\r\\n\u5bf9\u4e8eJava\u4e2d\u7684\u57fa\u672c\u7c7b\u578b\uff0cHadoop\u63d0\u4f9b\u5982\u4e0b\u5bf9\u5e94\u5e8f\u5217\u5316\u7c7b\uff1a\\r\\n\\r\\n| Java\u7c7b\u578b | Hadoop Writable\u7c7b\u578b |\\r\\n| -------- | ------------------- |\\r\\n| Boolean  | BooleanWritable     |\\r\\n| Byte     | ByteWritable        |\\r\\n| Int      | IntWritable         |\\r\\n| Float    | FloatWritable       |\\r\\n| Long     | LongWritable        |\\r\\n| Double   | DoubleWritable      |\\r\\n| String   | Text                |\\r\\n| Map      | MapWritable         |\\r\\n| Array    | ArrayWritable       |\\r\\n| Null     | NullWritable        |\\r\\n\\r\\n\u6784\u5efa\u7b26\u5408Hadoop\u5e8f\u5217\u5316\u673a\u5236\u7684Bean\u7c7b\u9700\u8981\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\uff1a\\r\\n\\r\\n1. \u5b9e\u73b0Writable\u63a5\u53e3\uff1b\\r\\n2. \u63d0\u4f9b\u4e00\u4e2a\u7a7a\u53c2\u6784\u9020\u5668(\u5e8f\u5217\u5316\u53cd\u5c04\u65f6\u7528)\uff1b\\r\\n3. \u91cd\u5199write\u548creadFields\u65b9\u6cd5\uff0c**\u6ce8\u610f\u5b57\u6bb5\u8bfb\u5199\u987a\u5e8f\u4e00\u81f4**\uff1b\\r\\n4. **\u5f53Bean\u7c7b\u4f5c\u4e3aKey\u4f7f\u7528\u65f6\u8fd8\u9700\u8981\u5b9e\u73b0Comparable\u63a5\u53e3**(Shuffle\u8fc7\u7a0b\u4f7f\u7528)\uff1b\\r\\n5. \u5f53\u9700\u8981\u5e8f\u5217\u5316\u5230\u6587\u4ef6\u65f6\u9700\u8981\u91cd\u5199toString\u65b9\u6cd5\u3002\\r\\n\\r\\n## MapReduce\u6846\u67b6\\r\\n\\r\\n\u5982\u4e0b\u56fe\u6240\u793a\uff0cMR\u6846\u67b6\u5305\u542b4\u4e2a\u7ec4\u4ef6\uff1aInputFormat\u3001Mapper\u3001Reducer\u548cOutputFormat\u3002MapReduce\u7a0b\u5e8f\u6267\u884c\u6d41\u7a0b\u4e3a\uff1a\u7531InputFormat\u5c06\u8f93\u5165\u6570\u636e\u5206\u4e3a\u5207\u7247(Split)\uff0cMapper\u8c03\u7528map\u65b9\u6cd5\u5904\u7406\u6bcf\u4e2a\u5207\u7247\u4e2d\u6570\u636e\uff0c\u901a\u8fc7Shuffle\u5c06\u5904\u7406\u540e\u7ed3\u679c\u4ea4\u7ed9Reducer\uff0c\u5b83\u53c8\u8c03\u7528reduce\u65b9\u6cd5\u5408\u5e76\u5207\u7247\u7ed3\u679c\uff0c\u6700\u540e\u901a\u8fc7OutputFormat\u5c06\u5408\u5e76\u7ed3\u679c\u8f93\u51fa\u3002\\r\\n\\r\\n### Job\u63d0\u4ea4\u6d41\u7a0b\\r\\n\\r\\n\u5728WordCountDriver\u4e2d\u8c03\u7528waitForCompletion\u65b9\u6cd5\u6765\u63d0\u4ea4\u4f5c\u4e1a\u5e76\u83b7\u53d6\u7ed3\u679c\uff0c\u8be5\u65b9\u6cd5\u8c03\u7528\u6d41\u7a0b\u5982\u4e0b\uff1a\\r\\n\\r\\n1. \u8c03\u7528submit\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u6d41\u7a0b\u5982\u4e0b\uff1a\\r\\n    1. \u8c03\u7528ensureState\u65b9\u6cd5\u5224\u65ad\u5f53\u524d\u63d0\u4ea4\u72b6\u6001\uff0c\u5fc5\u987b\u662fJobState.DEFINE\uff1b\\r\\n    2. \u8c03\u7528setUseNewAPI\u65b9\u6cd5\u5904\u7406\u65b0\u8001mapreduce API\u7684\u517c\u5bb9\u6027\uff1b\\r\\n    3. \u8c03\u7528connect\u65b9\u6cd5\u521b\u5efaCluster\u5bf9\u8c61\uff0c\u8be5\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u8c03\u7528initialize\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u53c8\u4f9d\u6b21\u904d\u5386YarnClientProtocolProvider\u548cLocalClientProtocolProvider\uff0c\u786e\u5b9a\u5ba2\u6237\u7aef\u4e3aLocalJobRunner\uff1b\\r\\n    4. \u8c03\u7528submitJobInternal\u65b9\u6cd5\u3002\\r\\n\\r\\n2. \u5c55\u5f00\u5206\u6790submitJobInternal\u65b9\u6cd5\u6d41\u7a0b\uff1a\\r\\n    1. \u8c03\u7528checkSpecs\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u8c03\u7528OutputFormat\u7684checkOutputSpecs\u65b9\u6cd5\u68c0\u67e5\u8f93\u51fa\u914d\u7f6e(**\u5bf9\u4e8eFileOutputFormat\u6765\u8bf4\u5b83\u68c0\u67e5\u8f93\u51fa\u8def\u5f84\u4e0d\u80fd\u4e3a\u7a7a\u5e76\u4e14\u4e0d\u80fd\u5df2\u7ecf\u5b58\u5728**)\uff1b\\r\\n    2. \u8c03\u7528JobSubmissionFiles.getStagingDir()\u65b9\u6cd5\u751f\u6210\u4e00\u4e2astage\u6587\u4ef6\u5939\uff1b\\r\\n    3. \u8c03\u7528ClientProtocol.getNewJobID()\u751f\u6210jobId\uff1b\\r\\n    4. stage\u8def\u5f84\u548cjobId\u7ec4\u6210\u8def\u5f84submitJobDir(\u4f8b\u5982/tmp/hadoop/mapred/staging/xiaok1378532364/.staging/job_local1378532364_0001)\uff1b\\r\\n    5. \u901a\u8fc7\u8c03\u7528\u94fecopyAndConfigureFiles->uploadResources->uploadResourcesInternal\u65b9\u6cd5\uff0c\u8fdb\u884c\u751f\u6210submitJobDir\u6587\u4ef6\u5939\uff0c\u5c06\u7a0b\u5e8fjar\u5305\u4e0a\u4f20\u5230\u96c6\u7fa4(uploadJobJar)\u7b49\u64cd\u4f5c\uff1b\\r\\n    6. \u8c03\u7528InputFormat\u7684writeSplits\u65b9\u6cd5\u5f97\u5230\u5207\u7247\u6570maps\uff0c\u5728submitJobDir\u4e0b\u751f\u6210\u5207\u7247\u4fe1\u606f\u6587\u4ef6(`.job.split.crc`\u3001`.job.splitmetainfo.crc`\u3001`job.split`\u3001`job.splitmetainfo`)\uff0c\u968f\u540e\u5c06\u5207\u7247\u6570\u8bbe\u7f6e\u5230Configuration\u4e2d\uff1b\\r\\n    7. \u8c03\u7528writeConf\u65b9\u6cd5\uff0c\u5728submitJobDir\u4e0b\u751f\u6210`job.xml`(\u5305\u542b\u672c\u6b21\u4f5c\u4e1a\u6267\u884c\u6240\u6709\u7684\u914d\u7f6e\u4fe1\u606f)\u548c`.job.xml.crc`\uff1b\\r\\n    8. \u8c03\u7528ClientProtocol.submitJob\u65b9\u6cd5\u63d0\u4ea4\u4f5c\u4e1a\uff1b\\r\\n\\r\\n3. \u5c06state\u8bbe\u7f6e\u4e3aJobState.RUNNING\uff0c\u56de\u5230waitForCompletion\uff1b\\r\\n4. \u6700\u540e\u8fd4\u56deisSuccessful()\u65b9\u6cd5\u7ed3\u679c\u3002\\r\\n\\r\\n### FileInputFormat\u5207\u7247\\r\\n\\r\\nwriteSplits\u65b9\u6cd5\u6839\u636e\u662f\u5426\u4f7f\u7528\u65b0MapReduce API\u9009\u62e9\u8c03\u7528writeNewSplits\u65b9\u6cd5\u6216\u8005writeOldSplits\uff0c\u8fd9\u91cc\u5206\u6790writeNewSplits\u4ee3\u7801\uff0c\u5b83\u8c03\u7528InputFormat\u7684getSplits\u62bd\u8c61\u65b9\u6cd5\u3002\u62bd\u8c61\u7c7bInputFormat\u7684\u5404\u4e2a\u5b50\u7c7bxxxInputFormat\u4f1a\u5b9e\u73b0getSplits\u65b9\u6cd5\uff0c\u4ee5FileInputFormat\u7684getSplits\u65b9\u6cd5\u4e3a\u4f8b\u5206\u6790\u5982\u4e0b\uff1a\\r\\n\\r\\n1. \u83b7\u5f97minSize=1\uff0cmaxSize=Long.MAX_VALUE\uff1b\\r\\n2. \u5faa\u73af\u904d\u5386\u8f93\u5165\u8def\u5f84\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u6267\u884c\u6b65\u9aa43-6\uff1b\\r\\n3. \u7531isSplitable\u65b9\u6cd5\u5224\u65ad\u8be5\u6587\u4ef6\u662f\u5426\u53ef\u5207\u7247\uff0cFileInputFormat\u9ed8\u8ba4\u4e3atrue\uff1b\\r\\n4. \u83b7\u53d6\u5757\u5927\u5c0fblockSize\uff0c\u9ed8\u8ba4\u662f33554432(\u672c\u5730\u8c03\u8bd5\u4e3a32MB)\uff1b\\r\\n5. \u8ba1\u7b97\u5207\u7247\u5927\u5c0fsplitSize=Math.max(minSize, Math.min(maxSize, blockSize))\uff0c\u56e0\u6b64\u9ed8\u8ba4\u5207\u7247\u5927\u5c0f\u5c31\u662f\u5757\u5927\u5c0f\uff1b\\r\\n6. while\u5faa\u73af\u751f\u6210\u5207\u7247\u4fe1\u606fInputSplit\u5217\u8868\uff0c\u6ce8\u610f\u53ea\u6709\u5269\u4f59\u957f\u5ea6/splitSize\u5927\u4e8eSPLIT_SLOP(\u9ed8\u8ba40.1)\u65f6\u624d\u4f1a\u5207\u7247\u3002\\r\\n\\r\\n\u63a5\u7740\u8c03\u7528JobSplitWriter.createSplitFiles\u5728subJobDir\u4e2d\u751f\u6210\u5207\u7247\u89c4\u5212\u6587\u4ef6\uff0c\u5c06\u5176\u63d0\u4ea4\u5230YARN\u4e0a\u540e\uff0cMrAppMaster\u6839\u636e\u5207\u7247\u89c4\u5212\u6587\u4ef6\u6765\u8ba1\u7b97MapTask\u4e2a\u6570\u3002\\r\\n\\r\\n### TextInputFormat\u548cCombineFileInputFormat\\r\\n\\r\\nFileInputFormat\u62bd\u8c61\u7c7b\u4e0b\u9488\u5bf9\u4e0d\u540c\u4f7f\u7528\u573a\u666f\u6d3e\u751f\u4e86NLineInputFormat\u3001TextInputFormat\u3001CombineFileInputFormat\u3001KeyValueTextInputFormat\u7b49\u5b50\u7c7b\uff0c\u672c\u8282\u4ecb\u7ecd\u5e38\u7528\u7684TextInputFormat\u548cCombineFileInputFormat\u3002\\r\\n\\r\\nTextInputFormat\u662fFileInputFormat\u7684\u9ed8\u8ba4\u5b9e\u73b0\u7c7b\uff0c\u6e90\u7801\u5982\u4e0b\uff1a\\r\\n\\r\\n```java\\r\\npublic class TextInputFormat extends FileInputFormat<LongWritable, Text> {\\r\\n\\r\\n  @Override\\r\\n  public RecordReader<LongWritable, Text> \\r\\n    createRecordReader(InputSplit split,\\r\\n                       TaskAttemptContext context) {\\r\\n    String delimiter = context.getConfiguration().get(\\r\\n        \\"textinputformat.record.delimiter\\");\\r\\n    byte[] recordDelimiterBytes = null;\\r\\n    if (null != delimiter)\\r\\n      recordDelimiterBytes = delimiter.getBytes(Charsets.UTF_8);\\r\\n    return new LineRecordReader(recordDelimiterBytes);\\r\\n  }\\r\\n\\r\\n  @Override\\r\\n  protected boolean isSplitable(JobContext context, Path file) {\\r\\n    final CompressionCodec codec =\\r\\n      new CompressionCodecFactory(context.getConfiguration()).getCodec(file);\\r\\n    if (null == codec) {\\r\\n      return true;\\r\\n    }\\r\\n    return codec instanceof SplittableCompressionCodec;\\r\\n  }\\r\\n\\r\\n}\\r\\n```\\r\\n\\r\\nTextInputFormat\u5207\u7247\u6309\u7167\u6587\u4ef6\u4e00\u4e2a\u4e00\u4e2a\u6765\uff0c\u4e0d\u7ba1\u6587\u4ef6\u6709\u591a\u5c0f\u90fd\u81f3\u5c11\u662f\u4e00\u4e2a\u5207\u7247\uff0c\u5bf9\u4e8e\u5927\u91cf\u5c0f\u6587\u4ef6\u800c\u8a00\u8fd9\u56de\u4ea7\u751f\u5927\u91cfMapTask\u964d\u4f4e\u5904\u7406\u6548\u7387\u3002\u800cCombineFileInputFormat\u7528\u4e8e\u5904\u7406\u8fd9\u79cd\u5927\u91cf\u5c0f\u6587\u4ef6\u7684\u60c5\u51b5\uff0c\u901a\u8fc7CombineTextInputFormat.setMaxInputSplitSize\u8bbe\u7f6e\u865a\u62df\u5b58\u50a8\u5207\u7247\u5927\u5c0fmaxInputSplitSize\uff0c\u5e76\u6309\u7167\u5982\u4e0b\u8fc7\u7a0b\u5207\u7247\uff1a\\r\\n\\r\\n1. \u5faa\u73af\u904d\u5386\u8f93\u5165\u6587\u4ef6\uff0c\u5f97\u5230\u6587\u4ef6\u5927\u5c0ffileSize\uff1b\\r\\n2. fileSize < maxInputSplitSize\uff0c\u903b\u8f91\u4e0a\u5212\u5206\u4e3a\u4e00\u5757\u865a\u62df\u5b58\u50a8\uff1b\\r\\n3. 2 * maxInputSplitSize < fileSize\uff0c\u4ee5maxInputSplitSize\u5207\u5206\u4e00\u5757\uff1b\\r\\n4. maxInputSplitSize < fileSize <  2 * maxInputSplitSize\uff0c\u5e73\u5747\u5206\u62102\u5757\uff1b\\r\\n5. \u904d\u5386\u6240\u6709\u865a\u62df\u5b58\u50a8\u5757\uff0c\u5224\u65ad\u5927\u5c0fvirtBlockSize\u662f\u5426\u5927\u4e8emaxInputSplitSize\\r\\n6. virtBlockSize\u5927\u4e8e\u7b49\u4e8emaxInputSplitSize\uff0c\u5f62\u6210\u4e00\u4e2a\u5207\u7247\uff1b\\r\\n7. virtBlockSize\u5c0f\u4e8emaxInputSplitSize\uff0c\u4e0e\u4e0b\u4e00\u4e2a\u865a\u62df\u5b58\u50a8\u5757\u5408\u5e76\u5f62\u6210\u4e00\u4e2a\u5207\u7247\u3002\\r\\n\\r\\n### Shuffle\\r\\n\\r\\nmap\u65b9\u6cd5\u4e4b\u540ereduce\u65b9\u6cd5\u4e4b\u524d\u7684\u6570\u636e\u5904\u7406\u8fc7\u7a0b\uff0c\u5305\u542b\u5206\u533a\u3001\u6392\u5e8f\u3001Combiner\u7b49\u64cd\u4f5c\u3002\\r\\n\\r\\n#### \u5206\u533a\u7b56\u7565\\r\\n\\r\\n\u5982\u4e0b\u4ee3\u7801\u6240\u793a\uff0c\u5f53\u672a\u901a\u8fc7`Job.setNumReduceTasks(int tasks)`\u8bbe\u7f6e\u4efb\u52a1\u6570\u91cf\u65f6\uff0c\u9ed8\u8ba4partitions\u4e3a1\uff0c\u6b64\u65f6getPartition\u8fd4\u56de0\uff0c\u5373\u53ea\u6709\u4e00\u4e2a\u5206\u533a\u3002\\r\\n\\r\\n```java\\r\\nNewOutputCollector(org.apache.hadoop.mapreduce.JobContext jobContext,\\r\\n                       JobConf job,\\r\\n                       TaskUmbilicalProtocol umbilical,\\r\\n                       TaskReporter reporter\\r\\n                       ) throws IOException, ClassNotFoundException {\\r\\n  collector = createSortingCollector(job, reporter);\\r\\n  partitions = jobContext.getNumReduceTasks();\\r\\n  if (partitions > 1) {\\r\\n    partitioner = (org.apache.hadoop.mapreduce.Partitioner<K,V>)\\r\\n      ReflectionUtils.newInstance(jobContext.getPartitionerClass(), job);\\r\\n  } else {\\r\\n    partitioner = new org.apache.hadoop.mapreduce.Partitioner<K,V>() {\\r\\n      @Override\\r\\n      public int getPartition(K key, V value, int numPartitions) {\\r\\n        return partitions - 1;\\r\\n      }\\r\\n    };\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n\u82e5\u8bbe\u7f6e\u6570\u91cf\u5927\u4e8e1\uff0c\u5219\u901a\u8fc7getPartitionerClass()\u65b9\u6cd5\u83b7\u53d6\u5206\u533a\u7c7b\u5e76\u901a\u8fc7\u53cd\u5c04\u5b9e\u4f8b\u5316\uff0c\u9ed8\u8ba4\u4f7f\u7528HashPartitioner\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570`mapreduce.job.partitioner.class`\u6307\u5b9a\u3002\u6b64\u65f6\u83b7\u53d6\u5206\u533a\u7f16\u53f7\u901a\u8fc7key\u7684hash\u503c\u5bf9\u4efb\u52a1\u6570\u91cf\u53d6\u6a21\u5f97\u5230\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\r\\n\\r\\n```java title=HashPartitioner.java\\r\\npublic class HashPartitioner<K, V> extends Partitioner<K, V> {\\r\\n\\r\\n  /** Use {@link Object#hashCode()} to partition. */\\r\\n  public int getPartition(K key, V value,\\r\\n                          int numReduceTasks) {\\r\\n    return (key.hashCode() & Integer.MAX_VALUE) % numReduceTasks;\\r\\n  }\\r\\n\\r\\n}\\r\\n```\\r\\n\\r\\n\u56e0\u6b64\uff0c\u81ea\u5b9a\u4e49\u5206\u533a\u7b56\u7565\u6709\u5982\u4e0b3\u6b65\uff1a\\r\\n\\r\\n1. \u81ea\u5b9a\u4e49CustomPartitioner\u7c7b\u7ee7\u627fPartitioner\u62bd\u8c61\u7c7b\uff0c\u5b9e\u73b0getPartition\u62bd\u8c61\u65b9\u6cd5\uff1b\\r\\n2. \u5728\u9a71\u52a8\u7c7b\u4e2d\u6ce8\u518c\u4f7f\u7528\uff0c`job.setPartitionerClass(CustomPartitioner.class)`\uff1b\\r\\n3. \u8bbe\u7f6ereduce\u4efb\u52a1\u6570\u91cf\uff0c`job.setNumReduceTasks(2)`\u3002\\r\\n\\r\\n\u6ce8\u610fgetPartition\u65b9\u6cd5\u8fd4\u56de\u7684\u5206\u533a\u53f7\u5fc5\u987b\u4ece0\u5f00\u59cb\uff0c\u9010\u4e00\u589e\u52a0\u3002\u5982\u679c\u8bbe\u7f6ereduce\u4efb\u52a1\u6570\u91cf\u548cgetPartition\u8fd4\u56de\u503c\u4e0d\u540c\uff0c\u6839\u636e\u4e24\u8005\u5173\u7cfb\u6709\u5982\u4e0b\u60c5\u51b5\uff1a\\r\\n\\r\\n1. \u5982\u679creduce\u4efb\u52a1\u6570\u91cf\u5927\u4e8egetPartition\u8fd4\u56de\u7684\u6700\u5927\u503c\uff0c\u5219\u4ea7\u751f\u7a7a\u7684\u8f93\u51fa\u6587\u4ef6part-r-000xx\uff1b\\r\\n2. \u5982\u679c1 < reduce\u4efb\u52a1\u6570\u91cf < getPartition\u6570\u91cf\uff0c\u5219\u629b\u51faIOException\u5f02\u5e38\uff1b\\r\\n3. \u5982\u679creduce\u4efb\u52a1\u6570\u91cf\u4e3a1\uff0c\u5219\u53ea\u751f\u6210\u4e00\u4e2a\u8f93\u51fa\u6587\u4ef6part-r-00000\u3002\\r\\n\\r\\n#### \u6392\u5e8f\\r\\n\\r\\nMapTask\u548cReduceTask\u5747\u4f1a\u5bf9\u6570\u636e\u6309\u7167key\u8fdb\u884c\u6392\u5e8f\uff0c\u8fd9\u662fHadoop\u7684\u9ed8\u8ba4\u884c\u4e3a\uff0c\u4e0d\u7ba1\u7a0b\u5e8f\u903b\u8f91\u4e0a\u662f\u5426\u9700\u8981\u3002\\r\\n\\r\\n\u5bf9\u4e8eMapTask\uff0c\u5b83\u4f1a\u5c06\u5904\u7406\u7684\u7ed3\u679c\u6682\u65f6\u653e\u5230\u73af\u5f62\u7f13\u51b2\u533a\u4e2d\uff0c\u5f53\u73af\u5f62\u7f13\u51b2\u533a\u4f7f\u7528\u7387\u8fbe\u5230\u4e00\u5b9a\u9608\u503c\u540e\uff0c\u518d\u5bf9\u7f13\u51b2\u533a\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u4e00\u6b21\u5feb\u901f\u6392\u5e8f\uff0c\u5e76\u5c06\u8fd9\u4e9b\u6709\u5e8f\u6570\u636e\u6ea2\u5199\u5230\u78c1\u76d8\u4e0a\uff0c\u800c\u5f53\u6570\u636e\u5904\u7406\u5b8c\u6bd5\u540e\uff0c\u5b83\u4f1a\u5bf9\u78c1\u76d8\u4e0a\u6240\u6709\u6587\u4ef6\u8fdb\u884c\u5f52\u5e76\u6392\u5e8f\u3002\\r\\n\\r\\n\u5bf9\u4e8eReduceTask\uff0c\u5b83\u4ece\u6bcf\u4e2aMapTask\u4e0a\u8fdc\u7a0b\u62f7\u8d1d\u76f8\u5e94\u7684\u6570\u636e\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u5927\u5c0f\u8d85\u8fc7\u4e00\u5b9a\u9608\u503c\uff0c\u5219\u6ea2\u5199\u78c1\u76d8\u4e0a\uff0c\u5426\u5219\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\u3002\u5982\u679c\u78c1\u76d8\u4e0a\u6587\u4ef6\u6570\u76ee\u8fbe\u5230\u4e00\u5b9a\u9608\u503c\uff0c\u5219\u8fdb\u884c\u4e00\u6b21\u5f52\u5e76\u6392\u5e8f\u4ee5\u751f\u6210\u4e00\u4e2a\u66f4\u5927\u6587\u4ef6\uff1b\u5982\u679c\u5185\u5b58\u4e2d\u6587\u4ef6\u5927\u5c0f\u6216\u8005\u6570\u76ee\u8d85\u8fc7\u4e00\u5b9a\u9608\u503c\uff0c\u5219\u8fdb\u884c\u4e00\u6b21\u5408\u5e76\u540e\u5c06\u6570\u636e\u6ea2\u5199\u5230\u78c1\u76d8\u4e0a\u3002\u5f53\u6240\u6709\u6570\u636e\u62f7\u8d1d\u5b8c\u6bd5\u540e\uff0cReduceTask\u7edf\u4e00\u5bf9\u5185\u5b58\u548c\u78c1\u76d8\u4e0a\u7684\u6240\u6709\u6570\u636e\u8fdb\u884c\u4e00\u6b21\u5f52\u5e76\u6392\u5e8f\u3002\\r\\n\\r\\n\u6392\u5e8f\u8981\u6c42key\u7c7b\u578b\u5b9e\u73b0WritableComparable\u63a5\u53e3\uff0c\u5373\u5728Writable\u63a5\u53e3\u7684\u57fa\u7840\u4e0a\u5b9e\u73b0Comparable\u63a5\u53e3\u3002\\r\\n\\r\\n#### Combiner\\r\\n\\r\\nCombiner\u4f5c\u4e3aReducer\u7684\u5b50\u7c7b\uff0c\u662f\u4e00\u79cd\u7279\u6b8a\u7684Reducer\u3002Combiner\u5728\u6bcf\u4e00\u4e2aMapTask\u6240\u5728\u7684\u8282\u70b9\u8fd0\u884c\uff0c\u800cReducer\u63a5\u6536\u5168\u5c40\u6240\u6709Mapper\u7684\u8f93\u51fa\u7ed3\u679c\u3002Combiner\u5bf9\u6bcf\u4e2aMapTask\u7684\u8f93\u51fa\u8fdb\u884c\u5c40\u90e8\u6c47\u603b\uff0c\u4ee5\u51cf\u5c11\u7f51\u7edc\u4f20\u8f93\u91cf\u3002**\u6ce8\u610f\u4f7f\u7528Combiner\u7684\u524d\u63d0\u662f\u4e0d\u5f71\u54cd\u6700\u7ec8\u7684\u4e1a\u52a1\u903b\u8f91(\u6bd4\u5982\u8ba1\u7b97\u5e73\u5747\u6570\u5c31\u4e0d\u884c)**\uff0c\u8f93\u51faK-V\u548cReducer\u7684\u8f93\u5165K-V\u5339\u914d\u3002\\r\\n\\r\\n\u8bbe\u7f6esetNumReduceTasks\u4e3a0\uff0cShuffle\u9636\u6bb5\u4e0d\u5b58\u5728\uff0c\u56e0\u6b64Combiner\u4e5f\u4e0d\u751f\u6548\u3002\u4e1a\u52a1\u903b\u8f91\u76f8\u540c\u7684\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528Reducer\u4f5c\u4e3aCombiner\u3002\\r\\n\\r\\n## MapTask\u5de5\u4f5c\u673a\u5236\\r\\n\\r\\n### MapTask\u6e90\u7801\u5206\u6790\\r\\n\\r\\n```java\\r\\n\u81ea\u5b9a\u4e49Mapper\u7c7b\u7684map\u65b9\u6cd5\u8c03\u7528`context.write(key, v)`\uff1b\\r\\n    WrappedMapper.write(k, v);\\r\\n    TaskInputOutputContextImpl.write(k, v);\\r\\n    MapTask.write(k, v, partitioner.getPartition(key, value, partitions))\\r\\n        \u9ed8\u8ba4\u4f7f\u7528HashPartitioner\u7684getPartition\u65b9\u6cd5\\r\\n    MapTask.collect()\u65b9\u6cd5\u5c06\u6240\u6709K-V\u5199\u51fa\\r\\n    \u56de\u5230runNewMapper\u65b9\u6cd5\u4e2d\u8c03\u7528output.close() [MapTask.java, Line 805]\\r\\n        \u8c03\u7528collector.flush() [MapTask.java, Line 735]\\r\\n            \u8c03\u7528sortAndSpill()\u65b9\u6cd5 [MapTask.java, Line 1505]\uff0c\\r\\n                \u8c03\u7528sorter.sort()\u65b9\u6cd5 [MapTask.java, Line 1625]\\r\\n            \u8c03\u7528mergeParts()\u65b9\u6cd5\u5408\u5e76\u6587\u4ef6 [MapTask.java, Line 1527]\\r\\n        \u8c03\u7528collector.close()\uff0c\u5173\u95ed\u6536\u96c6\u5668\uff0c\u8fdb\u5165ReduceTask [MapTask.java, Line 739]\\r\\n```\\r\\n\\r\\n### ReduceTask\u6e90\u7801\u5206\u6790\\r\\n\\r\\n```java\\r\\n\u4ee5ReduceTask.run()\u4e3a\u5165\u53e3\\r\\ninitialize() [ReduceTask.java, Line333]\\r\\nshuffleConsumerPlugin.init(shuffleContext) [ReduceTask.java, Line 375]\\r\\n    new ShuffleSchedulerImpl [Shuffle.java, Line77]\\r\\n        totalMaps = job.getNumMapTasks() [ShuffleSchedulerImpl.java, Line 120]\\r\\n    merger = createMergeManager(context) [Shuffle.java, Line 80]\\r\\n        new MergeManagerImpl [Shuffle.java, Line 85]\\r\\n            this.inMemoryMerger = createInMemoryMerger() [MergeManagerImpl.java, Line 232]\\r\\n            this.onDiskMerger = new OnDiskMerger(this) [MergeManagerImpl.java, Line 235]\\r\\nrIter = shuffleConsumerPlugin.run() [ReduceTask.java, Line 375]\\r\\n    eventFetcher.start()  [\u5f00\u59cb\u6293\u53d6\u6570\u636e\uff0cShuffle.java, Line 107]\\r\\n    eventFetcher.shutDown() [\u6293\u53d6\u5b8c\u6bd5\uff0cShuffle.java, Line 141]\\r\\n    copyPhase.complete() [copy\u5b8c\u6210Shuffle.java, Line 151]\\r\\n    taskStatus.setPhase(TaskStatus.Phase.SORT) [\u5f00\u59cb\u6392\u5e8f\u9636\u6bb5\uff0cShuffle.java, Line 152]\\r\\nsortPhase.complete() [\u6392\u5e8f\u9636\u6bb5\u5b8c\u6210\uff0c\u8fdb\u5165reduce\uff0cReduceTask.java, Line 382]\\r\\nrunNewReducer() [\u8fdb\u5165reducer\uff0cReduceTask.java, Line 390]\\r\\n    reducer.run() [ReduceTask.java, Line 628]\\r\\n        setup(); [Reduce.java, Line 168]\\r\\n        reduce(); [Reduce.java, Line 171]\\r\\n        cleanup(); [[Reduce.java, Line 179]]\\r\\n```\\r\\n\\r\\n## Join\\r\\n\\r\\nMapReduce\u7a0b\u5e8f\u7684Join\u64cd\u4f5c\u5206\u4e3aReduce Join\u548cMap Join\u4e24\u79cd\uff1a\\r\\n\\r\\n- **Reduce Join**\uff1amap\u65b9\u6cd5\u5bf9\u8bb0\u5f55\u6253\u6807\u7b7e\uff0c\u4ee5\u8fde\u63a5\u5b57\u6bb5\u4e3akey\uff0c\u5176\u4f59\u5b57\u6bb5\u52a0\u6807\u7b7e\u4e3avalue\uff1breduce\u65b9\u6cd5\u901a\u8fc7\u6807\u7b7e\u533a\u5206\u4e0d\u540c\u6765\u6e90\uff0c\u7136\u540e\u5408\u5e76\u3002\u7f3a\u70b9\u662f\u6240\u6709\u5408\u5e76\u64cd\u4f5c\u5728Reduce\u9636\u6bb5\u5b8c\u6210\uff0cMap\u9636\u6bb5\u538b\u529b\u5c0f\u4f46Reduce\u9636\u6bb5\u538b\u529b\u5927\uff0c\u5bb9\u6613\u4ea7\u751f**\u6570\u636e\u503e\u659c**\uff1b\\r\\n- **Map Join**\uff1a\u5728Map\u9636\u6bb5\u7f13\u5b58\u591a\u5f20\u8868\uff0c\u63d0\u524d\u5904\u7406\u4e1a\u52a1\u903b\u8f91\uff0c**\u9002\u5408\u5c0f\u8868\u5173\u8054\u5927\u8868**\u3002\\r\\n\u524d\u8005\u901a\u8fc7\u6253\u6807\u7b7e\u6765\u533a\u5206\u4e0d\u540c\u6765\u6e90\u7684\u8bb0\u5f55\uff0c\u7136\u540e\u7528\u8fde\u63a5\u5b57\u6bb5\u4e3akey\uff0c\u5176\u4f59\u90e8\u5206\u52a0\u6807\u7b7e\u4e3avalue\u8fdb\u884creduce\u8f93\u51fa\u3002\u5177\u4f53\u64cd\u4f5c\u5982\u4e0b\uff1a\\r\\n\\r\\n1. Driver\u7c7b\u6dfb\u52a0\u7f13\u5b58\u6587\u4ef6\uff1a`job.addCacheFile(new URI)`\uff1b\\r\\n2. \u8bbe\u7f6eReduceTask\u6570\u91cf\u4e3a0\uff1a`job.setNumberReduceTasks(0)`\uff1b\\r\\n3. Mapper\u7c7b\u7684setup\u65b9\u6cd5\u8bfb\u53d6\u7f13\u5b58\u6587\u4ef6\u5e76\u4fdd\u5b58\u4e3a\u96c6\u5408\uff1b\\r\\n4. map\u65b9\u6cd5\u6839\u636e\u96c6\u5408\u548c\u6570\u636e\u5b8c\u6210\u5173\u8054\u5408\u5e76\u3002\\r\\n\\r\\n## ETL\\r\\n\\r\\nETL(Extract-Transform-Load)\u6307\u6570\u636e\u4ece\u6e90\u7aef\u7ecf\u8fc7\u62bd\u53d6\u3001\u8f6c\u6362\u548c\u52a0\u8f7d\u5230\u76ee\u6807\u7aef\u7684\u8fc7\u7a0b\uff0c\u5728\u8fd0\u884c\u6838\u5fc3\u4e1a\u52a1MapReduce\u7a0b\u5e8f\u4e4b\u524d\u90fd\u9700\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u6e05\u6d17\uff0c**ETL\u5f80\u5f80\u53ea\u9700\u8981\u8fd0\u884cMapper\u800c\u4e0d\u9700\u8981Reducer**\u3002\\r\\n\\r\\n## \u538b\u7f29\\r\\n\\r\\nHadoop\u6570\u636e\u538b\u7f29\u7684\u4f18\u70b9\u662f\u51cf\u5c11IO\u6b21\u6570\u3001\u51cf\u5c11\u5b58\u50a8\u7a7a\u95f4\uff0c\u4f46\u7f3a\u70b9\u662f\u589e\u52a0CPU\u5f00\u9500\u3002\u56e0\u6b64\u4f7f\u7528\u538b\u7f29\u7684\u539f\u5219\u662fCPU\u5bc6\u96c6\u578b\u5e94\u7528\u5c11\u7528\u538b\u7f29\uff0c\u800cIO\u5bc6\u96c6\u578b\u5e94\u7528\u591a\u7528\u538b\u7f29\u3002\\r\\n\\r\\n| \u538b\u7f29\u683c\u5f0f  | Hadoop\u662f\u5426\u81ea\u5e26 | \u7b97\u6cd5  | \u6269\u5c55\u540d | \u662f\u5426\u53ef\u5207\u7247 | \u662f\u5426\u9700\u8981\u4fee\u6539\u7a0b\u5e8f |\\r\\n| -------- | -------------- | ------- | -------- | ---------- | ------------------------ |\\r\\n| DEFALTE  | \u662f            | DEFLATE | .deflate | \u5426        | \u5426                      |\\r\\n| GZIP     | \u662f            | DEFLATE | .gz      | \u5426        | \u5426                      |\\r\\n| bzip2    | \u662f            | bzip2   | .bz2     | **\u662f**    | \u5426                      |\\r\\n| LZO      | **\u5426**        | LZO     | .lzo     | **\u662f**    | \u9700\u8981\u5efa\u7d22\u5f15\uff0c\u6307\u5b9a\u8f93\u5165\u683c\u5f0f |\\r\\n| snappy   | \u662f            | Snappy  | .snappy  | \u5426        | \u5426                      |\\r\\n\\r\\n\u5f53\u538b\u7f29\u5e94\u7528\u4e8eInputFormat\uff0c\u65e0\u987b\u663e\u793a\u6307\u5b9a\u4f7f\u7528\u7684\u7f16\u7801\u65b9\u6cd5\uff0cHadoop\u4f1a\u81ea\u52a8\u68c0\u67e5\u6587\u4ef6\u6269\u5c55\u540d\u9009\u62e9\u5408\u9002\u7684\u89e3\u7f16\u7801\u65b9\u5f0f\u5bf9\u6587\u4ef6\u8fdb\u884c\u538b\u7f29\u548c\u89e3\u538b\u3002\u5728\u5f00\u53d1\u4e2d\u82e5\u6570\u636e\u91cf\u5c0f\u4e8e\u5757\u5927\u5c0f\uff0c\u91cd\u70b9\u8003\u8651\u538b\u7f29\u548c\u89e3\u538b\u6bd4\u8f83\u5feb\u7684LZO/Snappy\uff0c\u82e5\u6570\u636e\u91cf\u975e\u5e38\u5927\uff0c\u91cd\u70b9\u8003\u8651\u652f\u6301\u5207\u7247\u7684Bzip2\u548cLZO\u3002\u5f53\u538b\u7f29\u5e94\u7528\u4e8eShuffle\u9636\u6bb5\uff0c\u91cd\u70b9\u8003\u8651\u538b\u7f29\u548c\u89e3\u538b\u5feb\u7684LZO/Snappy\u3002\u5f53\u538b\u7f29\u5e94\u7528\u4e8eOutputFormat\uff0c\u5982\u679c\u6570\u636e\u6c38\u4e45\u4fdd\u5b58\u5219\u8003\u8651\u538b\u7f29\u7387\u9ad8\u7684bzip2\u548cGzip\uff0c\u5982\u679c\u4f5c\u4e3a\u4e0b\u4e00\u4e2aMapReduce\u7a0b\u5e8f\u7684\u8f93\u5165\uff0c\u9700\u8981\u8003\u8651\u662f\u5426\u652f\u6301\u5207\u7247\u3002\\r\\n\\r\\n### \u538b\u7f29\u914d\u7f6e\\r\\n\\r\\n| \u53c2\u6570                                                            | \u9ed8\u8ba4\u503c                                  | \u9636\u6bb5      | \u5efa\u8bae             |\\r\\n| ----------------------------------------------------------------- | ------------------------------------------ | ----------- | ------------------ |\\r\\n| io.compression.codecs(core-site.xml)                              | \u65e0\uff0c\u8f93\u5165`hadoop checknative`\u67e5\u770b     | \u8f93\u5165\u538b\u7f29 |                    |\\r\\n| mapreduce.map.output.compress(mapred-site.xml)                    | false                                      | mapper\u8f93\u51fa | \u8bbe\u7f6e\u4e3atrue\u5f00\u542f\u538b\u7f29 |\\r\\n| mapreduce.map.output.compress.codec(mapred-site.xml)              | org.apache.hadoop.io.compress.DefaultCodec | mapper\u8f93\u51fa | \u8bbe\u7f6eLZO\u6216Snappy |\\r\\n| mapreduce.output.fileoutputformat.compress(mapred-site.xml)       | false                                      | reducer\u8f93\u51fa | \u8bbe\u7f6e\u4e3atrue\u5f00\u542f\u538b\u7f29 |\\r\\n| mapreduce.output.fileoutputformat.compress.codec(mapred-site.xml) | org.apache.hadoop.io.compress.DefaultCodec | reducer\u8f93\u51fa | \u4f7f\u7528gzip\u6216bzip2 |"},{"id":"/2022/01/30/Learning-Hadoop3.x-02","metadata":{"permalink":"/blog/2022/01/30/Learning-Hadoop3.x-02","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2022-01-30-Learning-Hadoop3.x-02.md","source":"@site/blog/2022-01-30-Learning-Hadoop3.x-02.md","title":"Hadoop 3.x\u5b66\u4e60\u7b14\u8bb0(2)","description":"Hadoop 3.1.3\u5b66\u4e60\u7b14\u8bb0(2)","date":"2022-01-30T00:00:00.000Z","formattedDate":"January 30, 2022","tags":[{"label":"Hadoop","permalink":"/blog/tags/hadoop"},{"label":"BigData","permalink":"/blog/tags/big-data"}],"readingTime":13.61,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"Hadoop 3.x\u5b66\u4e60\u7b14\u8bb0(2)","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["Hadoop","BigData"],"description":"Hadoop 3.1.3\u5b66\u4e60\u7b14\u8bb0(2)","hide_table_of_contents":false},"prevItem":{"title":"Hadoop 3.x\u5b66\u4e60\u7b14\u8bb0(3)","permalink":"/blog/2022/01/31/Learning-Hadoop3.x-03"},"nextItem":{"title":"Hadoop 3.x\u5b66\u4e60\u7b14\u8bb0(1)","permalink":"/blog/2022/01/29/Learning-Hadoop3.x-01"}},"content":":pencil:Hadoop 3.1.3\u5b66\u4e60\u7b14\u8bb0\u7b2c2\u7bc7\uff1aHDFS\u3002\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## HDFS\u7b80\u4ecb\\r\\n\\r\\nHDFS(Hadoop Distributed File System)\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u6587\u4ef6\u5b58\u50a8\u7cfb\u7edf\uff0c\u9002\u7528\u4e8e\u4e00\u6b21\u5199\u5165\uff0c\u591a\u6b21\u8bfb\u51fa\u7684\u573a\u666f\u3002\\r\\n\\r\\n\u4f18\u70b9:smile:\uff1a\\r\\n\\r\\n1. \u9ad8\u5bb9\u9519\u6027\uff1a\u6570\u636e\u591a\u526f\u672c\u4fdd\u5b58\uff0c\u67d0\u4e2a\u526f\u672c\u4e22\u5931\u540e\u80fd\u591f\u81ea\u52a8\u6062\u590d\uff1b\\r\\n2. \u9002\u5408\u5904\u7406\u5927\u6570\u636e\uff1a\u5927\u5c0f\u89c4\u6a21\u652f\u6301TB\u751a\u81f3PB\uff0c\u6570\u91cf\u89c4\u6a21\u652f\u6301\u767e\u4e07\u7ea7\uff1b\\r\\n3. \u6784\u5efa\u6210\u672c\u4f4e\uff1a\u53ef\u4ee5\u5728\u591a\u4e2a\u5ec9\u4ef7\u673a\u5668\u4e0a\u6784\u5efa\u526f\u672c\u3002\\r\\n\\r\\n\u7f3a\u70b9:angry:\uff1a\\r\\n\\r\\n1. \u6570\u636e\u8bbf\u95ee\u5ef6\u8fdf\u9ad8\uff1b\\r\\n2. \u65e0\u6cd5\u9ad8\u6548\u5bf9\u5927\u91cf\u5c0f\u6587\u4ef6\u8fdb\u884c\u5b58\u50a8\uff1a\u5360\u7528NameNode\u5185\u5b58\u6765\u5b58\u50a8\u6587\u4ef6\u76ee\u5f55\u548c\u5757\u4fe1\u606f\uff0c\u5e76\u4e14\u5bfb\u5740\u65f6\u95f4\u8d85\u8fc7\u8bfb\u53d6\u65f6\u95f4\uff0c\u8fdd\u53cdHDFS\u8bbe\u8ba1\u76ee\u6807\uff1b\\r\\n3. \u4e0d\u652f\u6301\u5e76\u53d1\u5199\u5165\u3001\u968f\u673a\u4fee\u6539\uff1a\u4e00\u4e2a\u6587\u4ef6\u4e0d\u80fd\u591a\u7ebf\u7a0b\u540c\u65f6\u5199\uff0c\u4ec5\u652f\u6301\u6570\u636e\u8ffd\u52a0\uff0c\u4e0d\u652f\u6301\u968f\u673a\u4fee\u6539\u3002\\r\\n\\r\\n### \u7ec4\u6210\u67b6\u6784\\r\\n\\r\\n<img style={{width:\\"80%\\", height:\\"80%\\"}} src=\\"/static/img/blog/HadoopNotes/hdfsarchitecture.png\\" title=\\"Hadoop Architecture\\" />\\r\\n\\r\\n- NameNode(NN)\uff1a\u7ba1\u7406HDFS\u547d\u540d\u7a7a\u95f4\uff0c\u914d\u7f6e\u526f\u672c\u7b56\u7565\uff0c\u7ba1\u7406\u6570\u636e\u5757\u6620\u5c04\u4fe1\u606f\uff0c\u5904\u7406\u5ba2\u6237\u7aef\u8bfb\u5199\u8bf7\u6c42\uff1b\\r\\n- DataNode\uff1a\u5b58\u50a8\u6570\u636e\u5757\uff0c\u6267\u884c\u6570\u636e\u5757\u8bfb\u5199\u64cd\u4f5c\uff1b\\r\\n- SecondaryNameNode\uff1a\u5e76\u975eNN\u7684\u70ed\u5907\uff0c\u5728NN\u6302\u6389\u65f6\u4e0d\u80fd\u9a6c\u4e0a\u66ff\u6362\u5176\u529f\u80fd\uff0c\u7528\u4e8e\u5206\u62c5NN\u5de5\u4f5c\uff0c\u6bd4\u5982\u5b9a\u671f\u5408\u5e76Fsimage\u548cEdits\u5e76\u63a8\u9001\u7ed9NN\u3002\u5728\u7d27\u6025\u60c5\u51b5\u4e0b\u53ef\u8f85\u52a9\u6062\u590dNameNode\uff1b\\r\\n- Client\uff1a\u5207\u5206\u6587\u4ef6\u3001\u4e0eNameNode\u4ea4\u4e92\u83b7\u53d6\u6587\u4ef6\u4f4d\u7f6e\u4fe1\u606f\u3001\u4e0eDataNode\u4ea4\u4e92\u8bfb\u5199\u6570\u636e\u3001\u63d0\u4f9bHDFS\u7ba1\u7406\u547d\u4ee4\u3001\u63d0\u4f9bHDFS\u589e\u5220\u6539\u67e5\u547d\u4ee4\u3002\\r\\n\\r\\n### \u5757\u5927\u5c0f\\r\\n\\r\\nHDFS\u6587\u4ef6\u5728\u7269\u7406\u5b58\u50a8\u4e0a\u662f\u5206\u5757(Block)\u5b58\u50a8\uff0c\u901a\u8fc7\u53c2\u6570`dfs.blocksize`\u6307\u5b9a\uff0c\u9ed8\u8ba4\u5927\u5c0f\u4e3a128MB(Hadoop 2.x/3.x\uff0cHadoop 1.x\u4e3a64MB)\u3002\\r\\n\\r\\n\u5f53\u5bfb\u5740\u65f6\u95f4\u4e3a\u4f20\u8f93\u65f6\u95f4\u76841%\u65f6\u8ba4\u4e3a\u8fbe\u5230\u6700\u4f73\u72b6\u6001(:question:)\uff1a\u5982\u679c\u5757\u8bbe\u7f6e\u8fc7\u5c0f\uff0c\u589e\u52a0\u5bfb\u5740\u65f6\u95f4\uff0c\u5982\u679c\u5757\u8bbe\u7f6e\u8fc7\u5927\u5219\u4ece\u78c1\u76d8\u4f20\u8f93\u6570\u636e\u7684\u65f6\u95f4\u5927\u4e8e\u5bfb\u5740\u65f6\u95f4\u3002\u56e0\u6b64\uff0c\u5757\u5927\u5c0f\u8bbe\u7f6e\u53d6\u51b3\u4e8e\u78c1\u76d8\u4f20\u8f93\u901f\u7387\u3002\\r\\n\\r\\n## HDFS Shell\u64cd\u4f5c\\r\\n\\r\\n\u4e24\u79cd\u547d\u4ee4\u683c\u5f0f\uff1a`hadoop fs [options] ...`\u548c`hdfs dfs [options] ...`\uff0c\u901a\u8fc7`hadoop fs -help <\u9009\u9879\u540d>`\u6765\u67e5\u770b\u547d\u4ee4\u7528\u6cd5\u3002\\r\\n\\r\\n### \u4e0a\u4f20\u6587\u4ef6\\r\\n\\r\\n- `-moveFromLocal <local_file_path> <hadoop_file_path>`\uff1a\u4ece\u672c\u5730**\u526a\u5207**\u6587\u4ef6\u5230HDFS\uff1b\\r\\n- `-copyFromLocal <local_file_path> <hadoop_file_path>`\uff1a\u4ece\u672c\u5730**\u590d\u5236**\u6587\u4ef6\u5230HDFS\uff1b\\r\\n- `-put <local_file_path> <hadoop_file_path>`\uff1a\u540ccopyFromLocal\uff0c\u63a8\u8350\u4f7f\u7528\uff1b\\r\\n- `-appendToFile <local_file_path> <hadoop_file_path>`\uff1a\u8ffd\u52a0\u6587\u4ef6\u5185\u5bb9\u5230HDFS\u6587\u4ef6\uff0c\u672c\u5730\u6587\u4ef6\u4e0d\u5220\u9664\u3002\\r\\n\\r\\n### \u4e0b\u8f7d\u6587\u4ef6\\r\\n\\r\\n- `-copyToLocal <hadoop_file_path> <local_file_path>`\uff1a\u4eceHDFS**\u62f7\u8d1d**\u6587\u4ef6\u5230\u672c\u5730\uff1b\\r\\n- `-get <hadoop_file_path> <local_file_path>`\uff1a\u540c`-copyToLocal`\uff0c\u63a8\u8350\u4f7f\u7528\u3002\\r\\n\\r\\n### HDFS\u6587\u4ef6\u7cfb\u7edf\u64cd\u4f5c\\r\\n\\r\\n- `-ls`\uff1a\u663e\u793a\u76ee\u5f55\u4fe1\u606f\uff1b\\r\\n- `-cat`\uff1a\u663e\u793a\u6587\u4ef6\u5185\u5bb9\uff1b\\r\\n- `-chgrp`\u3001`-chmod`\u3001`-chown`\uff1a\u4fee\u6539\u6587\u4ef6\u5c5e\u6027\uff1b\\r\\n- `-mkdir`\uff1a\u521b\u5efa\u76ee\u5f55\uff1b\\r\\n- `-cp`\uff1aHDFS\u5185\u6587\u4ef6\u62f7\u8d1d\uff1b\\r\\n- `-mv`\uff1aHDFS\u5185\u6587\u4ef6\u79fb\u52a8\uff1b\\r\\n- `-tail`\uff1a\u663e\u793a\u6587\u4ef6\u672b\u5c3e1KB\u6570\u636e\uff1b\\r\\n- `-rm`\uff1a\u5220\u9664\u6587\u4ef6\uff0c\u52a0\u4e0a`-r`\u53c2\u6570\u9012\u5f52\u5220\u9664\u6587\u4ef6\u5939\uff1b\\r\\n- `-du`\uff1a\u7edf\u8ba1\u6587\u4ef6\u5927\u5c0f\uff0c\u5982\u4e0b\u6240\u793a\uff0c\u524d\u8005\u8868\u793a\u5355\u4e2a\u6587\u4ef6\u5927\u5c0f14\uff0c\u540e\u8005\u8868\u793a14*3\u4e2a\u526f\u672c\u603b\u5927\u5c0f\uff1b\\r\\n\\r\\n```bash\\r\\n[kayhaw@hadoop102 hadoop-3.1.3]$ hadoop fs -du -h /sanguo\\r\\n14  42  /sanguo/shu.txt\\r\\n7   21  /sanguo/weiguo.txt\\r\\n6   18  /sanguo/wu.txt\\r\\n```\\r\\n\\r\\n- `-setrep`\uff1a\u8bbe\u7f6e\u6587\u4ef6\u526f\u672c\u6570\u91cf\uff0c\u53ea\u662f\u8bb0\u5f55\u5728NameNode\u7684\u5143\u6570\u636e\u4e2d\uff0c\u5b9e\u9645\u526f\u672c\u6570\u91cf\u4f9d\u8d56\u4e8eDataNode\u6570\u91cf\u3002\\r\\n\\r\\n## HDFS API\u64cd\u4f5c\\r\\n\\r\\n### Windows\u5f00\u53d1\u73af\u5883\u51c6\u5907\\r\\n\\r\\n\u4ece[cdarlint/winutils](https://github.com/cdarlint/winutils)\u5904\u4e0b\u8f7d\u5bf9\u5e94\u7248\u672c\u7684\u4f9d\u8d56\u5305hadoop-3.1.0/bin\uff0c\u914d\u7f6e\u73af\u5883\u53d8\u91cf%HADOOP_HOME%\\\\bin\u3002\\r\\n\\r\\n### FileSystem Java API\\r\\n\\r\\n\u8c03\u7528HDFS API\u7684\u6a21\u677f\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a\\r\\n\\r\\n```java\\r\\npublic void template() throws URISyntaxException, IOException, InterruptedException {\\r\\n    // 1. \u96c6\u7fa4\u8fde\u63a5\u4fe1\u606f\\r\\n    URI uri = new URI(\\"hdfs://hadoop102:8020\\");\\r\\n    // 2. \u521b\u5efa\u914d\u7f6e\\r\\n    Configuration config = new Configuration();\\r\\n    // 2.1 \u914d\u7f6e\u4e00\u4e9b\u53c2\u6570\uff0c\u4f18\u5148\u7ea7\u6700\u9ad8\\r\\n    config.set(\\"dfs.replication\\", \\"2\\");\\r\\n    // 3. \u83b7\u53d6\u5ba2\u6237\u7aef\\r\\n    fs = FileSystem.get(uri, config, \\"kayhaw\\");\\r\\n    // 4. \u8fdb\u884c\u6587\u4ef6\u7cfb\u7edf\u64cd\u4f5c\\r\\n    fs.xxx();\\r\\n    // 5. \u5173\u95ed\u8d44\u6e90\\r\\n    fs.close();\\r\\n}\\r\\n```\\r\\n\\r\\n\u5176\u4e2d\uff0c\u53c2\u6570\u4f18\u5148\u7ea7\u6309\u5982\u4e0b\u987a\u5e8f\u4f18\u5148\u7ea7\u4f9d\u6b21\u589e\u9ad8\uff1a\\r\\n\\r\\n1. hadoop\u96c6\u7fa4\u4e2dhdfs-default.xml\\r\\n2. hadoop\u96c6\u7fa4\u4e2dhdfs-site.xml\\r\\n3. \u7a0b\u5e8fresource\u76ee\u5f55\u4e0bhdfs-site.xml\\r\\n4. \u4ee3\u7801\u4e2d\u901a\u8fc7Configuration.set()\u65b9\u6cd5\u8bbe\u7f6e\\r\\n\\r\\n\u5e38\u7528\u7684API\u6709\uff1a\\r\\n\\r\\n1. \u521b\u5efa\u6587\u4ef6\u5939\uff1a`boolean mkdirs(Path f) throws IOException`\uff1b\\r\\n2. \u4e0a\u4f20\u6587\u4ef6(\u91cd\u8f7d\u7248\u652f\u6301Path\u6570\u7ec4src\u8fdb\u884c\u591a\u6587\u4ef6\u4e0a\u4f20)\uff1a\\r\\n\\r\\n```java\\r\\n/**\\r\\n   * The src file is on the local disk.  Add it to the filesystem at\\r\\n   * the given dst name.\\r\\n   * delSrc indicates if the source should be removed\\r\\n   * @param delSrc whether to delete the src\\r\\n   * @param overwrite whether to overwrite an existing file\\r\\n   * @param src path\\r\\n   * @param dst path\\r\\n   * @throws IOException IO failure\\r\\n   */\\r\\n  public void copyFromLocalFile(boolean delSrc, boolean overwrite,\\r\\n                                Path src, Path dst);\\r\\n```\\r\\n\\r\\n3. \u4e0b\u8f7d\u6587\u4ef6\uff1a\\r\\n\\r\\n```java\\r\\n/**\\r\\n   * The src file is under this filesystem, and the dst is on the local disk.\\r\\n   * Copy it from the remote filesystem to the local dst name.\\r\\n   * delSrc indicates if the src will be removed\\r\\n   * or not. useRawLocalFileSystem indicates whether to use RawLocalFileSystem\\r\\n   * as the local file system or not. RawLocalFileSystem is non checksumming,\\r\\n   * So, It will not create any crc files at local.\\r\\n   *\\r\\n   * @param delSrc whether to delete the src\\r\\n   * @param src path\\r\\n   * @param dst path\\r\\n   * @param useRawLocalFileSystem whether to use RawLocalFileSystem as local file system or not.\\r\\n   *\\r\\n   * @throws IOException for any IO error\\r\\n   */\\r\\n  public void copyToLocalFile(boolean delSrc, Path src, Path dst,\\r\\n      boolean useRawLocalFileSystem) throws IOException;\\r\\n```\\r\\n\\r\\n4. \u5220\u9664\u6587\u4ef6\\r\\n\\r\\n```java\\r\\n/** Delete a file.\\r\\n*\\r\\n* @param f \\r\\n* @param recursive \u662f\u5426\u9012\u5f52\u5220\u9664\u6587\u4ef6\u5939\\r\\n* @return  true if delete is successful else false.\\r\\n* @throws IOException IO failure\\r\\n*/\\r\\npublic abstract boolean delete(Path f, boolean recursive) throws IOException;\\r\\n```\\r\\n\\r\\n5. \u6587\u4ef6\u91cd\u547d\u540d(\u79fb\u52a8)\\r\\n\\r\\n```java\\r\\npublic abstract boolean rename(Path src, Path dst) throws IOException;\\r\\n```\\r\\n\\r\\n6. \u904d\u5386\u6587\u4ef6\u5939\u83b7\u53d6\u6587\u4ef6\u4fe1\u606f\uff1a\\r\\n\\r\\n```java\\r\\npublic void fileInfo() throws IOException {\\r\\n    // \u83b7\u53d6\u6240\u6709\u6587\u4ef6\u4fe1\u606f\\r\\n    RemoteIterator<LocatedFileStatus> listFiles = fs.listFiles(new Path(\\"/\\"), true);\\r\\n    // \u904d\u5386\u6587\u4ef6\\r\\n    while (listFiles.hasNext()) {\\r\\n        LocatedFileStatus fileStatus = listFiles.next();\\r\\n        System.out.println(\\"=======\\" + fileStatus.getPath() + \\"=======\\");\\r\\n        System.out.println(fileStatus.getPermission());\\r\\n        System.out.println(fileStatus.getOwner());\\r\\n        System.out.println(fileStatus.getGroup());\\r\\n        System.out.println(fileStatus.getLen());\\r\\n        System.out.println(fileStatus.getModificationTime());\\r\\n        System.out.println(fileStatus.getReplication());\\r\\n        System.out.println(fileStatus.getBlockSize());\\r\\n        System.out.println(fileStatus.getPath().getName());\\r\\n\\r\\n        // \u83b7\u53d6\u5757\u4fe1\u606f\\r\\n        BlockLocation[] blockLocations = fileStatus.getBlockLocations();\\r\\n        System.out.println(Arrays.toString(blockLocations));\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n7. \u5224\u65ad\u662f\u6587\u4ef6\u8fd8\u662f\u6587\u4ef6\u5939\uff1a\\r\\n\\r\\n```java\\r\\npublic void isDirectory() throws IOException {\\r\\n    // \u5355\u4e2a\u6587\u4ef6\u67e5\u770b\u72b6\u6001\\r\\n    FileStatus file = fs.getFileStatus(new Path(\\"/test/heke\\"));\\r\\n    System.out.println(file.isDirectory());\\r\\n\\r\\n    // \u6587\u4ef6\u5939\u5217\u8868\u67e5\u770b\u72b6\u6001\\r\\n    FileStatus[] fileStatuses = fs.listStatus(new Path(\\"/\\"));\\r\\n    for (FileStatus fileStatus : fileStatuses) {\\r\\n        if(fileStatus.isDirectory()) {\\r\\n            System.out.println(\\"\u76ee\u5f55\uff1a\\" + fileStatus.getPath().getName());\\r\\n        } else {\\r\\n            System.out.println(\\"\u6587\u4ef6\uff1a\\" + fileStatus.getPath().getName());\\r\\n        }\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n## HDFS\u8bfb\u5199\u6d41\u7a0b\\r\\n\\r\\n### \u5199\u6570\u636e\\r\\n\\r\\n1. \u5ba2\u6237\u7aef\u5411NameNode\u8bf7\u6c42\u4e0a\u4f20\u6587\u4ef6\\r\\n2. NameNode\u68c0\u67e5\u8def\u5f84\u662f\u5426\u5b58\u5728\u3001\u662f\u5426\u5177\u6709\u6743\u9650\uff0c\u54cd\u5e94\u53ef\u4ee5\u4e0a\u4f20\u6587\u4ef6\\r\\n3. \u5ba2\u6237\u7aef\u8bf7\u6c42\u4e0a\u4f20\u7b2c\u4e00\u4e2ablock\uff0c\u7531NameNode\u8fd4\u56deDataNode\u5730\u5740\\r\\n4. NameNode\u8fd4\u56dedn1\u3001dn2\u3001dn3\u8282\u70b9\u5730\u5740\\r\\n5. \u5ba2\u6237\u7aef\u5411\u5176\u4e2d\u4e00\u4e2a\u8282\u70b9dn1\u8bf7\u6c42\u5efa\u7acbblock\u4f20\u9001\u901a\u9053\uff0c\u7531\u8be5\u8282\u70b9\u5411\u5176\u4ed6\u8282\u70b9\u8bf7\u6c42\u5f62\u6210\u4f20\u8f93\u901a\u9053\\r\\n6. dn1\u54cd\u5e94\u6210\u529f\\r\\n7. \u5ba2\u6237\u7aef\u4ee5packet\u4e3a\u5355\u4f4d(64KB)\u4f20\u8f93\u6570\u636e\uff0c\u6bcf\u4e2apacket\u7531chunk\u7ec4\u6210(chunk:512B+chunksum:4B)\\r\\n\\r\\n### \u8282\u70b9\u8ddd\u79bb\u8ba1\u7b97\\r\\n\\r\\nNameNode\u5c06\u8282\u70b9\u8ddd\u79bb\u6700\u8fd1\u7684DataNode\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\u8282\u70b9\u8ddd\u79bb=\u4e24\u4e2a\u8282\u70b9\u5230\u8fbe\u6700\u8fd1\u7684\u516c\u5171\u7956\u5148\u7684\u8ddd\u79bb\u603b\u548c\uff0c\u7531\u6b64\u5f97\u5230\uff1a\\r\\n\\r\\n1. \u540c\u4e00\u8282\u70b9\u4e0a\u7684\u8fdb\u7a0b\u8ddd\u79bb\u4e3a0\uff1b\\r\\n2. \u540c\u4e00\u673a\u67b6\u4e0a\u7684\u4e0d\u540c\u8282\u70b9\u8ddd\u79bb\u4e3a2\uff1b\\r\\n3. \u540c\u4e00\u6570\u636e\u4e2d\u5fc3\u4e0d\u540c\u673a\u67b6\u4e0a\u7684\u8282\u70b9\u8ddd\u79bb\u4e3a4\uff1b\\r\\n4. \u4e0d\u540c\u6570\u636e\u4e2d\u5fc3\u7684\u8282\u70b9\u8ddd\u79bb\u4e3a6\u3002\\r\\n\\r\\n### \u673a\u67b6\u611f\u77e5\\r\\n\\r\\nNameNode\u8fd4\u56de[\u6570\u636e\u526f\u672c](https://hadoop.apache.org/docs/r3.1.3/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html#Data_Replication)\u7684\u5b58\u653e\u4f4d\u7f6e\u65f6\uff0c\u901a\u5e38\u526f\u672c\u4e2a\u6570\u4e3a3\uff0c\u6309\u7167\u5982\u4e0b\u987a\u5e8f\u6307\u5b9a3\u4e2a\u8282\u70b9\uff1a\u9996\u5148\u5ba2\u6237\u7aef\u5728DataNode\u4e0a\uff0c\u6307\u5b9a\u4e00\u4e2a\u8282\u70b9\u4e3a\u672c\u5730\u673a\u5668\uff0c\u5426\u5219\u968f\u673a\u9009\u4e00\u4e2a\u8282\u70b9\uff0c\u7136\u540e\u5728\u53e6\u4e00\u4e2a\u673a\u67b6A\u4e0a\u9009\u62e9\u4e00\u4e2a\u8282\u70b9a\uff0c\u6700\u540e\u5728\u673a\u67b6A\u4e0a\u9009\u62e9\u4e00\u4e2a\u4e0d\u540c\u8282\u70b9b\u3002\u5bf9\u5e94\u6e90\u7801\u89c1BlockPlacementPolicyDefault\u7c7b\u7684chooseTargetInOrder\u65b9\u6cd5\u3002\\r\\n\\r\\n### \u8bfb\u6570\u636e\\r\\n\\r\\n1. \u5ba2\u6237\u7aef\u901a\u8fc7DistributedFileSystem\u5411NameNode\u8bf7\u6c42\u4e0b\u8f7d\u6587\u4ef6\uff0cNameNode\u901a\u8fc7\u67e5\\r\\n\u8be2\u5143\u6570\u636e\uff0c\u627e\u5230\u6587\u4ef6\u5757\u6240\u5728\u7684DataNode\u5730\u5740\uff1b\\r\\n2. \u6311\u9009\u4e00\u53f0DataNode(\u5c31\u8fd1\u539f\u5219\uff0c\u7136\u540e\u968f\u673a)\u670d\u52a1\u5668\uff0c\u8bf7\u6c42\u8bfb\u53d6\u6570\u636e\uff1b\\r\\n3. DataNode\u5f00\u59cb\u4f20\u8f93\u6570\u636e\u7ed9\u5ba2\u6237\u7aef(\u4ece\u78c1\u76d8\u91cc\u9762\u8bfb\u53d6\u6570\u636e\u8f93\u5165\u6d41\uff0c\u4ee5Packet\u4e3a\u5355\u4f4d\u6765\u505a\u6821\u9a8c)\uff1b\\r\\n4. \u5ba2\u6237\u7aef\u4ee5Packet\u4e3a\u5355\u4f4d\u63a5\u6536\uff0c\u5148\u5728\u672c\u5730\u7f13\u5b58\uff0c\u7136\u540e\u5199\u5165\u76ee\u6807\u6587\u4ef6\u3002\\r\\n\\r\\n## NN\u548c2NN\\r\\n\\r\\nNameNode\u7684\u5143\u6570\u636e\u5206\u4e3a2\u90e8\u5206\uff1a\u78c1\u76d8\u4e2d\u7684\u5143\u6570\u636e\u5907\u4efdfsimage\u548c\u5185\u5b58\u4e2d\u7684\u589e\u91cf\u6587\u4ef6edits\u3002\u4f46\u957f\u65f6\u95f4\u5730\u6dfb\u52a0\u8ffd\u5267\u5230edits\u4f1a\u5bfc\u964d\u4f4e\u6548\u7387\uff0c\u56e0\u6b64\u7531SeconaryNameNode\u4e13\u95e8\u5408\u5e76fsimage\u548cedits\u3002Fsimage\u548cEdits\u6587\u4ef6\u5de5\u4f5c\u6d41\u7a0b\u5982\u4e0b\uff1a\\r\\n\\r\\n\u7b2c\u4e00\u9636\u6bb5\uff0cNameNode\u542f\u52a8\uff1a\\r\\n\\r\\n1. \u5982\u679cNameNode\u7b2c1\u6b21\u521d\u59cb\u5316\u5219\u521b\u5efafsimage\u548cedits\u6587\u4ef6\uff0c\u5426\u5219\u52a0\u8f7dfsimage\u548cedits\u5230\u5185\u5b58\uff1b\\r\\n2. \u5ba2\u6237\u7aef\u5bf9\u5143\u6570\u636e\u8fdb\u884c\u589e\u5220\u6539\u7684\u8bf7\u6c42\uff1b\\r\\n3. NameNode\u8bb0\u5f55\u64cd\u4f5c\u65e5\u5fd7\uff0c\u66f4\u65b0\u6eda\u52a8\u65e5\u5fd7\uff1b\\r\\n4. NameNode\u5728\u5185\u5b58\u4e2d\u5bf9\u5143\u6570\u636e\u8fdb\u884c\u589e\u5220\u6539\u3002\\r\\n\\r\\n\u7b2c\u4e8c\u9636\u6bb5\uff0cSecondary NameNode\u5de5\u4f5c\uff1a\\r\\n\\r\\n1. 2NN\u8be2\u95eeNN\u662f\u5426\u9700\u8981checkpoint\uff1b\\r\\n2. 2NN\u8bf7\u6c42\u6267\u884ccheckpoint\uff1b\\r\\n3. NN\u6eda\u52a8\u6b63\u5728\u5199\u7684edits\u65e5\u5fd7\uff1b\\r\\n4. \u5c06\u6eda\u52a8\u524d\u7684edits\u548cfsimage\u62f7\u8d1d\u52302NN\uff1b\\r\\n5. 2NN\u52a0\u8f7dedits\u548cfsimage\u5230\u5185\u5b58\u8fdb\u884c\u5408\u5e76\uff1b\\r\\n6. 2NN\u5408\u5e76\u751f\u6210fsimage.checkpoint\uff1b\\r\\n7. 2NN\u5c06fsimage.checkpoint\u62f7\u8d1d\u5230NN\uff1b\\r\\n8. NN\u5c06fsimage.checkpoint\u91cd\u547d\u540d\u4e3afsimage\u3002\\r\\n\\r\\n### fsimage\u548cEdits\\r\\n\\r\\n\u683c\u5f0f\u5316NameNode\u540e\uff0c\u5728`${hadoop.tmp.dir}/dfs/name/current`\u76ee\u5f55\u4e0b\u751f\u6210\u5982\u4e0b\u6587\u4ef6\uff1a\\r\\n\\r\\n- fsimage_0000000000000001081\\r\\n- fsimage_0000000000000001081.md5\\r\\n- seen_txid\\r\\n- VERSION\\r\\n\\r\\nfsimage\u6587\u4ef6\u662fHDFS\u5143\u6570\u636e\u7684\u4e00\u4e2a\u6c38\u4e45\u6027\u68c0\u67e5\u70b9\uff0c\u5305\u542bHDFS\u6587\u4ef6\u7cfb\u7edf\u7684\u6240\u6709\u76ee\u5f55\u548c\u6587\u4ef6inode\u7684\u5e8f\u5217\u5316\u4fe1\u606f\u3002edits\u6587\u4ef6\u5b58\u653eHDFS\u6240\u6709**\u66f4\u65b0**\u64cd\u4f5c\u7684\u8def\u5f84\uff0c\u5ba2\u6237\u7aef\u7684\u6240\u6709\u5199\u64cd\u4f5c\u88ab\u8bb0\u5f55\u5230edits\u4e2d\u3002seen_txid\u6587\u4ef6\u53ea\u4fdd\u5b58\u4e00\u4e2a\u6570\u5b57\uff0c\u5373\u6700\u65b0edit_inprogress\u6587\u4ef6\u540d\u7684\u7248\u672c\u540e\u7f00\u3002\\r\\n\\r\\n### oiv\u548coev\\r\\n\\r\\nHadoop\u63d0\u4f9boiv(**o**ffline fs**i**mage **v**iewer)\u3001oev(**o**ffline **e**dits **v**iewer)\u547d\u4ee4\u5206\u522b\u7528\u4e8e\u67e5\u770bfsimage\u548cedits\u6587\u4ef6\uff0c\u57fa\u672c\u7528\u6cd5\u5982\u4e0b\uff1a\\r\\n\\r\\n```bash\\r\\nhdfs oiv[oev] -p <\u8f6c\u6362\u8f93\u51fa\u6587\u4ef6\u7c7b\u578b> -i <fsimage/edits\u6587\u4ef6\u540d> -o <\u8f6c\u6362\u8f93\u51fa\u6587\u4ef6\u540d>\\r\\n```\\r\\n\\r\\n### Checkpoint\u8bbe\u7f6e\\r\\n\\r\\n2NN\u89e6\u53d1checkpoint\u7684\u6761\u4ef6\u67092\u79cd\uff0c\u7b2c\u4e00\u79cd\u662f\u5b9a\u65f6\u89e6\u53d1\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c2NN\u6bcf\u9694\u4e00\u4e2a\u5c0f\u65f6\u6267\u884c\u4e00\u6b21checkpoint\uff1a\\r\\n\\r\\n```xml title=hdfs-default.xml\\r\\n<property>\\r\\n    <name>dfs.namenode.checkpoint.period</name>\\r\\n    <value>3600s</value>\\r\\n</property>\\r\\n```\\r\\n\\r\\n\u7b2c\u4e8c\u79cd\u662f\u5b9a\u91cf\u89e6\u53d1\uff0c\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4(\u9ed8\u8ba460s)\u68c0\u67e5\u64cd\u4f5c\u6b21\u6570\u662f\u5426\u8fbe\u5230\u5b9a\u91cf(\u9ed8\u8ba4100\u4e07)\u6765\u51b3\u5b9a\u662f\u5426\u6267\u884ccheckpoint\uff1a\\r\\n\\r\\n```xml title=hdfs-default.xml\\r\\n<property>\\r\\n    <name>dfs.namenode.checkpoint.txns</name>\\r\\n    <value>1000000</value>\\r\\n    <description>\u64cd\u4f5c\u52a8\u4f5c\u6b21\u6570</description>\\r\\n</property>\\r\\n<property>\\r\\n    <name>dfs.namenode.checkpoint.check.period</name>\\r\\n    <value>60s</value>\\r\\n    <description>1\u5206\u949f\u68c0\u67e5\u4e00\u6b21\u64cd\u4f5c\u6b21\u6570</description>\\r\\n</property>\\r\\n```\\r\\n\\r\\n## DataNode\u5de5\u4f5c\u673a\u5236\\r\\n\\r\\n\u6570\u636e\u5757\u5728DataNode\u4e0a\u5b58\u50a8\u5305\u542b2\u4e2a\u6587\u4ef6\uff0c\u6570\u636e\u672c\u8eab\u548c\u5143\u6570\u636e\u6587\u4ef6\uff0c\u540e\u8005\u5305\u542b\u6570\u636e\u5757\u7684\u957f\u5ea6\u3001\u68c0\u9a8c\u548c\u4ee5\u53ca\u65f6\u95f4\u6233\u3002DataNode\u5de5\u4f5c\u673a\u5236\u5982\u4e0b\uff1a\\r\\n\\r\\n1. DataNode\u542f\u52a8\u540e\u5411NameNode\u6ce8\u518c\uff1b\\r\\n2. DataNode\u6ce8\u518c\u6210\u529f\uff1b\\r\\n3. DataNode\u5468\u671f\u6027(\u9ed8\u8ba46\u5c0f\u65f6)\u5730\u5411NN\u62a5\u544a\u6240\u6709\u5757\u4fe1\u606f\uff1b\\r\\n\\r\\n```xml\\r\\n<property>\\r\\n    <name>dfs.blockreport.intervalMsec</name>\\r\\n    <value>21600000</value>\\r\\n    <description>Determines block reporting interval in \\r\\n    milliseconds.</description>\\r\\n</property>\\r\\n<property>\\r\\n    <name>dfs.datanode.directoryscan.interval</name>\\r\\n    <value>21600s</value>\\r\\n    <description>Interval in seconds for Datanode to scan data \\r\\n    directories and reconcile the difference between blocks in memory and on \\r\\n    the disk.\\r\\n    Support multiple time unit suffix(case insensitive), as described\\r\\n    in dfs.heartbeat.interval.\\r\\n    </description>\\r\\n</property>\\r\\n```\\r\\n\\r\\n4. DataNode\u6bcf\u96943s\u5411NN\u53d1\u9001\u5fc3\u8df3\uff0c\u5982\u679c\u8d85\u8fc710\u5206\u949f+30\u79d2\u6ca1\u6709\u6536\u5230\u6765\u81eaDataNode\u7684\u5fc3\u8df3\uff0cNN\u8ba4\u4e3a\u8be5\u8282\u70b9\u4e0d\u53ef\u7528\u3002\\r\\n\\r\\n### \u6570\u636e\u5b8c\u6574\u6027\\r\\n\\r\\nDataNode\u4f7f\u7528crc32\u7b97\u6cd5\u5bf9block\u8fdb\u884c\u6821\u9a8c\uff0ccopyToLocalFile\u65b9\u6cd5\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u8bbe\u7f6e\u4e3afalse\uff0c\u4e0b\u8f7d\u540e\u591a\u4e00\u4e2acrc\u6587\u4ef6\u3002\\r\\n\\r\\n### \u8d85\u65f6\u8bbe\u7f6e\\r\\n\\r\\n\u5f53DataNode\u8fdb\u7a0b\u6b7b\u4ea1\u6216\u8005\u7531\u7f51\u7edc\u6545\u969c\u9020\u6210DataNode\u4e0eNameNode\u65e0\u6cd5\u901a\u4fe1\u65f6\uff0cNN\u4e0d\u4f1a\u7acb\u5373\u5224\u65ad\u8be5DataNode\u4e0d\u53ef\u7528\uff0c\u800c\u662f\u7ecf\u8fc7\u4e00\u6bb5\u8d85\u65f6\u65f6\u957ftimeout\u540e\u624d\u5224\u5b9a\uff1a\\r\\n\\r\\ntimeout=2 \\\\* dfs.namenode.heartbeat.recheck-interval + 10 \\\\* dfs.heartbeat.interval\\r\\n\\r\\n\u9ed8\u8ba4recheck-interval\u5927\u5c0f\u4e3a5\u5206\u949f\uff0cdfs.heartbeat.interval\u4e3a3\u79d2\u3002\\r\\n\\r\\n## \u603b\u7ed3\\r\\n\\r\\n1. Block\u5927\u5c0f\u4e0e\u78c1\u76d8\u8bfb\u5199\u901f\u5ea6\u76f8\u5173\uff0c\u4e00\u822c\u8bbe\u7f6e128MB\u6216\u8005256MB\uff1b\\r\\n2. HDFS Shell\u64cd\u4f5c\uff1b\\r\\n3. HDFS\u8bfb\u5199\u6d41\u7a0b:star:\u3002"},{"id":"/2022/01/29/Learning-Hadoop3.x-01","metadata":{"permalink":"/blog/2022/01/29/Learning-Hadoop3.x-01","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2022-01-29-Learning-Hadoop3.x-01.md","source":"@site/blog/2022-01-29-Learning-Hadoop3.x-01.md","title":"Hadoop 3.x\u5b66\u4e60\u7b14\u8bb0(1)","description":"Hadoop 3.1.3\u5b66\u4e60\u7b14\u8bb0(1)","date":"2022-01-29T00:00:00.000Z","formattedDate":"January 29, 2022","tags":[{"label":"Hadoop","permalink":"/blog/tags/hadoop"},{"label":"BigData","permalink":"/blog/tags/big-data"}],"readingTime":8.805,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"Hadoop 3.x\u5b66\u4e60\u7b14\u8bb0(1)","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["Hadoop","BigData"],"description":"Hadoop 3.1.3\u5b66\u4e60\u7b14\u8bb0(1)","hide_table_of_contents":false},"prevItem":{"title":"Hadoop 3.x\u5b66\u4e60\u7b14\u8bb0(2)","permalink":"/blog/2022/01/30/Learning-Hadoop3.x-02"},"nextItem":{"title":"FlinkX\u6e90\u7801\u5256\u6790(2)","permalink":"/blog/2022/01/17/FlinkX-Source-Code-Dissection-02"}},"content":":pencil:Hadoop 3.1.3\u5b66\u4e60\u7b14\u8bb0\u7b2c1\u7bc7\uff1a\u57fa\u4e8eVMWare\u865a\u62df\u673a\u7684Hadoop\u96c6\u7fa4\u73af\u5883\u642d\u5efa\u3002\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## \u57fa\u7840\u73af\u5883\u51c6\u5907\\r\\n\\r\\n### \u538b\u7f29\u5305\u4e0b\u8f7d\u4e0e\u7cfb\u7edf\u73af\u5883\\r\\n\\r\\n\u4ece[Hadoop Releases](http://archive.apache.org/dist/hadoop/common/)\u4e0b\u8f7dHadoop 3.1.3\u538b\u7f29\u5305\u5e76\u62f7\u8d1d\u5230\u865a\u62df\u673a\u4e2d\uff0c\u7136\u540e\u89e3\u538b\u5230`/opt/module`\u76ee\u5f55\u3002\u4ece[Java SE 8 Archive Downloads](https://www.oracle.com/java/technologies/javase/javase8-archive-downloads.html)\u4e0b\u8f7dJDk 8\u538b\u7f29\u5305\u5e76\u62f7\u8d1d\u5230\u865a\u62df\u673a\u4e2d\uff0c\u540c\u6837\u89e3\u538b\u5230`/opt/module`\u76ee\u5f55\u3002\\r\\n\\r\\n\u5728`/etc/profile.d`\u6587\u4ef6\u5939\u4e0b\u521b\u5efamy_env.sh\u6587\u4ef6\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff0c**\u6267\u884c\u547d\u4ee4`source /etc/profile`\u4f7f\u73af\u5883\u53d8\u91cf\u751f\u6548**\u3002\\r\\n\\r\\n```bash\\r\\n# JAVA_HOME\\r\\nexport JAVA_HOME=/opt/module/jdk1.8.0_212\\r\\nexport PATH=$PATH:$JAVA_HOME/bin\\r\\n\\r\\n# HADOOP_HOME\\r\\nexport HADOOP_HOME=/opt/module/hadoop-3.1.3\\r\\nexport PATH=$PATH:$HADOOP_HOME/bin\\r\\nexport PATH=$PATH:$HADOOP_HOME/sbin\\r\\n```\\r\\n\\r\\n### \u6587\u4ef6\u540c\u6b65\u811a\u672c\\r\\n\\r\\n\u4e3a\u4e86\u65b9\u4fbf\u5728\u96c6\u7fa4\u4e0a\u7684\u5404\u4e2a\u8282\u70b9\u95f4\u540c\u6b65\u914d\u7f6e\u6587\u4ef6\uff0c\u7f16\u5199xsync\u811a\u672c\u5982\u4e0b\u6240\u793a\u3002\u8be5\u811a\u672c\u5b9e\u9645\u662f\u5bf9rsync\u547d\u4ee4\u7684\u5c01\u88c5\uff0c\u4e0escp\u76f8\u6bd4\uff0crsync\u53ea\u540c\u6b65\u5dee\u5f02\u6587\u4ef6\u800cscp\u540c\u6b65\u6240\u6709\u6587\u4ef6\u3002\u6ce8\u610f\u540c\u6b65\u6587\u4ef6\u7684\u53cc\u65b9\u90fd\u5b89\u88c5rsync\uff0c\u5e76**\u5c06xysnc\u811a\u672c\u653e\u5728${HOME}/bin\u76ee\u5f55\u4e0b**\u4ee5\u4fbf\u968f\u5904\u8c03\u7528\u3002\\r\\n\\r\\n```bash title=xsync.sh\\r\\n#!/bin/bash\\r\\n#1. \u5224\u65ad\u53c2\u6570\u4e2a\u6570\\r\\nif [ $# -lt 1 ]\\r\\nthen\\r\\n  echo Not Enough Arguement!\\r\\n  exit;\\r\\nfi\\r\\n\\r\\n#2. \u904d\u5386\u96c6\u7fa4\u6240\u6709\u673a\u5668\\r\\nfor host in hadoop102 hadoop103 hadoop104\\r\\ndo\\r\\n  echo ==================== $host ====================\\r\\n  #3. \u904d\u5386\u6240\u6709\u76ee\u5f55\uff0c\u6328\u4e2a\u53d1\u9001\\r\\n  for file in $@\\r\\n  do\\r\\n  #4. \u5224\u65ad\u6587\u4ef6\u662f\u5426\u5b58\u5728\\r\\n  if [ -e $file ]\\r\\n  then\\r\\n  #5. \u83b7\u53d6\u7236\u76ee\u5f55\\r\\n  # dirname\u662fshell\u547d\u4ee4\uff0c\u5217\u51fa\u6587\u4ef6\u7edd\u5bf9\u8def\u5f84\uff0ccd -P\uff1a\u5bf9\u4e8e\u8f6f\u8fde\u63a5\u8fdb\u5165\u5b9e\u9645\u76ee\u5f55\\r\\n  pdir=$(cd -P $(dirname $file); pwd)\\r\\n  #6. \u83b7\u53d6\u5f53\u524d\u6587\u4ef6\u7684\u540d\u79f0\\r\\n  fname=$(basename $file)\\r\\n  ssh $host \\"mkdir -p $pdir\\"         # mkdir -p \u5728\u6587\u4ef6\u5939\u5df2\u7ecf\u5b58\u5728\u65f6\u4e0d\u62a5\u9519\\r\\n  rsync -av $pdir/$fname $host:$pdir\\r\\n  else\\r\\n  echo $file does not exists!\\r\\n  fi\\r\\n  done\\r\\ndone\\r\\n```\\r\\n\\r\\n### \u514d\u5bc6\u767b\u5f55\\r\\n\\r\\n\u5728xsync\u811a\u672c\u4e2d\u4f7f\u7528ssh\u767b\u5f55\u76ee\u6807\u7aef\u5e76\u521b\u5efa\u76ee\u5f55\uff0c\u4e3a\u4e86\u5b9e\u73b0\u514d\u5bc6\u767b\u5f55\uff0c\u6267\u884c\u5982\u4e0b\u547d\u4ee4\uff1a\\r\\n\\r\\n```bash\\r\\nssh-genkey -t rsa        # \u751f\u6210\u672c\u673a\u5bc6\u94a5\u5bf9\\r\\nssh-copy-id hadoop103    # \u672c\u673a\u516c\u94a5\u4f20\u5230hadoop103\uff0c\u5b9e\u73b0\u514d\u5bc6\u767b\u5f55\\r\\n```\\r\\n\\r\\n## Hadoop\u914d\u7f6e\u4e0e\u542f\u52a8\\r\\n\\r\\n### \u8282\u70b9\u89c4\u5212\\r\\n\\r\\n| \u8282\u70b9\u89d2\u8272   | hadoop102         | hadoop103                   | hadoop104                  |\\r\\n| --------- | ----------------- | --------------------------- | -------------------------- |\\r\\n| HDFS      | NameNode DataNode | DataNode                    | SecondaryNameNode DataNode |\\r\\n| YARN      | NodeManager       | ResourceManager NodeManager | NodeManager                |\\r\\n\\r\\n\u6ce8\u610fNameNode\u548cSecondaryNameNode\u4e0d\u80fd\u5728\u76f8\u540c\u8282\u70b9\uff0cResourceManager\u5f00\u9500\u9ad8\uff0c\u4e0d\u80fd\u548cNameNode\u3001SecondaryNameNode\u5728\u76f8\u540c\u8282\u70b9\u3002\\r\\n\\r\\n### \u914d\u7f6e\u6587\u4ef6\\r\\n\\r\\nHadoop\u914d\u7f6e\u6587\u4ef6\u90fd\u5728`${HADOOP_HOME}/etc/hadoop`\u76ee\u5f55\u4e0b\uff0c\u642d\u5efa\u96c6\u7fa4\u73af\u5883\u9700\u8981\u4fee\u6539\u7684\u914d\u7f6e\u6587\u4ef6\u6709core-site.xml\u3001hdfs-site.xml\u3001yarn-site.xml\u3001mapred-site.xml\u548cworkers\uff0c\u914d\u7f6e\u5185\u5bb9\u5982\u4e0b\uff1a\\r\\n\\r\\n```xml title=core-site.xml\\r\\n<configuration>\\r\\n  \x3c!-- \u6307\u5b9aNameNode\u5730\u5740(Hadoop\u5185\u90e8\u901a\u4fe1\u7528) --\x3e\\r\\n  <property>\\r\\n    <name>fs.defaultFS</name>\\r\\n    <value>hdfs://hadoop102:8020</value>\\r\\n  </property>\\r\\n  \x3c!-- \u6307\u5b9aHadoop\u6570\u636e\u7684\u5b58\u50a8\u76ee\u5f55 --\x3e\\r\\n  <property>\\r\\n    <name>hadoop.tmp.dir</name>\\r\\n    <value>/opt/module/hadoop-3.1.3/data</value>\\r\\n  </property>\\r\\n  \x3c!-- \u6307\u5b9aHDFS\u7f51\u9875\u767b\u5f55\u4f7f\u7528\u7684\u9759\u6001\u7528\u6237\u4e3akayhaw --\x3e\\r\\n  <property>\\r\\n    <name>hadoop.http.staticuser.user</name>\\r\\n    <value>kayhaw</value>\\r\\n  </property>\\r\\n</configuration>\\r\\n```\\r\\n\\r\\n```xml title=hdfs-site.xml\\r\\n<configuration>\\r\\n  \x3c!-- nn web\u7aef\u8bbf\u95ee\u5730\u5740(\u5916\u90e8\u8bbf\u95ee\u7528) --\x3e\\r\\n  <property>\\r\\n  <name>dfs.namenode.http-address</name>\\r\\n    <value>hadoop102:9870</value>\\r\\n  </property>\\r\\n  \x3c!-- 2nn web\u7aef\u8bbf\u95ee\u5730\u5740 --\x3e\\r\\n  <property>\\r\\n    <name>dfs.namenode.secondary.http-address</name>\\r\\n    <value>hadoop104:9868</value>\\r\\n  </property>\\r\\n</configuration>\\r\\n```\\r\\n\\r\\n```xml title=yarn-site.xml\\r\\n<configuration>\\r\\n  \x3c!-- \u6307\u5b9aMR\u8d70shuffle --\x3e\\r\\n  <property>\\r\\n    <name>yarn.nodemanager.aux-services</name>\\r\\n    <value>mapreduce_shuffle</value>\\r\\n  </property>\\r\\n  \x3c!-- \u6307\u5b9aResourceManager\u7684\u5730\u5740 --\x3e\\r\\n  <property>\\r\\n    <name>yarn.resourcemanager.hostname</name>\\r\\n    <value>hadoop103</value>\\r\\n  </property>\\r\\n  \x3c!-- \u73af\u5883\u53d8\u91cf\u7684\u7ee7\u627f --\x3e\\r\\n  <property>\\r\\n    <name>yarn.nodemanager.env-whitelist</name> \\r\\n    <value>JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CO\\r\\nNF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_MAP\\r\\nRED_HOME</value>\\r\\n  </property>\\r\\n  \x3c!-- \u5f00\u542f\u65e5\u5fd7\u805a\u96c6\u529f\u80fd --\x3e\\r\\n  <property>\\r\\n    <name>yarn.log-aggregation-enable</name>\\r\\n    <value>true</value>\\r\\n  </property>\\r\\n  \x3c!-- \u8bbe\u7f6e\u65e5\u5fd7\u805a\u96c6\u670d\u52a1\u5668\u5730\u5740 --\x3e\\r\\n  <property> \\r\\n    <name>yarn.log.server.url</name> \\r\\n    <value>http://hadoop102:19888/jobhistory/logs</value>\\r\\n  </property>\\r\\n  \x3c!-- \u8bbe\u7f6e\u65e5\u5fd7\u4fdd\u7559\u65f6\u95f4\u4e3a7\u5929 --\x3e\\r\\n  <property>\\r\\n    <name>yarn.log-aggregation.retain-seconds</name>\\r\\n    <value>604800</value>\\r\\n  </property>\\r\\n  \x3c!-- \u8bbe\u7f6e\u865a\u62df/\u7269\u7406\u5185\u5b58\u6bd4\u4f8b --\x3e\\r\\n  <property>\\r\\n    <name>yarn.nodemanager.vmem-pmem-ratio</name>\\r\\n    <value>3</value>\\r\\n  </property>\\r\\n</configuration>\\r\\n```\\r\\n\\r\\n\u5176\u4e2d\uff0c\u8bbe\u7f6e\u865a\u62df/\u7269\u7406\u5185\u5b58\u6bd4\u4f8b\u662f\u56e0\u4e3a\u5728\u8fd0\u884cmr\u4efb\u52a1\u4e2d\u51fa\u73b0\u5982\u4e0b\u60c5\u51b5\uff1aHadoop\u6839\u636e\u9ed8\u8ba4\u914d\u7f6e\u7684\u6240\u9700\u7269\u7406\u5185\u5b58\u5927\u5c0f(1GB)\u6309\u7167\u6bd4\u4f8b2.1(\u9ed8\u8ba4)\u5206\u914d\u865a\u62df\u5185\u5b582.1GB\uff0c\u5b9e\u9645\u7a0b\u5e8f\u7528\u52302.4GB\u8d85\u8fc7\u5206\u914d\u5927\u5c0f\uff0c\u56e0\u6b64\u8fd9\u91cc\u5c06\u6bd4\u4f8b\u589e\u81f33\u3002\u65e5\u5fd7\u805a\u96c6\u5c06\u5e94\u7528\u65e5\u5fd7\u4fdd\u5b58\u5230HDFS\u4e0a\uff0c\u65b9\u4fbf\u67e5\u770b\u7a0b\u5e8f\u8fd0\u884c\u8be6\u60c5\u3002\\r\\n\\r\\n```bash\\r\\n2022-01-29 12:45:55,708 INFO mapreduce.Job: Task Id : attempt_1643428629319_0003_m_000000_2, Status : FAILED\\r\\n[2022-01-29 12:45:55.069]Container [pid=5003,containerID=container_1643428629319_0003_01_000004] is running 299792896B beyond the \'VIRTUAL\' memory limit. Current usage: 137.7 MB of 1 GB physical memory used; 2.4 GB of 2.1 GB virtual memory used. Killing container.\\r\\n```\\r\\n\\r\\n```xml title=mapred-site.xml\\r\\n<configuration>\\r\\n  \x3c!-- \u6307\u5b9aMapReduce\u7a0b\u5e8f\u8fd0\u884c\u5728Yarn\u4e0a --\x3e\\r\\n  <property>\\r\\n    <name>mapreduce.framework.name</name>\\r\\n    <value>yarn</value>\\r\\n  </property>\\r\\n  \x3c!-- \u6307\u5b9aMR\u73af\u5883\u53d8\u91cf --\x3e\\r\\n  <property>\\r\\n    <name>yarn.app.mapreduce.am.env</name>\\r\\n    <value>HADOOP_MAPRED_HOME=/opt/module/hadoop-3.1.3/</value>\\r\\n    </property>\\r\\n  <property>\\r\\n    <name>mapreduce.map.env</name>\\r\\n    <value>HADOOP_MAPRED_HOME=/opt/module/hadoop-3.1.3/</value>\\r\\n  </property>\\r\\n  <property>\\r\\n    <name>mapreduce.reduce.env</name>\\r\\n    <value>HADOOP_MAPRED_HOME=/opt/module/hadoop-3.1.3/</value>\\r\\n  </property>\\r\\n  \x3c!-- \u5386\u53f2\u670d\u52a1\u5668\u7aef\u5730\u5740 --\x3e\\r\\n  <property>\\r\\n    <name>mapreduce.jobhistory.address</name>\\r\\n    <value>hadoop102:10020</value>\\r\\n  </property>\\r\\n  \x3c!-- \u5386\u53f2\u670d\u52a1\u5668web\u7aef\u5730\u5740 --\x3e\\r\\n  <property>\\r\\n    <name>mapreduce.jobhistory.webapp.address</name>\\r\\n    <value>hadoop102:19888</value>\\r\\n  </property>\\r\\n</configuration>\\r\\n```\\r\\n\\r\\n**\u5386\u53f2\u65e5\u5fd7\u670d\u52a1\u9700\u8981\u624b\u52a8\u8f93\u5165\u547d\u4ee4`mapred --daemon start historyserver`\u542f\u52a8**\u3002\\r\\n\\r\\n```yaml title=workers\\r\\n# \u6ce8\u610f\u4e0d\u5141\u8bb8\u51fa\u73b0\u7a7a\u884c\u6216\u884c\u5c3e\u7a7a\u683c\\r\\nhadoop102\\r\\nhadoop103\\r\\nhadoop104\\r\\n```\\r\\n\\r\\n\u5b8c\u6210\u5982\u4e0a\u914d\u7f6e\u540e\uff0c\u4e00\u5b9a\u8981\u8bb0\u5f97**\u4f7f\u7528xsync\u5de5\u5177\u5c06\u6240\u6709\u914d\u7f6e\u6587\u4ef6\u540c\u6b65\u5230\u5404\u4e2a\u8282\u70b9**\u3002\\r\\n\\r\\n### \u542f\u52a8\u96c6\u7fa4\\r\\n\\r\\n1. \u683c\u5f0f\u5316namenode\u8282\u70b9\uff1a`hdfs namenode -format`\uff0c**\u4ec5\u7b2c\u4e00\u6b21\u542f\u52a8Hadoop\u73af\u5883\u9700\u8981**\uff1b\\r\\n2. \u5728namenode\u8282\u70b9\u4e0a\u542f\u52a8HDFS\uff1a`start-dfs.sh`\uff0c\u6ce8\u610f\u4e0d\u662fhdfs:smirk:\uff1b\\r\\n3. \u5728resourcemanager\u8282\u70b9\u4e0a\u542f\u52a8YARN\uff1a`start-yarn.sh`\uff1b\\r\\n4. \u6d4f\u89c8\u5668\u8f93\u5165\u5730\u5740`http://hadoop102:9870`\u548c`http://hadoop103}:8088`\u5206\u522b\u67e5\u770bHDFS\u548cYARN\u60c5\u51b5\u3002\\r\\n\\r\\n## \u811a\u672c\u5de5\u5177\\r\\n\\r\\n\u4e3a\u4e86\u65b9\u4fbf\u5728\u4e0d\u540c\u8282\u70b9\u4e0a\u542f\u52a8\u3001\u5173\u95ed\u96c6\u7fa4\uff0c\u7f16\u5199\u5982\u4e0b\u811a\u672c\uff1a\\r\\n\\r\\n```bash title=myhadoop.sh\\r\\n#!/bin/bash\\r\\nif [ $# -lt 1 ]\\r\\nthen\\r\\n  echo \\"No Args Input...\\"\\r\\n  exit ;\\r\\nfi\\r\\ncase $1 in\\r\\n\\"start\\")\\r\\n  echo \\" =================== \u542f\u52a8 hadoop \u96c6\u7fa4 ===================\\"\\r\\n  echo \\" --------------- \u542f\u52a8 hdfs ---------------\\"\\r\\n  ssh hadoop102 \\"/opt/module/hadoop-3.1.3/sbin/start-dfs.sh\\"\\r\\n  echo \\" --------------- \u542f\u52a8 yarn ---------------\\"\\r\\n  ssh hadoop103 \\"/opt/module/hadoop-3.1.3/sbin/start-yarn.sh\\"\\r\\n  echo \\" --------------- \u542f\u52a8 historyserver ---------------\\"\\r\\n  ssh hadoop102 \\"/opt/module/hadoop-3.1.3/bin/mapred --daemon start historyserver\\"\\r\\n;;\\r\\n\\"stop\\")\\r\\n  echo \\" =================== \u5173\u95ed hadoop \u96c6\u7fa4 ===================\\"\\r\\n  echo \\" --------------- \u5173\u95ed historyserver ---------------\\"\\r\\n  ssh hadoop102 \\"/opt/module/hadoop-3.1.3/bin/mapred --daemon stop historyserver\\"\\r\\n  echo \\" --------------- \u5173\u95ed yarn ---------------\\"\\r\\n  ssh hadoop103 \\"/opt/module/hadoop-3.1.3/sbin/stop-yarn.sh\\"\\r\\n  echo \\" --------------- \u5173\u95ed hdfs ---------------\\"\\r\\n  ssh hadoop102 \\"/opt/module/hadoop-3.1.3/sbin/stop-dfs.sh\\"\\r\\n;;\\r\\n*)\\r\\n  echo \\"Input Args Error...\\"\\r\\n;;\\r\\nesac\\r\\n```\\r\\n\\r\\n\u4e3a\u4e86\u67e5\u770b\u5404\u8282\u70b9java\u8fdb\u7a0b\uff0c\u7f16\u5199\u5982\u4e0b\u811a\u672c\uff1a\\r\\n\\r\\n```bash title=jpsall.sh\\r\\n#!/bin/bash\\r\\nfor host in hadoop102 hadoop103 hadoop104\\r\\ndo\\r\\n  echo =============== $host ===============\\r\\n  ssh $host jps \\r\\ndone\\r\\n```\\r\\n\\r\\n\u6700\u540e\u5c06myhadoop.sh\u548cjpsall.sh\u653e\u5728${HOME}/bin\u76ee\u5f55\u4e0b\uff0c\u4ee5\u4fbf\u968f\u5904\u53ef\u7528\u3002\\r\\n\\r\\n## \u5f02\u5e38\u5904\u7406\\r\\n\\r\\n\u683c\u5f0f\u5316NameNode\u4f1a\u4ea7\u751f\u65b0\u96c6\u7fa4id\uff0c\u5bfc\u81f4NameNode\u548cDataNode\u7684\u96c6\u7fa4id\u4e0d\u4e00\u81f4\uff0c\u4ece\u800c\u51fa\u73b0\u5f02\u5e38(DataNode\u4e2a\u6570\u4e3a0)\uff0c\u6b64\u65f6\u53ef\u4ee5\uff1a\\r\\n\\r\\n1. \u505c\u6b62\u96c6\u7fa4\u670d\u52a1\uff1b\\r\\n2. \u5220\u9664\u6240\u6709\u8282\u70b9\u4e0a\u7684data\u548clogs\u76ee\u5f55\uff1b\\r\\n3. \u91cd\u65b0\u683c\u5f0f\u5316nn\u8282\u70b9\uff1b\\r\\n4. \u91cd\u542f\u96c6\u7fa4\u670d\u52a1\u3002\\r\\n\\r\\n## \u65f6\u95f4\u540c\u6b65\\\\[\u53ef\u9009\\\\]\\r\\n\\r\\n\u5f53\u90e8\u7f72\u5728\u5185\u7f51\u65f6\uff0cHadoop\u96c6\u7fa4\u9700\u8981\u914d\u7f6e\u65f6\u95f4\u540c\u6b65\u670d\u52a1\uff0c\u5426\u5219\u4ea7\u751f\u8282\u70b9\u65f6\u95f4\u504f\u5dee\uff0c\u5bfc\u81f4\u96c6\u7fa4\u6267\u884c\u4efb\u52a1\u65f6\u95f4\u4e0d\u4e00\u81f4\u3002\u5982\u4e0b\u64cd\u4f5c\u4ee5hadoop102\u4e3a\u65f6\u95f4\u670d\u52a1\u5668\uff0c\u8ba9hadoop103\u3001hadoop104\u6bcf\u96941s\u5411\u5176\u5bf9\u51c6\u65f6\u95f4\uff1a\\r\\n\\r\\n1. \u5728\u6240\u6709\u8282\u70b9\u4e0a\u5b89\u88c5ntp\u670d\u52a1\uff1a`yum -y install ntp`\uff1b\\r\\n2. \u5728hadoop102\u4e0a\u8bbe\u7f6e\u5f00\u673a\u81ea\u542fntpd\u670d\u52a1\uff1a`systemctl start ntpd`\uff0c`systemctl enable ntpd`\uff1b\\r\\n3. \u4fee\u6539`/etc/ntp.conf`\u6587\u4ef6\uff1a\\r\\n    1. \u5c06restrict\u4e00\u884c\u4e2d\u7684192.168.1.0\u6539\u4e3ahadoop10x\u7684\u7f51\u5173192.168.10.0\uff1b\\r\\n    2. \u6ce8\u91ca4\u884c`server 0[1,2,3].centos.pool.ntp.org iburst`\uff0c\u4e0d\u4e0e\u5916\u7f51\u65f6\u95f4\u540c\u6b65\uff1b\\r\\n    3. \u672b\u5c3e\u6dfb\u52a0`server 127.127.1.0`\uff1b\\r\\n    4. \u672b\u5c3e\u6dfb\u52a0`fudge 127.127.1.0 stratum 10`\uff1b\\r\\n4. \u4fee\u6539hadoop102\u7684`/etc/sysconf/ntpd`\u6587\u4ef6\uff0c\u6dfb\u52a0`SYNC_HWCLOCK=yes`\uff1b\\r\\n5. hadoop102\u91cd\u542fntpd\u670d\u52a1\uff0c`systemctl restart ntpd`\uff1b\\r\\n6. **\u5176\u4ed6\u8282\u70b9\u5173\u95edntpd\u670d\u52a1**\uff0c\u901a\u8fc7\u547d\u4ee4`sudo crontab -e`\u6253\u5f00\u914d\u7f6e\u6587\u4ef6\u5e76\u6dfb\u52a0\u4e00\u884c`*/1 * * * * /usr/sbin/ntpdate hadoop102`\u3002\\r\\n\\r\\n## \u603b\u7ed3\\r\\n\\r\\n1. \u96c6\u7fa4\u670d\u52a1\u7684\u542f\u52a8/\u7ec8\u6b62\uff1a`start[stop]-dfs.sh`\u3001`start[stop]-yarn.sh`\uff1b\u8282\u70b9\u670d\u52a1\u7684\u542f\u52a8/\u7ec8\u6b62\uff1a`hdfs --daemon start[stop] namenode[datanode][secondarynode]`\u3001`yarn --daemon start[stop] resourcemanager[nodemanager]`\uff1b\\r\\n2. \u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u540e\u8981\u91cd\u542f\u96c6\u7fa4\u670d\u52a1\uff0c\u4fee\u6539\u73af\u5883\u53d8\u91cf\u8981source\u4e00\u4e0b\u4f7f\u5176\u751f\u6548\uff1b\\r\\n3. \u96c6\u7fa4\u5f02\u5e38\u60c5\u51b5\u5206\u6790\uff1a\\r\\n    1. \u683c\u5f0f\u5316NameNode\u751f\u6210\u96c6\u7fa4id\uff1b\\r\\n    2. \u542f\u52a8HDFS\u540eDataNode\u751f\u6210\u548cNameNode\u76f8\u540c\u7684\u96c6\u7fa4id\uff1b\\r\\n    3. \u518d\u6b21\u683c\u5f0f\u5316NameNode\u751f\u6210\u53e6\u4e00\u4e2a\u96c6\u7fa4id\uff0c\u4e0e\u672a\u5220\u9664DataNode\u7684id\u4e0d\u4e00\u81f4\uff1b\\r\\n    4. \u89e3\u51b3\u65b9\u6cd5\u662f\u5728\u7b2c2\u6b21\u683c\u5f0f\u5316\u4e4b\u524d\u5220\u9664DataNode\u4e2d\u7684\u4fe1\u606f(data\u76ee\u5f55)\u3002"},{"id":"/2022/01/17/FlinkX-Source-Code-Dissection-02","metadata":{"permalink":"/blog/2022/01/17/FlinkX-Source-Code-Dissection-02","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2022-01-17-FlinkX-Source-Code-Dissection-02.md","source":"@site/blog/2022-01-17-FlinkX-Source-Code-Dissection-02.md","title":"FlinkX\u6e90\u7801\u5256\u6790(2)","description":"FlinkX\u6e90\u7801\u5256\u6790(2)","date":"2022-01-17T00:00:00.000Z","formattedDate":"January 17, 2022","tags":[{"label":"FlinkX","permalink":"/blog/tags/flink-x"},{"label":"Source code dissection","permalink":"/blog/tags/source-code-dissection"}],"readingTime":7.335,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"FlinkX\u6e90\u7801\u5256\u6790(2)","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["FlinkX","Source code dissection"],"description":"FlinkX\u6e90\u7801\u5256\u6790(2)","hide_table_of_contents":false},"prevItem":{"title":"Hadoop 3.x\u5b66\u4e60\u7b14\u8bb0(1)","permalink":"/blog/2022/01/29/Learning-Hadoop3.x-01"},"nextItem":{"title":"FlinkX\u6e90\u7801\u5256\u6790(1)","permalink":"/blog/2022/01/09/FlinkX-Source-Code-Dissection-01"}},"content":":pencil:FlinkX\u6e90\u7801\u5256\u6790(2)\uff1a\u57fa\u4e8eJDBC\u7684Source\u548cSink\u7b97\u5b50\u6784\u9020\u6d41\u7a0b\u3002\u4ee3\u7801\u6ce8\u91ca\u89c1[![FlinkX Dissection](https://img.shields.io/badge/flinkx-1.12__release__dissection-blue)](https://github.com/kayhaw/flinkx/tree/1.12_release_dissection)\u3002\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## Source\u7b97\u5b50\u7684\u6784\u9020\\r\\n\\r\\n\u4e0a\u4e00\u7bc7\u6587\u7ae0\u5206\u6790\u5230\uff0cFlinkX\u901a\u8fc7`SourceFactory.createSource()`\u6765\u521b\u5efasource\u7b97\u5b50\u5e76\u8fd4\u56deDataStream<RowData\\\\>\u3002\u7531\u4e8eSourceFactory\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u5e76\u4e14createSource\u65b9\u6cd5\u662f\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5\uff0c\u56e0\u6b64\u5fc5\u5b9a\u7531SourceFactory\u7684\u5177\u4f53\u5b50\u7c7b\u6765\u5b9e\u73b0createSource\u65b9\u6cd5(\u6bd4\u5982MysqlSourceFactory)\u3002\u5b9e\u9645\u4e0a\uff0c\u51e0\u4e4e\u6240\u6709\u5173\u7cfb\u578b\u6570\u636e\u5e93\u90fd\u7ee7\u627f\u81eaJdbcSourceFactory\u5e76\u590d\u7528\u5176\u65b9\u6cd5\uff0c\u63a5\u4e0b\u6765\u5177\u4f53\u5206\u6790JdbcSourceFactory\u6e90\u7801(\u5982Kafka\u548cHDFS\u7b49Source\u5176\u4ed6\u7b97\u5b50\u4e4b\u540e\u518d\u770b)\u3002\\r\\n\\r\\n```java title=\\"com/dtstack/flinkx/connector/jdbc/source/JdbcSourceFactory.java\\"\\r\\npublic DataStream<RowData> createSource() {\\r\\n    JdbcInputFormatBuilder builder = getBuilder();\\r\\n\\r\\n    // fetchSize\u548cqueryTimeOut\u4e0d\u53ef\u4ee5\u4e3a0\uff0c\u5426\u5219\u7528\u9ed8\u8ba4\u8bbe\u7f6e\u66ff\u6362\\r\\n    int fetchSize = jdbcConf.getFetchSize();\\r\\n    jdbcConf.setFetchSize(fetchSize == 0 ? getDefaultFetchSize() : fetchSize);\\r\\n\\r\\n    int queryTimeOut = jdbcConf.getQueryTimeOut();\\r\\n    jdbcConf.setQueryTimeOut(queryTimeOut == 0 ? DEFAULT_QUERY_TIMEOUT : queryTimeOut);\\r\\n\\r\\n    // \u7ed9builder\u8bbe\u7f6ejdbcConf\u3001jdbcDialect\u548crowConverter\\r\\n    builder.setJdbcConf(jdbcConf);\\r\\n    builder.setJdbcDialect(jdbcDialect);\\r\\n\\r\\n    AbstractRowConverter rowConverter = null;\\r\\n    if (!useAbstractBaseColumn) {\\r\\n        checkConstant(jdbcConf);\\r\\n        final RowType rowType =\\r\\n                TableUtil.createRowType(jdbcConf.getColumn(), getRawTypeConverter());\\r\\n        rowConverter = jdbcDialect.getRowConverter(rowType);\\r\\n    }\\r\\n    builder.setRowConverter(rowConverter);\\r\\n\\r\\n    return createInput(builder.finish());\\r\\n}\\r\\n```\\r\\n\\r\\ncreateSource\u7684\u903b\u8f91\u53ef\u4ee5\u5206\u4e3a3\u6b65\uff1a1.\u8bbe\u7f6eJdbcInputFormatBuilder.\u8bbe\u7f6eRowConverter\uff1b3.\u521b\u5efa\u8f93\u51fa\u6d41\u3002\\r\\n\\r\\n### JdbcInputFormatBuilder\\r\\n\\r\\n\u4ece\u5176\u540d\u79f0\u540e\u7f00\u53ef\u4ee5\u770b\u51fa\uff0cJdbcInputFormatBuilder\u662fJdbcInputFormat\u7684\u6784\u9020\u7c7b\uff0c\u5373FlinkX\u4f7f\u7528Builder\u8bbe\u8ba1\u6a21\u5f0f\u6765\u521b\u5efaJdbcInputFormat\u5bf9\u8c61\u3002getBuilder\u65b9\u6cd5\u5982\u4e0b\u6240\u793a\uff1a\\r\\n\\r\\n```java\\r\\nprotected JdbcInputFormatBuilder getBuilder() {\\r\\n    return new JdbcInputFormatBuilder(new JdbcInputFormat());\\r\\n}\\r\\n```\\r\\n\\r\\nJdbcSourceFactory\u7684\u5b50\u7c7b\u53ef\u4ee5\u901a\u8fc7\u91cd\u5199getBuilder\u65b9\u6cd5\u6765\u8fd4\u56de\u81ea\u5b9a\u4e49\u7684JdbcInputFormat\uff0c\u6bd4\u5982Db2SourceFactory\u3002\u800cJdbcInputFormat\u7ee7\u627f\u81eaBaseRichInputFormat\uff0c\u5b83\u662fFlinkX\u6240\u6709source\u7b97\u5b50\u7684\u57fa\u7840\uff0c\u5e76\u7ee7\u627f\u81eaFlink API \u63d0\u4f9b\u7684RichInputFormat\u7c7b\u3002\u73b0\u5728\u53ea\u9700\u8981\u5148\u8bb0\u7740\u6211\u4eec\u6784\u9020\u7684InputFormat\u662fJdbcInputFormat\u5b9e\u4f8b\u3002\\r\\n\\r\\n### RowConverter\\r\\n\\r\\nRowConverter\u8d1f\u8d23\u5c06JDBC\u8bfb\u53d6\u7684\u6570\u636e\u8f6c\u4e3aFlink API\u4e2d\u7684RowData\u5f62\u5f0f\uff0c\u66f4\u5177\u4f53\u70b9\uff0c**\u5b83\u5c06JDBC\u5b57\u6bb5\u7c7b\u578b\u6620\u5c04\u4e3aFlink\u4e2d\u7684DataType\u7c7b\u578b**\u3002\u4ee5MySQL\u4e3a\u4f8b\u5206\u6790\uff0cTableUtil.createRowType\u65b9\u6cd5\u6e90\u7801\u5982\u4e0b\uff1a\\r\\n\\r\\n```java\\r\\npublic static RowType createRowType(List<FieldConf> fields, RawTypeConverter converter) {\\r\\n    String[] fieldNames = fields.stream().map(FieldConf::getName).toArray(String[]::new);\\r\\n    String[] fieldTypes = fields.stream().map(FieldConf::getType).toArray(String[]::new);\\r\\n    TableSchema.Builder builder = TableSchema.builder();\\r\\n    for (int i = 0; i < fieldTypes.length; i++) {\\r\\n        DataType dataType = converter.apply(fieldTypes[i]);\\r\\n        builder.add(TableColumn.physical(fieldNames[i], dataType));\\r\\n    }\\r\\n\\r\\n    return (RowType) builder.build().toRowDataType().getLogicalType();\\r\\n}\\r\\n```\\r\\n\\r\\n\u8be5\u65b9\u6cd5\u904d\u5386\u5b57\u6bb5\u7c7b\u578b\u5217\u8868\uff0c\u7531RawTypeConverter.apply\u65b9\u6cd5\u8fd4\u56de\u6bcf\u4e2a\u7c7b\u578b\u5e94\u8be5\u5bf9\u5e94\u7684DataType\u7c7b\u578b\u3002\u56e0\u6b64\uff0c\u51fd\u6570\u5f0f\u63a5\u53e3RawTypeConverter\u7684\u5b9e\u73b0\u5c31\u5c24\u4e3a\u91cd\u8981\uff0c\u5e76\u4e14\u6bcf\u79cd\u6570\u636e\u5e93\u7684\u5e94\u8be5\u5404\u4e0d\u76f8\u540c\u3002\u5982\u4e0b\u4ee3\u7801\u6240\u793a\uff0cRawTypeConverter\u7531JdbcSourceFactory\u7c7b\u7684\u6210\u5458\u53d8\u91cfjdbcDialect\u7ed9\u51fa\uff1a\\r\\n\\r\\n```java\\r\\n@Override\\r\\npublic RawTypeConverter getRawTypeConverter() {\\r\\n    return jdbcDialect.getRawTypeConverter();\\r\\n}\\r\\n```\\r\\n\\r\\n\u800cjdbcDialect\u53c8\u662f\u5728JdbcSourceFactory\u552f\u4e00\u7684\u6784\u9020\u51fd\u6570\u4e2d\u88ab\u8bbe\u7f6e\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\r\\n\\r\\n```java\\r\\npublic JdbcSourceFactory(\\r\\n      SyncConf syncConf, StreamExecutionEnvironment env, JdbcDialect jdbcDialect) {\\r\\n  // \u53c8\u5206\u4e86\u4e00\u5c42\uff0c\u7236\u7c7b\u8c03\u7528\\r\\n  super(syncConf, env);\\r\\n  // jdbcDialect\u7531\u6bcf\u4e2a\u5b50\u7c7b\u81ea\u5df1\u5b9e\u73b0\\r\\n  this.jdbcDialect = jdbcDialect;\\r\\n  ...\\r\\n}\\r\\n```\\r\\n\\r\\n\u56de\u987e\u4e0a\u4e00\u7bc7\u6587\u7ae0\u7684\u5185\u5bb9\uff0c\u901a\u8fc7\u53cd\u5c04\u6765\u521b\u5efaSourceFactory\u5bf9\u8c61\u7684\u4ee3\u7801\u4e3a`Constructor<?> constructor =clazz.getConstructor(SyncConf.class, StreamExecutionEnvironment.class)`\u3002\u8bf6\uff0c\u600e\u4e48\u5c11\u4e86\u4e00\u4e2aJdbcDialect\u53c2\u6570\uff1f\u6ce8\u610f\u5b9e\u9645\u8c03\u7528\u7684\u662f\u5b50\u7c7bxxxSourceFactory\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u4ee5MysqlSourceFactory\u4e3a\u4f8b\uff0c\u53ef\u4ee5\u770b\u5230\u5b83\u662f\u4f20\u5165\u4e86\u81ea\u5df1\u5b9a\u4e49\u7684MysqlDialect\u5bf9\u8c61\uff0c\u800cMysqlDialect\u7684getRawTypeConverter\u8fd4\u56de\u7684\u662fMysqlRawTypeConverter\u7c7b\u7684apply\u65b9\u6cd5\u5f15\u7528\uff0c\u7531\u5b83\u6765\u51b3\u5b9aMySQL\u7684JDBC\u5b57\u6bb5\u7c7b\u578b\u5e94\u8be5\u5bf9\u5e94\u54ea\u4e00\u79cdFlink DataTypes\u3002\\r\\n\\r\\n```java\\r\\npublic MysqlSourceFactory(SyncConf syncConf, StreamExecutionEnvironment env) {\\r\\n    // JdbcSourceFactory\u5b8c\u6210\u901a\u7528\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7684\u516c\u5171\u529f\u80fd\\r\\n    super(syncConf, env, new MysqlDialect());\\r\\n    // \u907f\u514dresult.next\u963b\u585e\\r\\n    if (jdbcConf.isPolling()\\r\\n            && StringUtils.isEmpty(jdbcConf.getStartLocation())\\r\\n            && jdbcConf.getFetchSize() == 0) {\\r\\n        jdbcConf.setFetchSize(1000);\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n:::tip \u5c0f\u7ed3\\r\\n\u53ea\u9700\u8981\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684xxxSourceFactory\u3001xxxDialect\u548cxxxRawTypeConverter\u7c7b\u5c31\u53ef\u4ee5\u8f7b\u677e\u5730\u6dfb\u52a0\u4e00\u79cdJDBC\u6570\u636e\u6e90\u7684source\u7b97\u5b50\uff0c\u8fd9\u662f\u7b56\u7565\u6a21\u5f0f+\u6a21\u677f\u6a21\u5f0f\u7684\u597d\u5904\u3002\\r\\n:::\\r\\n\\r\\n### \u521b\u5efa\u8f93\u51fa\u6d41\\r\\n\\r\\nJdbcSourceFactory\u901a\u8fc7`createInput(builder.finish())`\u6765\u521b\u5efa\u8f93\u51fa\u6d41\uff0c\u8be5\u65b9\u6cd5\u53c8\u8c03\u7528\u6765\u81ea\u7236\u7c7bSourceFactory\u7684createInput\u65b9\u6cd5\uff1a\\r\\n\\r\\n```java title=\\"com/dtstack/flinkx/source/SourceFactory.java\\"\\r\\nprotected DataStream<RowData> createInput(InputFormat<RowData, InputSplit> inputFormat) {\\r\\n    return createInput(inputFormat, this.getClass().getSimpleName().toLowerCase());\\r\\n}\\r\\n```\\r\\n\\r\\nSourceFactory\u7c7bcreateInput\u65b9\u6cd5\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff0c\u5728\u68c0\u67e5\u4f20\u5165\u53c2\u6570\u975e\u7a7a\u540e\uff0c\u901a\u8fc7\u4f20\u5165\u7684inputformat\u548cgetTypeInformation()\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u6784\u9020DtInputFormatSourceFunction\uff0c\u81f3\u6b64\u7ec8\u4e8e\u5f97\u5230\u4e86SourceFunction\u65b9\u6cd5\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u4f7f\u7528env.add\u65b9\u6cd5\u5c06\u5176\u6dfb\u52a0\u5230\u6d41\u6267\u884c\u73af\u5883\uff0c\u5e76\u8fd4\u56de\u8f93\u51fa\u6d41\u3002\\r\\n\\r\\n```java\\r\\nprotected DataStream<RowData> createInput(\\r\\n            InputFormat<RowData, InputSplit> inputFormat, String sourceName) {\\r\\n    Preconditions.checkNotNull(sourceName);\\r\\n    Preconditions.checkNotNull(inputFormat);\\r\\n\\r\\n    DtInputFormatSourceFunction<RowData> function =\\r\\n            new DtInputFormatSourceFunction<>(inputFormat, getTypeInformation());\\r\\n    // \u6dfb\u52a0source\u7b97\u5b50\uff0c\u7b97\u5b50\u540d\u79f0\u662f\u5de5\u5382\u7c7b\u540d\u7684\u5168\u5c0f\u5199\u6a21\u5f0f\uff0c\u5982mysqlsourcefactory\\r\\n    return env.addSource(function, sourceName, getTypeInformation());\\r\\n}\\r\\n```\\r\\n\\r\\n## DtInputFormatSourceFunction\\r\\n\\r\\nDtInputFormatSourceFunction\u7ee7\u627f\u81eaFlink DataStream API\u4e2d\u7684InputFormatSourceFunction\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5b83\u4f9d\u8d56\u4e8eInputFormat\u6765\u63d0\u4f9b\u6570\u636e\u3002DtInputFormatSourceFunction\u91cd\u5199\u4e86\u5982\u4e0b\u751f\u547d\u5468\u671f\u65b9\u6cd5\uff1a\\r\\n\\r\\n```java\\r\\n// \u51c6\u5907\u8f93\u51fa\u73af\u5883\\r\\npublic void open(Configuration parameters);\\r\\n\\r\\n// \u6267\u884c\u8f93\u51fa\u6570\u636e\u6d41\u7684\u51fd\u6570\u4f53\\r\\npublic void run(SourceContext<OUT> ctx) throws Exception;\\r\\n\\r\\n// \u53d6\u6d88\u6267\u884c\uff0c\u5c31\u662f\u5c06run\u65b9\u6cd5\u7684\u8fd0\u884c\u6807\u5fd7\u503c\u4e3afalse\\r\\npublic void cancel();\\r\\n\\r\\n// \u5173\u95ed\u8f93\u51fa\u6d41\uff0c\u8c03\u7528gracefulClose\u4ee3\u52b3\\r\\npublic void public void close() throws Exception;\\r\\n```\\r\\n\\r\\n\u5176\u4e2d\uff0c\u6700\u91cd\u8981\u7684run\u65b9\u6cd5\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002\u9996\u5148\u8c03\u7528format\u7684openInputFormat\u65b9\u6cd5\u8bbe\u7f6e\u8bbe\u7f6ejobName\u3001jobId\u548c\u4efb\u52a1\u7f16\u53f7\uff0c\u5e76\u4e14\u8fd8\u8bbe\u7f6e\u4e86\u8bfb\u53d6\u7684\u5f00\u59cb\u65f6\u95f4\u3002\u63a5\u7740\u5728while\u5faa\u73af\u4e2d\u4e0d\u65ad\u4ea7\u751f\u4e00\u6761\u8f93\u51fa\u6570\u636e\uff0c\u5173\u952e\u65b9\u6cd5\u5206\u522b\u662fformat.open()\u3001format.nextRecord\uff0c\u63a5\u4e0b\u6765\u5177\u4f53\u5206\u6790\u3002\\r\\n\\r\\n<details>\\r\\n<summary>DtInputFormatSourceFunction.run()</summary>\\r\\n\\r\\n```java\\r\\npublic void run(SourceContext<OUT> ctx) throws Exception {\\r\\n    Exception tryException = null;\\r\\n    try {\\r\\n\\r\\n        Counter completedSplitsCounter =\\r\\n                getRuntimeContext().getMetricGroup().counter(\\"numSplitsProcessed\\");\\r\\n        if (isRunning && format instanceof RichInputFormat) {\\r\\n            // openInputFormat\u8bbe\u7f6ejobName\u3001jobId\u548c\u4efb\u52a1\u7f16\u53f7\uff0c\u5e76\u4e14\u5f00\u542f\u81ea\u5b9a\u4e49reporter\\r\\n            // \u5e76\u4e14\u8bbe\u7f6e\u8bfb\u53d6\u7684\u5f00\u59cb\u65f6\u95f4\\r\\n            ((RichInputFormat) format).openInputFormat();\\r\\n        }\\r\\n\\r\\n        OUT nextElement = serializer.createInstance();\\r\\n        while (isRunning) {\\r\\n            // \u8c03\u7528BaseRichInputFormat.open\u65b9\u6cd5\\r\\n            format.open(splitIterator.next());\\r\\n\\r\\n            // for each element we also check if cancel\\r\\n            // was called by checking the isRunning flag\\r\\n\\r\\n            while (isRunning && !format.reachedEnd()) {\\r\\n                synchronized (ctx.getCheckpointLock()) {\\r\\n                    nextElement = format.nextRecord(nextElement);\\r\\n                    if (nextElement != null) {\\r\\n                        ctx.collect(nextElement);\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            format.close();\\r\\n            completedSplitsCounter.inc();\\r\\n\\r\\n            if (isRunning) {\\r\\n                isRunning = splitIterator.hasNext();\\r\\n            }\\r\\n        }\\r\\n    } catch (Exception exception) {\\r\\n        tryException = exception;\\r\\n        LOG.error(\\"Exception happened, start to close format\\", exception);\\r\\n    } finally {\\r\\n        isRunning = false;\\r\\n        gracefulClose();\\r\\n        if (null != tryException) {\\r\\n            throw tryException;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n</details>\\r\\n\\r\\n### BaseRichInputFormat.open\u65b9\u6cd5\\r\\n\\r\\n\u8be5\u65b9\u6cd5\u6838\u5fc3\u529f\u80fd\u901a\u8fc7\u8c03\u7528\u62bd\u8c61\u65b9\u6cd5openInternal\u5b9e\u73b0\uff0c\u5373\u7531\u6bcf\u4e2a\u5b50\u7c7b\u6839\u636e\u81ea\u8eab\u60c5\u51b5\u5b9e\u73b0\u3002\u5bf9\u4e8e\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0cJdbcInputFormat\u7c7b\u5728openInternal\u65b9\u6cd5\u4e2d\u5b9e\u73b0\u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5\u5e76\u67e5\u8be2\u8bb0\u5f55\u7684\u903b\u8f91\uff0c\u5177\u4f53\u7684\u53ef\u4ee5\u5206\u4e3a3\u6b65\uff1a\u83b7\u53d6\u8fde\u63a5\u3001\u6784\u9020\u67e5\u8be2SQL\u3001\u6267\u884cSQL\u3002\\r\\n\\r\\n**\u7b2c\u4e00\u6b65**\uff1a\u83b7\u53d6JDBC\u8fde\u63a5\uff0c\u7531getConnection\u65b9\u6cd5\u5b9e\u73b0\uff0c\u6ce8\u610f\u7d27\u63a5\u7740\u5c06autocommit\u8bbe\u7f6e\u4e3afalse\u3002\\r\\n\\r\\n**\u7b2c\u4e8c\u6b65**\uff1a\u6784\u9020\u67e5\u8be2SQL\uff0cFlinkX\u6839\u636e\u81ea\u8eab\u8bbe\u8ba1\u7684\u4e1a\u52a1\u903b\u8f91**\u5206\u5c42**\u6784\u9020sql\u3002"},{"id":"/2022/01/09/FlinkX-Source-Code-Dissection-01","metadata":{"permalink":"/blog/2022/01/09/FlinkX-Source-Code-Dissection-01","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2022-01-09-FlinkX-Source-Code-Dissection-01.md","source":"@site/blog/2022-01-09-FlinkX-Source-Code-Dissection-01.md","title":"FlinkX\u6e90\u7801\u5256\u6790(1)","description":"FlinkX\u6e90\u7801\u5256\u6790(1)","date":"2022-01-09T00:00:00.000Z","formattedDate":"January 9, 2022","tags":[{"label":"FlinkX","permalink":"/blog/tags/flink-x"},{"label":"Source code dissection","permalink":"/blog/tags/source-code-dissection"}],"readingTime":20.405,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"FlinkX\u6e90\u7801\u5256\u6790(1)","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["FlinkX","Source code dissection"],"description":"FlinkX\u6e90\u7801\u5256\u6790(1)","hide_table_of_contents":false},"prevItem":{"title":"FlinkX\u6e90\u7801\u5256\u6790(2)","permalink":"/blog/2022/01/17/FlinkX-Source-Code-Dissection-02"},"nextItem":{"title":"MySQL\u57fa\u7840\u77e5\u8bc6\u603b\u7ed3(1)","permalink":"/blog/2021/10/26/MySQLSummary"}},"content":":pencil:FlinkX\u6e90\u7801\u5256\u6790(1)\uff1a\u4e3b\u6d41\u7a0b\u5206\u6790\u3002\u4ee5local\u6a21\u5f0f\u8fd0\u884c\u4e3a\u4f8b\u5206\u6790FlinkX\u4e3b\u6d41\u7a0b\u6267\u884c\u903b\u8f91\uff1a\u4ece\u8fd0\u884c\u811a\u672c\u5f00\u59cb\u5230\u914d\u7f6e\u53c2\u6570\u7684\u89e3\u6790\u3001**\u63d2\u4ef6\u7c7b\u52a0\u8f7d**\uff0c\u6700\u540e\u5230Flink\u6d41\u5e94\u7528\u6784\u5efa\u6267\u884c\u3002\u4ee3\u7801\u6ce8\u91ca\u89c1[![FlinkX Dissection](https://img.shields.io/badge/flinkx-1.12__release__dissection-blue)](https://github.com/kayhaw/flinkx/tree/1.12_release_dissection)\u3002\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## \u542f\u52a8\u811a\u672c\\r\\n\\r\\nFlinkX\u63d0\u4f9b\u4e86`bin/flinkx`\u811a\u672c\u7528\u4e8e\u5728\u547d\u4ee4\u884c\u5feb\u901f\u542f\u52a8\u540c\u6b65\u4efb\u52a1\uff0c\u5b83\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2ajava\u547d\u4ee4\u7684\u5c01\u88c5\uff0c\u4f46\u8fd8\u662f\u8981\u5c55\u5f00\u6765\u4ed4\u7ec6\u5730\u8bb2\u8bb2\u5b83\u7528\u5230\u7684\u4e00\u4e9bbash\u77e5\u8bc6\u3002\\r\\n\\r\\n\u9996\u5148\u7b2c\u4e00\u884c`set -e`\uff0c\u4f5c\u7528\u662f\u8ba9\u811a\u672c\u6267\u884c\u9519\u8bef\u65f6\u7acb\u5373\u9000\u51fa\uff0c\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6267\u884c\u547d\u4ee4\u9519\u8bef\u540e\u4f1a\u7ee7\u7eed\u6267\u884c\uff0c\u5efa\u8bae\u5728\u6240\u6709\u811a\u672c\u5934\u90e8\u90fd\u52a0\u4e0a\u3002\u63a5\u4e0b\u6765\u8fd9\u4e2a\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u7684\u4ee3\u7801\u5c31\u5f88:smirk:\u4e86\uff1a\\r\\n\\r\\n```bash\\r\\nexport FLINKX_HOME=\\"$(cd \\"`dirname \\"$0\\"`\\"/..; pwd)\\"\\r\\n```\\r\\n\\r\\n\u4ece\u5916\u5230\u5185\u5206\u6790\uff0c\u4f7f\u7528`$()`\u6267\u884c2\u6761\u547d\u4ee4``cd \\"`dirname \\"$0\\"`\\"/..``\u548c`pwd`\u3002\u7b2c\u4e00\u6761cd\u547d\u4ee4\u7684\u53c2\u6570\u53c8\u7531\u547d\u4ee4`` `dirname \\"$0\\"` ``\u7ed9\u51fa\uff0c`dirname`\u662fbash\u5185\u7f6e\u547d\u4ee4\uff0c\u8f93\u51fa\u540e\u9762\u53c2\u6570\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\u8def\u5f84\uff0c\u800c\u53c2\u6570`\\"$0\\"`\u8868\u793a\u811a\u672c\u6587\u4ef6`flinkx`\u3002\u7ed3\u5408\u8d77\u6765\u7684\u542b\u4e49\u5c31\u662f\u5207\u6362\u5230flinkx\u8fd9\u4e2a\u811a\u672c\u6587\u4ef6\u6240\u5728\u7684\u7236\u76ee\u5f55bin\u4e0b\uff0c\u7136\u540e\u518d\u5207\u6362\u5230\u4e0a\u4e00\u5c42\u76ee\u5f55\u5230\u9879\u76ee\u76ee\u5f55\uff0c\u6700\u540e\u6253\u5370\u7edd\u5bf9\u8def\u5f84\uff0c\u5373\u8bbe\u7f6e\u7528\u6237\u53d8\u91cfFLINKX_HOME\u4e3a\u9879\u76ee\u6587\u4ef6\u5939\u7684\u7edd\u5bf9\u8def\u5f84\u3002\\r\\n\\r\\n- [ ] set\u3001env\u3001export\u7684\u533a\u522b\\r\\n\\r\\n\u63a5\u4e0b\u6765\u770b\u5f53\u524d\u7cfb\u7edf\u80fd\u4e0d\u80fd\u4f7f\u7528java\u7a0b\u5e8f\uff0c\u5148\u770b`JAVA_HOME`\u73af\u5883\u662f\u5426\u5b58\u5728\uff0c\u82e5\u4e0d\u5b58\u5728\u518d\u7528`command -v java`\u770b\u80fd\u4e0d\u80fd\u76f4\u63a5\u6267\u884cjava\u7a0b\u5e8f\uff0c\u518d\u6ca1\u6709\u5c31\u62a5\u9519\u9000\u51fa\u3002\u63a5\u4e0b\u6765\u8bbe\u7f6e\u4e24\u4e2ashell\u53d8\u91cf`JAR_DIR`\u548c\u5165\u53e3\u7c7b\u540d`CLASS_NAME`\uff0c\u7136\u540e\u6267\u884c\u547d\u4ee4\uff1a\\r\\n\\r\\n```bash\\r\\nnohup $JAVA_RUN -cp $JAR_DIR $CLASS_NAME $@ &\\r\\n```\\r\\n\\r\\nnohup\u547d\u4ee4\u662fno hang up\u547d\u4ee4\u7684\u7f29\u5199\uff0c\u5b83\u5c06\u540e\u9762\u8ddf\u7740\u7684\u547d\u4ee4\u6302\u5230\u540e\u53f0\u8fd0\u884c\u5e76\u5c06\u8f93\u51fa\u91cd\u5b9a\u5411\u5230nohup.out\u6587\u4ef6\uff0c\u901a\u5e38\u8ddf`&`\u642d\u914d\u4f7f\u7528\uff0c\u8ba9\u547d\u4ee4\u6267\u884c\u540c\u65f6\u5ffd\u7565SIGINT\u548cSIGHUP\u4fe1\u53f7\u3002\u53d8\u91cf\u66ff\u6362\u540e\u7684\u547d\u4ee4\u5982\u4e0b\uff0c`$@`\u8868\u793a\u6267\u884cflinkx\u811a\u672c\u540e\u9762\u8ddf\u7740\u7684\u6240\u6709\u53c2\u6570\u3002\\r\\n\\r\\n- [ ] nohup\u548c&\u7684\u533a\u522b\\r\\n- [ ] `$@`\uff0c`$#`\uff0c`$1`...`$n`\u7684\u542b\u4e49\\r\\n\\r\\n```bash\\r\\njava -cp /path-to-flinkx/lib/* com.dtstack.flinkx.client.Launcher $@\\r\\n```\\r\\n\\r\\n\u4ee5\u8fd0\u884c\u4e00\u4e2aMySQL\u5230Hive\u7684\u540c\u6b65\u4efb\u52a1\u4e3a\u4f8b\uff0c\u5728Linux\u6267\u884c\u547d\u4ee4\u5982\u4e0b\uff1a\\r\\n\\r\\n```bash\\r\\nbin/flinkx -mode local   \\\\\\r\\n         -jobType sync \\\\\\r\\n         -jobName test_kayhaw \\\\\\r\\n         -job E:\\\\flinkx_job\\\\new_mysql_hive.json \\\\\\r\\n         -flinkxDistDir E:\\\\flinkx\\\\flinkx-dist \\\\\\r\\n```\\r\\n\\r\\n\u5728IEDA\u8fd0\u884cFlinkX\u540c\u6b65\u4efb\u52a1\u914d\u7f6e\u8fd0\u884c\u53c2\u6570\u547d\u4ee4\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5176\u4e2dProgram arguments\u5185\u5bb9\u5373\u4e0a\u8ff0\u547d\u4ee4\u53c2\u6570\u5185\u5bb9\u3002\\r\\n\\r\\n<img style={{width:\\"100%\\", height:\\"100%\\"}} src=\\"/img/blog/FlinkXDissection/FlinkX_IDEA_RunConfig.png\\" title=\\"FlinkX IDEA Run Configuration\\" />\\r\\n\\r\\n## \u547d\u4ee4\u884c\u5165\u53e3Launcher\\r\\n\\r\\n\u4ece`bin/flinx`\u811a\u672c\u5f97\u77e5\u8be5\u547d\u4ee4\u884c\u8fd0\u884c\u5165\u53e3\u4e3aLauncher\u7c7b\uff0c\u5b83\u4f4d\u4e8eflinkx-clients\u6a21\u5757\uff0c\u63a5\u4e0b\u6765\u5bf9\u5176main\u65b9\u6cd5\u5c55\u5f00\u5206\u6790\u3002\\r\\n\\r\\n### \u53c2\u6570\u89e3\u6790\\r\\n\\r\\n\u9996\u5148\u5bf9\u547d\u4ee4\u540e\u9762\u7684\u4e00\u5927\u5768\u53c2\u6570\u8fdb\u884c\u89e3\u6790\uff0c\u501f\u52a9\u4e8eApache Commons CLI\u5305\u6765\u5b8c\u6210\u3002\u4e3a\u4e86\u5c06\u53c2\u6570\u5b57\u7b26\u4e32\u8f6c\u4e3a`com.dtstack.flinkx.options.Options`\u5bf9\u8c61\uff0c\u4f7f\u7528\u53cd\u5c04\u83b7\u53d6Options\u7684\u5b57\u6bb5\uff0c\u7ed3\u5408Common CLI\u63d0\u4f9b\u7684`DefaultParser.parse()`\u65b9\u6cd5\u5c06\u5b57\u7b26\u4e32\u8f6c\u4e3aCommandLine\u5bf9\u8c61\uff0c\u7136\u540e\u518d\u904d\u5386Options\u7684\u5b57\u6bb5\u540d\u79f0name\uff0c\u901a\u8fc7`CommandLine.getOptionValue(name)`\u83b7\u53d6\u53c2\u6570\u503c\uff0c\u6700\u540e\u8bbe\u7f6e\u56de\u7ed9Options\u5bf9\u8c61\u3002\\r\\n\\r\\n### \u9ed8\u8ba4\u53c2\u6570\u914d\u7f6e\\r\\n\\r\\n\u63a5\u4e0b\u6765findDefaultConfigDir()\u65b9\u6cd5\u7528\u4e8e\u5728\u547d\u4ee4\u884c\u6ca1\u6709\u63d0\u4f9b\u7684\u60c5\u51b5\u4e0b\uff0c\u8bbe\u7f6e3\u4e2a\u6587\u4ef6\u5939\u8def\u5f84\u53c2\u6570\u9ed8\u8ba4\u503c\uff0c\u5206\u522b\u662fFlinkX\u8bfb\u5199\u63d2\u4ef6\u5305\u6587\u4ef6\u5939\u3001Flink\u914d\u7f6e\u6587\u4ef6\u5939\u548cHadoop\u914d\u7f6e\u6587\u4ef6\u5939\uff1a\\r\\n\\r\\n```java\\r\\nprivate static void findDefaultConfigDir(Options launcherOptions) {\\r\\n    findDefaultFlinkxDistDir(launcherOptions);\\r\\n\\r\\n    // local\u6a21\u5f0f\u53ea\u9700\u8981\u914d\u7f6eFlinkXDistDir\u8fd9\u4e00\u4e2a\u5c31\u53ef\u4ee5\\r\\n    if (ClusterMode.local.name().equalsIgnoreCase(launcherOptions.getMode())) {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    findDefaultFlinkConf(launcherOptions);\\r\\n    findDefaultHadoopConf(launcherOptions);\\r\\n}\\r\\n```\\r\\n\\r\\n\u4ee5findDefaultFlinkxDistDir()\u4ee3\u7801\u4e3a\u4f8b\uff1a\u5f53\u547d\u4ee4\u884c\u53c2\u6570\u6ca1\u6709flinkDistDir\u65f6\uff0c\u770b\u73af\u5883\u53d8\u91cf\u4e2d\u6709\u6ca1\u6709\u914d\u7f6e`FLINX_HOME`\uff0c\u8fd9\u4e2a\u67e5\u770b\u73af\u5883\u53d8\u91cf\u65b9\u6cd5getSystemProperty()\u4e5f\u6709\u8bb2\u7a76\uff0c\u5148\u8c03\u7528System.getenv()\u770b\u6709\u6ca1\u6709\uff0c\u6ca1\u6709\u518d\u770bSystem.getProperty()\u3002\u5982\u679c\u6709\u73af\u5883\u53d8\u91cf`FLINKX_HOME`\uff0c\u6839\u636e\u5b83\u8bbe\u7f6eflinkx\u63d2\u4ef6\u5305\u8def\u5f84\uff0c\u5e76\u6ce8\u518c\u4e3a\u73af\u5883\u53d8\u91cf`ConfigConstants.ENV_FLINK_PLUGINS_DIR`\u3002\\r\\n\\r\\n```java\\r\\nprivate static void findDefaultFlinkxDistDir(Options launcherOptions) {\\r\\n    String distDir = launcherOptions.getFlinkxDistDir();\\r\\n    // \u5982\u679c\u8fd0\u884c\u53c2\u6570\u8fd8\u672a\u8bbe\u7f6e\uff0c\u901a\u8fc7\u7cfb\u7edf\u53d8\u91cf\u6765\u81ea\u5df1\u627e\\r\\n    if (StringUtils.isEmpty(distDir)) {\\r\\n        String flinkxHome = getSystemProperty(KEY_FLINKX_HOME);\\r\\n        if (StringUtils.isNotEmpty(flinkxHome)) {\\r\\n            flinkxHome = flinkxHome.trim();\\r\\n            // \u8fd8\u8003\u8651\u5230\u8def\u5f84\u6700\u672b\u5c3e\u6709\u6ca1\u6709\u52a0\u8def\u5f84\u5206\u9694\u7b26\uff0c\u7ec6\uff01\\r\\n            if (flinkxHome.endsWith(File.separator)) {\\r\\n                distDir = flinkxHome + PLUGINS_DIR_NAME;\\r\\n            } else {\\r\\n                distDir = flinkxHome + File.separator + PLUGINS_DIR_NAME;\\r\\n            }\\r\\n\\r\\n            launcherOptions.setFlinkxDistDir(distDir);\\r\\n        }\\r\\n    }\\r\\n    System.setProperty(ConfigConstants.ENV_FLINK_PLUGINS_DIR, distDir);\\r\\n}\\r\\n```\\r\\n\\r\\nfindDefaultFlinkConf()\u65b9\u6cd5\u5728\u6709\u73af\u5883\u53d8\u91cfFLIN**K**_HOME\u8bbe\u7f6e\u7684\u60c5\u51b5\u4e0b\uff0c\u8865\u5145\u8bbe\u7f6eFlink\u7684conf\u76ee\u5f55\u548clib\u76ee\u5f55\u53c2\u6570\u3002findDefaultHadoopConf()\u65b9\u6cd5\u7c7b\u4f3c\u67e5\u770bHADOOP_HOME\u73af\u5883\u53d8\u91cf\u5e76\u8bbeHadoop conf\u76ee\u5f55\u53c2\u6570\u3002\\r\\n\\r\\n### \u53c2\u6570\u8f6c\u4e3aString\u5217\u8868\\r\\n\\r\\n\u8fd9\u4e00\u90e8\u5206\u7684\u4ee3\u7801\u6709\u70b9\u8ff7\uff0c\u9996\u5148\u8c03\u7528getProgramExeArgList()\u65b9\u6cd5\u628a\u89e3\u6790\u597d\u7684Options\u53c2\u6570\u5bf9\u8c61\u8f6c\u4e3aString\u5217\u8868\uff0c\u5177\u4f53\u64cd\u4f5c\uff1a\\r\\n\\r\\n1. \u67e5\u770b`-job`\u9009\u9879\u914d\u7f6e\uff0c**\u628a\u6587\u4ef6\u8def\u5f84\u5b57\u7b26\u4e32\u66ff\u6362\u4e3a\u6587\u4ef6\u5185\u5bb9\u5b57\u7b26\u4e32**\uff0c\u8fd9\u4e2a\u903b\u8f91\u85cf\u5f97\u6709\u70b9\u6df1\uff1b\\r\\n2. \u67e5\u770b\u6bcf\u4e2a\u9009\u9879\u540d\uff0c\u52a0\u4e0a\\"-\\"\u524d\u7f00\u52a0\u5165String\u5217\u8868\uff0c\u518d\u52a0\u5165\u9009\u9879\u503c\uff0c\u5f62\u6210\u4e24\u4e24\u4e00\u5bf9\u7684\u5217\u8868\u3002\\r\\n\\r\\n\u63a5\u4e0b\u6765\u628a\u8fd9\u4e2aString\u5217\u8868\u653e\u5230HashMap\u4e2d\u4fbf\u4e8e\u6309\u952e\u83b7\u53d6\uff0c\u7136\u540e\u53d6\u51fa`-p`\u9009\u9879\u503cs\uff0c\u8fd9\u662fFlinkX\u63d0\u4f9b\u7684\u7279\u6027\uff0cs\u662f`\\"\u53c2\u6570\u540d1=\u53c2\u6570\u503c1,\u53c2\u6570\u540d2=\u53c2\u6570\u503c2...\\"`\u683c\u5f0f\u7684\u5b57\u7b26\u4e32\uff0c\u62c6\u89e3\u6210\u952e\u503c\u5bf9\uff0c\u7528\u4e8e\u66ff\u6362`-job`\u53c2\u6570\u503cjson\u5b57\u7b26\u4e32\u4e2d\u7c7b\u4f3c`${name}`\u7684\u5360\u4f4d\u7b26\u3002\u6bd4\u5982s=\\"name=kay\\"\uff0cjson\u5b57\u7b26\u4e32\u4e3a`{\\"name\\": \\"${name}\\"}`\uff0c\u7ed3\u679c\u66ff\u6362\u540ejson\u4e3a`{\\"name\\": \\"kayhaw\\"}`\u3002\\r\\n\\r\\n:::info \u771f\u7684\u597d\u5417\uff1f\\r\\n\u8fd9\u91cc\u4e3a\u4e86\u5b9e\u73b0`-p`\u53c2\u6570\u63d0\u4f9b\u7684\u7279\u6027\uff0c\u628aOptions\u8f6c\u4e3aString\u5217\u8868\uff0c\u53c8\u8f6c\u4e3aHashMap\uff0c\u8fd9\u6837\u6765\u56de\u5012\u817e\uff0c\u4e0d\u5982\u4e00\u5f00\u59cb\u4eceOptions\u91cc\u53d6\u51fajob\u6587\u4ef6\u540d\u548cs\uff0c\u7136\u540e\u8bfb\u53d6json\u6587\u4ef6\u5185\u5bb9\u4e3aString\uff0c\u7136\u540e\u518d\u66ff\u6362\u53d8\u91cf\uff0c\u53ef\u4ee5\u7701\u7565\u6ca1\u6709\u610f\u4e49\u7684\u8f6c\u4e3aHashMap\u548cString\u5217\u8868\u3002\\r\\n:::\\r\\n\\r\\n\u63a5\u7740\u6784\u9020JobDeployer\u5bf9\u8c61\uff0c\u5c31\u662fOptions\u5bf9\u8c61\u548c\u53d8\u91cf\u66ff\u6362\u540e\u53c2\u6570\u5217\u8868\u7684\u5c01\u88c5\u3002\u7136\u540e\u6839\u636e\u53c2\u6570`-mode`\u7684\u7c7b\u578b\u6784\u9020\u5bf9\u5e94\u7684xxxClusterClientHelper\u5bf9\u8c61\uff0c\u7531\u4e8e\u4ee5local\u6a21\u5f0f\u8fd0\u884c\uff0c\u5bf9\u5e94\u4e3aLocalClusterClientHelper\u5bf9\u8c61\u3002\\r\\n\\r\\n\u7136\u540e\u6dfb\u52a0`-addJar`\u53c2\u6570\u6307\u5b9a\u7684\u6269\u5c55\u5305\uff0c\u6211\u4eec\u6ca1\u6709\u63d0\u4f9b\uff0c\u8df3\u8fc7\u3002\u6700\u540e\u6267\u884cLocalClusterClientHelper\u7684submit\u65b9\u6cd5\uff0c\u81f3\u6b64Launcher\u7c7b\u5df2\u7ecf\u5b8c\u6210\u4e86\u5b83\u7684\u4f7f\u547d\u3002\\r\\n\\r\\n## FlinkX\u6267\u884c\u5165\u53e3Main.main()\\r\\n\\r\\nLocalClusterClientHelper\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff0c\u5b83\u7684\u903b\u8f91\u5f88\u7b80\u5355\uff1a\u628aJobDeployer\u8f6c\u4e3a\u5b57\u7b26\u4e32\u5217\u8868args(\u5367\u69fd\uff0c\u6ce5\u5728\u8d63\u795e\u9b54\uff01:angry:\uff0c\u53c8\u56de\u5230\u5b57\u7b26\u4e32\u4e86)\uff0c\u7136\u540e\u6267\u884cMain.main(args)\u65b9\u6cd5(flinkx-core\u6a21\u5757\u4e0b)\u3002\\r\\n\\r\\n```java title=LocalClusterClientHelper.java\\r\\npublic class LocalClusterClientHelper implements ClusterClientHelper {\\r\\n    @Override\\r\\n    public ClusterClient submit(JobDeployer jobDeployer) throws Exception {\\r\\n        // \u4ececlients.Launcher\u7684main\u65b9\u6cd5\u5230core\u5305\u4e0bMain\u7c7b\u7684main\u65b9\u6cd5\\r\\n        // \u53c8\u628a\u5bf9\u8c61\u8f6c\u6210\u4e86\u7ed9main\u65b9\u6cd5\u7684args\u5b57\u7b26\u4e32\u6570\u7ec4\\r\\n        String[] args = jobDeployer.getProgramArgs().toArray(new String[0]);\\r\\n        Main.main(args);\\r\\n        return null;\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\nMain.main()\u65b9\u6cd5\u4ee3\u7801\u5982\u4e0b\uff1a\u9996\u5148\u53c8\u628a\u4f20\u5165\u7684\u5b57\u7b26\u4e32\u8f6c\u4e3aOptions\u5bf9\u8c61\uff0c\u5e76\u4e14\u7ed9job\u5b57\u7b26\u4e32\u6309UF-8\u91cd\u65b0\u7f16\u7801\uff0c\u9632\u6b62\u540e\u7eed\u4f7f\u7528gson\u8f6c\u4e3ajson\u5bf9\u8c61\u65f6\u51fa\u9519\u3002\u63a5\u7740\u83b7\u53d6`-confProp`\u53c2\u6570\u503c\uff0c\u6211\u4e48\u6ca1\u6709\u7ed9\u51fa\uff0c\u8df3\u8fc7\u3002\u63a5\u7740\u4f7f\u7528EnvFactory\u5de5\u5382\u7c7b\u5206\u522b\u521b\u5efa\u666e\u901a\u7684\u6d41\u6267\u884c\u73af\u5883env\u548c\u8868\u6267\u884c\u73af\u5883tEnv(\u53ef\u662f\u4f7f\u7528\u66f4\u52a0\u7075\u6d3b\u7684SQL\u800c\u4e0d\u662fjson)\uff0c\u7531\u4e8e\u63d0\u4f9b\u7684\u4efb\u52a1\u7c7b\u578b\u4e3async\uff0c\u56e0\u6b64\u8fdb\u5165\u5230exeSyncJob\u65b9\u6cd5\u3002\\r\\n\\r\\n```java title=flinkx-core/src/main/java/com/dtstack/flinkx/Main.java\\r\\npublic static void main(String[] args) throws Exception {\\r\\n    LOG.info(\\"------------program params-------------------------\\");\\r\\n    Arrays.stream(args).forEach(arg -> LOG.info(\\"{}\\", arg));\\r\\n    LOG.info(\\"-------------------------------------------\\");\\r\\n\\r\\n    // \u53c8\u628astring\u5b57\u7b26\u4e32\u8f6c\u4e3aOptions\u5bf9\u8c61\\r\\n    Options options = new OptionParser(args).getOptions();\\r\\n    // \u5c06json\u5b57\u7b26\u4e32\u91cd\u65b0\u7f16\u7801\u4e3aUTF-8\uff0c\u540e\u9762gson\u89e3\u6790\u9700\u8981\\r\\n    String job = URLDecoder.decode(options.getJob(), Charsets.UTF_8.name());\\r\\n    // \u73af\u5883\u53d8\u91cf\uff0c\u53ea\u7528\u4e8etable\u6267\u884c\u73af\u5883\\r\\n    Properties confProperties = PropertiesUtil.parseConf(options.getConfProp());\\r\\n    // env\u7528\u4e8e\u6267\u884c\u666e\u901a\u540c\u6b65\u4efb\u52a1\\r\\n    StreamExecutionEnvironment env = EnvFactory.createStreamExecutionEnvironment(options);\\r\\n    // tenv\u7528\u4e8e\u6267\u884cflink sql\u540c\u6b65\u4efb\u52a1\uff0c\u4f9d\u8d56\u4e8eenv\\r\\n    StreamTableEnvironment tEnv =\\r\\n            EnvFactory.createStreamTableEnvironment(env, confProperties, options.getJobName());\\r\\n\\r\\n    switch (EJobType.getByName(options.getJobType())) {\\r\\n        case SQL:\\r\\n            exeSqlJob(env, tEnv, job, options);\\r\\n            break;\\r\\n            // \u5176\u5b9e\u6211\u89c9\u5f97\u8fd9\u91cc\u53ef\u4ee5\u6539\u540d\u53ebJSON\\r\\n        case SYNC:\\r\\n            // \u5f00\u59cb\u6b63\u5f0f\u6267\u884c\\r\\n            exeSyncJob(env, tEnv, job, options);\\r\\n            break;\\r\\n        default:\\r\\n            throw new FlinkxRuntimeException(\\r\\n                    \\"unknown jobType: [\\"\\r\\n                            + options.getJobType()\\r\\n                            + \\"], jobType must in [SQL, SYNC].\\");\\r\\n    }\\r\\n\\r\\n    LOG.info(\\"program {} execution success\\", options.getJobName());\\r\\n}\\r\\n```\\r\\n\\r\\n### \u521b\u5efa\u6d41\u6267\u884c\u73af\u5883\\r\\n\\r\\nEnvFactory\u5de5\u5382\u7c7b\u7684createStreamExecutionEnvironment\u548ccreateStreamTableEnvironment\u65b9\u6cd5\u5206\u522b\u7528\u4e8e\u521b\u5efa\u666e\u901a\u7684\u6d41\u6267\u884c\u73af\u5883env\u548c\u4ee5\u8868\u5f62\u5f0f\u7684\u6267\u884c\u73af\u5883tEnv\u3002\u4ee5\u524d\u8005\u4e3a\u4f8b\u5206\u6790\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a\\r\\n\\r\\n```java\\r\\npublic static StreamExecutionEnvironment createStreamExecutionEnvironment(Options options) {\\r\\n    Configuration flinkConf = new Configuration();\\r\\n    if (StringUtils.isNotEmpty(options.getFlinkConfDir())) {\\r\\n        // \u7ed9\u51faflink conf\u6587\u4ef6\u5939\u8def\u5f84\u5e76\u52a0\u8f7d\uff0cloadConfiguration\u91cd\u8f7d\u7248\u672c\u8fd8\u53ef\u4ee5\u518d\u52a0\u4e00\u4e2aConfiguration\u5bf9\u8c61\u6765\u8865\u5145\u914d\u7f6e\\r\\n        flinkConf = GlobalConfiguration.loadConfiguration(options.getFlinkConfDir());\\r\\n    }\\r\\n    StreamExecutionEnvironment env;\\r\\n    if (StringUtils.equalsIgnoreCase(ClusterMode.local.name(), options.getMode())) {\\r\\n        // local\u6a21\u5f0f\u4e0b\uff0c\u8fd0\u884c\u53c2\u6570-flinkConfDir=path_to_flink_conf\u7ed9\u51fa\u672c\u5730flink\u914d\u7f6e\u76ee\u5f55\u7684\u8def\u5f84\\r\\n        // \u8fdb\u800c\u914d\u7f6eflink\u6267\u884c\u73af\u5883\\r\\n        env = new MyLocalStreamEnvironment(flinkConf);\\r\\n    } else {\\r\\n        // \u5176\u4ed6\u8fd0\u884c\u6a21\u5f0f\u4e0b\uff0c\u8fd0\u884c\u53c2\u6570-confProp=<json\u5b57\u7b26\u4e32>\u7ed9\u51fa\u6765\u914d\u7f6eflink\u6267\u884c\u73af\u5883\\r\\n        Configuration cfg =\\r\\n                Configuration.fromMap(PropertiesUtil.confToMap(options.getConfProp()));\\r\\n        env = StreamExecutionEnvironment.getExecutionEnvironment(cfg);\\r\\n    }\\r\\n    // \u5173\u95ed\u95ed\u5305\u6e05\u7406\uff0cuser code\u5df2\u7ecf\u5728\u6bcf\u4e2aworker\u8282\u70b9\u4e0b\uff1f\\r\\n    env.getConfig().disableClosureCleaner();\\r\\n    return env;\\r\\n}\\r\\n```\\r\\n\\r\\n\u9996\u5148\u8c03\u7528GlobalConfiguration.loadConfiguration(String conf_dir)\u65b9\u6cd5\u5f97\u5230\u914d\u7f6e\u7c7b\uff0c\u8be5\u65b9\u6cd5\u7531Flink Core\u5305\u63d0\u4f9b\uff0c\u7528\u4e8e\u89e3\u6790\u67d0\u4e2a\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u914d\u7f6e\u6587\u4ef6\u4e3aConfiguration\u5bf9\u8c61flinkConf\u3002\u5982\u679c\u662flocal\u6a21\u5f0f\u63d0\u4ea4\u4efb\u52a1\uff0c\u4f7f\u7528flinkConf\u914d\u7f6e\u751f\u6210\u7684MyLocalStreamEnvironment\uff0c\u8be5\u7c7b\u662fFlinkX\u81ea\u5b9a\u4e49\u7684\u3002\u5176\u4ed6\u6a21\u5f0f\u4e0b\uff0c\u73af\u5883\u7684\u914d\u7f6e\u53c2\u6570\u7531`-confProp`\u6307\u5b9a\u3002\\r\\n\\r\\n:::caution\\r\\nlocal\u6a21\u5f0f\u63d0\u4ea4\u4efb\u52a1\u5219\u4f7f\u7528\u672c\u5730\u7684FlinkX conf\u76ee\u5f55\u4e0b\u914d\u7f6e\u6587\u4ef6\u4f5c\u4e3a\u6d41\u6267\u884c\u73af\u5883\u7684\u914d\u7f6e\uff0c\u5176\u4ed6\u6a21\u5f0f\u8fdc\u7a0b\u63d0\u4ea4\u5230Flink\u96c6\u7fa4\uff0c\u6b64\u65f6\u901a\u8fc7`-confProp`\u53c2\u6570\u63d0\u4f9b\u989d\u5916\u7684\u6267\u884c\u73af\u5883\u914d\u7f6e\u3002\\r\\n:::\\r\\n\\r\\n\u63a5\u7740\u8c03\u7528disableClosureCleaner()\u65b9\u6cd5\u5173\u95ed\u95ed\u5305\u6e05\u7406\u5668\u529f\u80fd(\u9ed8\u8ba4\u5f00\u542f)\uff0c\u4ec0\u4e48\u662fClosureCleaner\uff1fFlink Java API Doc\u7ed9\u51fa\u7684\u89e3\u91ca\u5982\u4e0b\uff1a\\r\\n\\r\\n> The closure cleaner is a utility that tries to truncate the closure (enclosing instance) of non-static inner classes (created for inline transformation functions). That makes non-static inner classes in many cases serializable, where Java\'s default behavior renders them non-serializable without good reason.\\r\\n\\r\\n\u5728Java\u7f16\u7a0b\u4e2d\uff0c\u5185\u90e8\u7c7b\u6240\u5728\u7684\u5916\u90e8\u7c7b\u79f0\u4e4b\u4e3a\u95ed\u5305(closure)\u3002\u5f53\u5f00\u542f\u95ed\u5305\u6e05\u7406\uff0cFlink\u4f1a\u5206\u6790\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\u4e2d\u6ca1\u6709\u7528\u5230\u7684\u5b57\u6bb5\uff0c\u5e76\u5c06\u5176\u8bbe\u7f6e\u4e3anull\uff0c\u8fd9\u6837\u4f7f\u5f97\u95ed\u5305\u6216\u8005\u533f\u540d\u5185\u90e8\u7c7b\u662f\u53ef\u5e8f\u5217\u5316\u7684\uff0c\u800c\u67d0\u4e9bJava\u5de5\u5177\u5305\u4e0d\u4f1a\u5c06\u5176\u5e8f\u5217\u5316\u3002\u800c\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\u9700\u8981\u901a\u8fc7\u5e8f\u5217\u5316\u5c06\u5176\u5206\u53d1\u5230Flink\u96c6\u7fa4\u7684worker\u8282\u70b9\u4e0a\u3002\u8fd9\u91cc\u5173\u95ed\u4e86\u95ed\u5305\u6e05\u7406\uff0c\u662f\u56e0\u4e3a\u5df2\u7ecf\u5728\u5404\u4e2a\u8282\u70b9\u4e0a\u90e8\u7f72\u4e86FlinkX jar\u5305\ud83e\udd14\uff1f\\r\\n\\r\\n### \u6267\u884c\u4f5c\u4e1aexeSyncJob\\r\\n\\r\\nMain.exeSyncJob()\u65b9\u6cd5\u7684\u4ee3\u7801\u903b\u8f91\u53ef\u4ee5\u5206\u4e3a\u5982\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a\\r\\n\\r\\n**\u7b2c\u4e00\u6b65**\uff0c\u89e3\u6790\u547d\u4ee4\u884c\u53c2\u6570\u5f97\u5230\u914d\u7f6e\u7c7b\u5bf9\u8c61SyncConf\uff0c\u901a\u8fc7GSON.fromJson()\u65b9\u6cd5\u89e3\u6790\uff0c**\u987a\u4fbf\u505a\u4e86\u53c2\u6570\u975e\u7a7a\u6821\u9a8c**\uff1b\\r\\n\\r\\n**\u7b2c\u4e8c\u6b65**\uff0c\u7531configStreamExecutionEnvironment\u65b9\u6cd5\u914d\u7f6e\u6d41\u6267\u884c\u73af\u5883\uff0c\u5176\u4e2d\u6838\u5fc3\u4ee3\u7801\u662f`PluginUtil.registerPluginUrlToCachedFile(config, env)`\uff0c\u5c55\u5f00\u5206\u6790\u4e00\u4e0b\u8fd9\u4e2a\u65b9\u6cd5(\u5f88\u91cd\u8981\uff01)\\r\\n\\r\\n```java\\r\\npublic static void registerPluginUrlToCachedFile(\\r\\n            SyncConf config, StreamExecutionEnvironment env) {\\r\\n    Set<URL> urlSet = new HashSet<>();\\r\\n    // \u8fd9\u91cc\u56fa\u5b9a\u6b7b\u4e86\u8fdc\u7a0b\u63d2\u4ef6\u5305\u8def\u5f84\u4e3anull\uff0cgetJarFileDirPath\u4e5f\u53ea\u4f1a\u53d6\u672c\u5730\u63d2\u4ef6\u5305\u8def\u5f84\u4e86\\r\\n    Set<URL> coreUrlList = getJarFileDirPath(\\"\\", config.getPluginRoot(), null);\\r\\n    Set<URL> formatsUrlList = getJarFileDirPath(FORMATS_SUFFIX, config.getPluginRoot(), null);\\r\\n    Set<URL> sourceUrlList =\\r\\n            getJarFileDirPath(\\r\\n                    config.getReader().getName(),\\r\\n                    // \u6ce8\u610f\u8fd9\u91cc\u63d2\u4ef6\u641c\u7d22\u6839\u8def\u5f84\u6362\u4e86\uff0c\u5728connector\u76ee\u5f55\u4e0b\u9762\u627e\uff0csink\u540c\u7406\\r\\n                    config.getPluginRoot() + SP + CONNECTOR_DIR_NAME,\\r\\n                    null);\\r\\n    Set<URL> sinkUrlList =\\r\\n            getJarFileDirPath(\\r\\n                    config.getWriter().getName(),\\r\\n                    config.getPluginRoot() + SP + CONNECTOR_DIR_NAME,\\r\\n                    null);\\r\\n    Set<URL> metricUrlList =\\r\\n            getJarFileDirPath(\\r\\n                    config.getMetricPluginConf().getPluginName(),\\r\\n                    // \u6307\u6807\u63d2\u4ef6\u5728metrics\u76ee\u5f55\u4e0b\u9762\u627e\\r\\n                    config.getPluginRoot() + SP + METRIC_SUFFIX,\\r\\n                    null);\\r\\n    urlSet.addAll(coreUrlList);\\r\\n    urlSet.addAll(formatsUrlList);\\r\\n    urlSet.addAll(sourceUrlList);\\r\\n    urlSet.addAll(sinkUrlList);\\r\\n    urlSet.addAll(metricUrlList);\\r\\n\\r\\n    int i = 0;\\r\\n    for (URL url : urlSet) {\\r\\n        String classFileName = String.format(CLASS_FILE_NAME_FMT, i);\\r\\n        // \u6ce8\u518c\u6240\u6709\u7684jar\u5305\\r\\n        env.registerCachedFile(url.getPath(), classFileName, true);\\r\\n        i++;\\r\\n    }\\r\\n    \\r\\n    // \u5982\u679c\u662f\u672c\u5730\u6267\u884c\u73af\u5883\u5219\u76f4\u63a5\u52a0\u8f7d\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u52a0\u8f7d\u81ea\u5df1\u7684\\r\\n    if (env instanceof MyLocalStreamEnvironment) {\\r\\n        ((MyLocalStreamEnvironment) env).setClasspaths(new ArrayList<>(urlSet));\\r\\n        if (CollectionUtils.isNotEmpty(coreUrlList)) {\\r\\n            try {\\r\\n                ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();\\r\\n                // \u4e3a\u4ec0\u4e48\u8981\u7528\u53cd\u5c04\u52a0\u8f7djar\u5305\uff1f\uff1f\uff1f\\r\\n                Method add = URLClassLoader.class.getDeclaredMethod(\\"addURL\\", URL.class);\\r\\n                add.setAccessible(true);\\r\\n                add.invoke(contextClassLoader, new ArrayList<>(coreUrlList).get(0));\\r\\n            } catch (Exception e) {\\r\\n                LOG.warn(\\r\\n                        \\"cannot add core jar into contextClassLoader, coreUrlList = {}\\",\\r\\n                        GsonUtil.GSON.toJson(coreUrlList),\\r\\n                        e);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n\u8be5\u65b9\u6cd5\u4e3b\u8981\u529f\u80fd\u662f\u901a\u8fc7getJarFileDirPath\u5f97\u5230\u4e0d\u540c\u529f\u80fd\u63d2\u4ef6\u5305\u7684URL\u5217\u8868\uff0c\u7136\u540e\u5c06\u6240\u6709URL\u5217\u8868\u5408\u5e76\uff0c\u6700\u540e\u901a\u8fc7Flink\u63d0\u4f9b\u7684\u65b9\u6cd5registerCachedFile(String filePath, String name, boolean executable)\u5c06jar\u6587\u4ef6\u6ce8\u518c\u5230\u7f13\u5b58\u4e2d\u3002getJarFileDirPath\u7684\u4ee3\u7801\u903b\u8f91\u5982\u4e0b\uff1a\\r\\n\\r\\n1. \u5c06\u8bfb\u5199\u63d2\u4ef6\u540d\u79f0\u4e2d\u7684`reader`\u3001`source`\u3001`writer`\u548c`sink`\u8fd94\u4e2d\u540e\u7f00\u53bb\u6389\u5f97\u5230\u63d2\u4ef6\u540d\uff1b\\r\\n2. \u641c\u7d22`<FlinkX\u63d2\u4ef6\u5305\u76ee\u5f55>/connector/<\u63d2\u4ef6\u540d>`\u4e0b\u7684**\u6240\u6709\u4ee5flinkx\u5f00\u5934\uff0c\u4ee5.jar\u7ed3\u5c3e\u7684\u6587\u4ef6\u540d**\uff0c\u5373\u8bfb\u5199\u63d2\u4ef6jar\u5305\uff1b\\r\\n3. \u8fd4\u56de\u6587\u4ef6URL\u3002\\r\\n\\r\\n:::caution \u6ce8\u610f\\r\\n\u8fd9\u91ccgetJarFileDirPath\u7684\u7b2c3\u4e2a\u53c2\u6570\uff0cremotePluginPath\u4f20\u5165\u4e3anull\uff0c\u5426\u5219\u4f18\u5148\u4ece\u8be5\u8def\u5f84\u4e0b\u641c\u7d22jar\u6587\u4ef6\\r\\n:::\\r\\n\\r\\n\u5f53\u7ed9env\u6ce8\u518c\u5b8c\u7f13\u5b58\u6587\u4ef6\u540e\uff0c\u5982\u679c\u8fd8\u662flocal\u6a21\u5f0f\uff0c\u5219\u52a0\u8f7dflinkx core\u5305\uff1a**\u4f7f\u7528\u7ebf\u7a0b\u52a0\u8f7d\u5668\uff0c\u5e76\u4ee5\u53cd\u5c04\u5f62\u5f0f\u8c03\u7528\u5176addURL\u65b9\u6cd5()**\u3002\u8fd9\u91cc\u4f7f\u7528\u53cd\u5c04\u662f\u56e0\u4e3aaddURL\u65b9\u6cd5\u662fURLClassLoader\u7c7b\u7684\uff0cClassLoader\u7c7b\u5e76\u6ca1\u6709\u8be5\u65b9\u6cd5\u3002\u5728\u8fd0\u884c\u65f6\uff0c\u83b7\u5f97\u7684\u7ebf\u7a0b\u52a0\u8f7d\u5668\u672c\u8d28\u662fAppClassLoader\uff0c\u5b83\u662fURLClassLoader\u7684\u5b50\u7c7b\u3002\\r\\n\\r\\n\u56de\u5230configStreamExecutionEnvironment\u65b9\u6cd5\uff0c\u5982\u679c\u89e3\u6790\u51fa\u6765\u7684\u914d\u7f6eSyncConf\u4e3a\u7a7a(-job\u53c2\u6570\u6ca1\u6709\u63d0\u4f9b)\uff0c\u5e76\u4e14\u8fd0\u884c\u6a21\u5f0f\u4e0d\u662flocal\u6216\u8005\u63d2\u4ef6\u52a0\u8f7d\u6a21\u5f0f\u4e0d\u662fshipfile(\u53c2\u6570-shipfile\u4e3a1)\u5c31\u629b\u51fa\u5f02\u5e38\uff0c\u5426\u5219\u6784\u9020\u4e00\u4e2aFactoryHelper\u6ce8\u518c\u5230FactoryUtil\u548cTableFactoryService\u7684ThreadLocal\u5bf9\u8c61(\u7531\u4e8e\u8fd0\u884c\u6a21\u5f0f\u4e3alocal\uff0c\u8fd9\u6b65\u64cd\u4f5c\u7684\u4f5c\u7528\u5148\u7565\u8fc7)\u3002\\r\\n\\r\\n\u6700\u540e\u4e00\u6b65\u662fregisterShipfileToCachedFile\u65b9\u6cd5\uff0c\u4e0a\u9762registerPluginUrlToCachedFile\u65b9\u6cd5\u4e0d\u540c\u7684\u662f\uff0c**\u5b83\u5728\u8c03\u7528env.registerCachedFile()\u65b9\u6cd5\u65f6\u7b2c3\u4e2a\u53c2\u6570\u8bbe\u7f6e\u4e3afalse**\u3002\\r\\n\\r\\n:::caution\\r\\nregisterPluginUrlToCachedFile\u548cregisterShipfileToCachedFile\u7684\u4e0d\u540c\uff1a\\r\\n\\r\\n1. \u6ce8\u518c\u5bf9\u8c61\u4e0d\u540c\uff0c\u524d\u8005\u662fflinx-dist\u4e0b\u7684\u63d2\u4ef6jar\u5305\uff0c\u540e\u8005\u662f\u53c2\u6570`-shipfile`\u503c(\u4ee5\u9017\u53f7\u5206\u9694\u7684jar\u5305\u8def\u5f84)\u63d0\u4f9b\u7684jar\u5305\uff1b\\r\\n2. \u6ce8\u518c\u65b9\u5f0f\u4e0d\u540c\uff0c\u524d\u8005\u6ce8\u518c\u540d\u4e3a`class_path_<\u5e8f\u53f7>`\uff0c\u540e\u8005\u4ee5jar\u6587\u4ef6\u540d\u6ce8\u518c\u56e0\u6b64\u4e0d\u80fd\u91cd\u540d\uff1b\u524d\u8005executable\u53c2\u6570\u4e3atrue\uff0c\u540e\u8005\u4e3afalse\u3002\\r\\n:::\\r\\n\\r\\n**\u7b2c\u4e09\u6b65**\uff1a\u8c03\u7528discoverSource\u65b9\u6cd5\u83b7\u53d6SourceFactory\u5b9e\u4f8b\u3002\u9996\u5148\u7531 PluginUtil.getPluginClassName\u65b9\u6cd5\u786e\u5b9a\u8981\u5b9e\u4f8b\u5316\u7684\u5168\u8def\u5f84\u5de5\u5382\u7c7b\u540d\uff0c\u5176\u6784\u9020\u683c\u5f0f\u4e3a**com.dtstack.flinkx.connector.<\u63d2\u4ef6\u540d>.source.<\u9996\u5b57\u6bcd\u5927\u5199\u63d2\u4ef6\u540d>SourceFactory**\uff1b\u63a5\u7740\u901a\u8fc7getJarFileDirPath\u641c\u7d22`${FLINK_DIST_DIR}/connector/<\u63d2\u4ef6\u540d>`\u7684jar\u6587\u4ef6\u548cformat\u76ee\u5f55\u4e0b\u7684jar\u6587\u4ef6\uff0c\u5408\u5e76\u6210urlList\u5217\u8868\u3002\u901a\u8fc7Flink API\u914d\u7f6e\u6267\u884c\u73af\u5883\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a\\r\\n\\r\\n```java\\r\\nConfigUtils.encodeCollectionToConfig(\\r\\n        // \u4e3a\u4ec0\u4e48\u4e0d\u80fd\u76f4\u63a5env.getConfig()\u800c\u662f\u8981\u901a\u8fc7\u53cd\u5c04\uff1f\\r\\n        (Configuration)\\r\\n                ReflectionUtils.getDeclaredMethod(env, \\"getConfiguration\\").invoke(env),\\r\\n        // \u8fd9\u662f\u7528\u4e8epipeline\u7684jar\u5305\\r\\n        PipelineOptions.JARS,\\r\\n        urlList,\\r\\n        URL::toString);\\r\\nConfigUtils.encodeCollectionToConfig(\\r\\n        (Configuration)\\r\\n                ReflectionUtils.getDeclaredMethod(env, \\"getConfiguration\\").invoke(env),\\r\\n        PipelineOptions.CLASSPATHS,\\r\\n        urlList,\\r\\n        URL::toString);\\r\\n```\\r\\n\\r\\n:::tip \u4e3a\u4ec0\u4e48\u7528\u53cd\u5c04\u8c03\u7528getConfiguration\u65b9\u6cd5\uff1f\\r\\ngetConfiguration\u65b9\u6cd5\u662fStreamExecutionEnvironment\u7684protected\u65b9\u6cd5\uff0c\u4e0d\u80fd\u76f4\u63a5\u8c03\u7528\u3002\\r\\n:::\\r\\n\\r\\n\u6700\u540e\u8c03\u7528\u7c7b\u52a0\u8f7d\u5668\u52a0\u8f7d\u5de5\u5382\u7c7b\u5e76\u8c03\u7528\u5176\u7279\u5b9a\u7684\u6784\u9020\u65b9\u6cd5\u8fd4\u56de\u5b9e\u4f8b\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a\\r\\n\\r\\n```java\\r\\nreturn ClassLoaderManager.newInstance(\\r\\n    // \u4e3a\u4ec0\u4e48\u4f20\u5165urlList\uff1f\u5b83\u4f5c\u4e3akey\u6765\u6807\u8bc6\u4e4b\u524d\u4f7f\u7528\u7684classloader\\r\\n    urlList,\\r\\n    // cl\u662fclassload\u7f29\u5199\\r\\n    cl -> {\\r\\n        Class<?> clazz = cl.loadClass(pluginClassName);\\r\\n        Constructor<?> constructor =\\r\\n                clazz.getConstructor(\\r\\n                        SyncConf.class, StreamExecutionEnvironment.class);\\r\\n        // \u8c03\u7528\u7279\u5b9a\u7684\u6784\u9020\u65b9\u6cd5\u8fd4\u56deSourceFactory\u5bf9\u8c61\\r\\n        return (SourceFactory) constructor.newInstance(config, env);\\r\\n    });\\r\\n```\\r\\n\\r\\n\u8fd9\u91cc\u4e4b\u6240\u4ee5\u4f1a\u4f20\u5165urlList\u5217\u8868\uff0c\u662f\u56e0\u4e3aClassLoaderManager\u4ee5url\u4e3akey\u7ef4\u62a4\u4e86\u4e00\u4e2aClassLoader\u5bf9\u8c61\u7f13\u5b58HashMap\uff0c\u901a\u8fc7lambda\u8868\u8fbe\u5f0f\u6267\u884c\u7c7b\u52a0\u8f7d\u548c\u5b9e\u4f8b\u5316\uff0c\u6ce8\u610f\u4f7f\u7528cl\u65f6\u9700\u8981\u5207\u6362\u5f53\u524d\u7c7b\u52a0\u8f7d\u5668\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a\\r\\n\\r\\n```java\\r\\npublic static <R> R callbackAndReset(\\r\\n        ClassLoaderSupplier<R> supplier, ClassLoader toSetClassLoader) throws Exception {\\r\\n    // \u6682\u65f6\u5730\u5c06\u7ebf\u7a0b\u7c7b\u52a0\u8f7d\u5668\u66ff\u6362\u4e3atoSetClassLoader\uff0c\u7136\u540e\u8c03\u7528supplier.get\u65b9\u6cd5\\r\\n    ClassLoader oldClassLoader = Thread.currentThread().getContextClassLoader();\\r\\n    Thread.currentThread().setContextClassLoader(toSetClassLoader);\\r\\n    try {\\r\\n        return supplier.get(toSetClassLoader);\\r\\n    } finally {\\r\\n        // \u8fd8\u539f\u65e7\u7684\\r\\n        Thread.currentThread().setContextClassLoader(oldClassLoader);\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n**\u7b2c\u56db\u6b65**\uff1a\u901a\u8fc7sourceFactory.createSource()\u5f97\u5230DataStream<RowData\\\\>\uff0c\u7136\u540e\u8bbe\u7f6esource\u7b97\u5b50\u5e76\u884c\u5ea6\u3002\u8fd9\u90e8\u5206\u5185\u5bb9\u6d89\u53casource\u7b97\u5b50\u7684\u5b9e\u73b0\uff0c\u5728\u4e0b\u4e00\u7bc7\u6587\u7ae0\u4e2d\u5206\u6790\u3002\\r\\n\\r\\n**\u7b2c\u4e94\u6b65**\uff1a\u6839\u636ejson\u914d\u7f6etransformer\u5c06\u6d41\u73af\u5883\u8f6c\u4e3a\u8868\u73af\u5883\uff0c\u7531syncStreamToTable\u5b9e\u73b0\uff0c\u7531\u4e8e\u672a\u63d0\u4f9btransform sql\uff0c\u5148\u8df3\u8fc7\u3002\\r\\n\\r\\n**\u7b2c\u516d\u6b65**\uff1a\u6839\u636e\u914d\u7f6e\u8bbe\u7f6e\u4ecesource\u5230sink\u7b97\u5b50\u7684\u5206\u53d1\u7b56\u7565\u4e3arealance()\u3002\\r\\n\\r\\n**\u7b2c\u4e03\u6b65**\uff1a\u6784\u9020SinkFactory\u5bf9\u8c61\u5e76\u8c03\u7528createSink\u65b9\u6cd5\u521b\u5efasink\u7b97\u5b50\uff0c\u7136\u540e\u6839\u636e\u914d\u7f6e\u8bbe\u7f6e\u5176\u5e76\u884c\u5ea6\uff0c\u903b\u8f91\u540csource\u7b97\u5b50\uff0c\u8df3\u8fc7\u3002\\r\\n\\r\\n**\u7b2c\u516b\u6b65**\uff1a\u6267\u884c\u4f5c\u4e1a\uff0c\u4f5c\u4e1a\u540d\u79f0\u7531\u53c2\u6570`-jobName`\u7ed9\u51fa\u3002\u5982\u679c\u662flocal\u6a21\u5f0f\u8fd0\u884c\u8fd8\u4f1a\u6253\u7edf\u8ba1\u6307\u6807\u7ed3\u679c\u3002\\r\\n\\r\\n\u81f3\u6b64\uff0cFlinkX\u540c\u6b65\u4efb\u52a1\u63d0\u4ea4\u7684\u4e3b\u5e72\u6d41\u7a0b\u5206\u6790\u5b8c\u6bd5\u3002\\r\\n\\r\\n## \u603b\u7ed3\\r\\n\\r\\n\u4e3b\u5e72\u6d41\u7a0b\u53ef\u4ee5\u5f52\u7eb3\u4e3a3\u4e2a\u65b9\u9762\u7684\u529f\u80fd\uff1a\\r\\n\\r\\n1. \u8fd0\u884c\u53c2\u6570\u7684\u9ed8\u8ba4\u8bbe\u7f6e\u3001\u89e3\u6790\u548c\u4efb\u52a1json\u53d8\u91cf\u66ff\u6362\u7b49\u64cd\u4f5c\\r\\n2. \u6d41\u6267\u884c\u73af\u5883\u7684\u914d\u7f6e\uff0c\u7528\u5230\u7684Flink API\u6709\uff1a\\r\\n\\r\\n```java\\r\\n// 1. \u6307\u5b9a\u914d\u7f6e\u76ee\u5f55\u89e3\u6790\u5f97\u5230Configuration\\r\\nGlobalConfiguration.loadConfiguration(String configDir)\\r\\n// 2. \u6ce8\u518c\u7f13\u5b58jar\u6587\u4ef6\\r\\nStreamExecutionEnvironment.registerCachedFile(String filePath, \\r\\n    String name, boolean executable)\\r\\n// 3. \u7528\u4e8e\u914d\u7f6epipeline.jars\u548cpipeline.classpaths\u53c2\u6570\u7684\u5de5\u5177\u65b9\u6cd5\\r\\nConfigUtils.encodeCollectionToConfig(WritableConfig configuration\uff0c ConfigOption<List<OUT>> key, \\r\\n    @Nullable Collection<IN> values, Function<IN, OUT> mapper)\\r\\n```\\r\\n\\r\\n3. \u521b\u5efasource\u548csink\u7b97\u5b50\uff0c\u5148\u7528\u53cd\u5c04\u673a\u5236\u6784\u9020\u5de5\u5382\u7c7b\uff0c\u7136\u540e\u901a\u8fc7\u5de5\u5382\u7c7b\u793a\u4f8b\u521b\u5efa\u7b97\u5b50\u5b9e\u4f8b\u3002\\r\\n\\r\\n\u6267\u884c\u73af\u5883\u914d\u7f6e\u548c\u7b97\u5b50\u90fd\u5df2\u51c6\u5907\u597d\uff0c\u8c03\u7528StreamExecutionEnvironment.execute()\u5373\u53ef\u6267\u884c\u4efb\u52a1\u3002\u603b\u4f53\u4e0b\u6765\u53c2\u6570\u914d\u7f6e\u7684\u51c6\u5907\u5de5\u4f5c\u5c45\u591a\uff0c\u6700\u6838\u5fc3\u90e8\u5206\u5c31\u662f\u914d\u7f6e\u8fd0\u884c\u73af\u5883\u3001\u52a0\u8f7d\u7b97\u5b50\u5de5\u5382\u7c7b\u7136\u540e\u521b\u5efa\u7b97\u5b50\u3002"},{"id":"/2021/10/26/MySQLSummary","metadata":{"permalink":"/blog/2021/10/26/MySQLSummary","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2021-10-26-MySQLSummary.md","source":"@site/blog/2021-10-26-MySQLSummary.md","title":"MySQL\u57fa\u7840\u77e5\u8bc6\u603b\u7ed3(1)","description":"MySQL\u57fa\u7840\u77e5\u8bc6\u603b\u7ed3(1)","date":"2021-10-26T00:00:00.000Z","formattedDate":"October 26, 2021","tags":[{"label":"MySQL Basic","permalink":"/blog/tags/my-sql-basic"},{"label":"Summary","permalink":"/blog/tags/summary"}],"readingTime":0.98,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"MySQL\u57fa\u7840\u77e5\u8bc6\u603b\u7ed3(1)","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["MySQL Basic","Summary"],"description":"MySQL\u57fa\u7840\u77e5\u8bc6\u603b\u7ed3(1)","hide_table_of_contents":false},"prevItem":{"title":"FlinkX\u6e90\u7801\u5256\u6790(1)","permalink":"/blog/2022/01/09/FlinkX-Source-Code-Dissection-01"},"nextItem":{"title":"\u6bcf\u65e5\u7b97\u6cd5\u9898-\u524d\u7f00\u548c","permalink":"/blog/2021/10/16/PrefixSum"}},"content":"MySQL\u57fa\u7840\u77e5\u8bc6\u603b\u7ed3-\u7b2c\u4e00\u7bc7\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## DATETIME\u548cTIMESTAMP\u5f02\u540c\\r\\n\\r\\nDATETIME\u548cTIMESTAMP\u90fd\u53ef\u4ee5\u7528\u6765\u8868\u793a`\u5e74\u6708\u65e5\u65f6\u5206\u79d2`\u7684\u65f6\u95f4\uff08DATE\u7c7b\u578b\u53ea\u80fd\u5230`\u5e74\u6708\u65e5`\uff09\uff0c\u4f46\u7ec6\u7a76\u8d77\u6765\u5b83\u4eec\u8fd8\u6709\u5982\u4e0b\u533a\u522b\uff1a\\r\\n\\r\\n|\u7c7b\u578b|\u5b58\u50a8\u957f\u5ea6|\u8303\u56f4|\u7cbe\u5ea6|\\r\\n|----|-------|----|---|\\r\\n|datetime|8\u5b57\u8282|1000-01-01 00:00:00.000000\u52309999-12-31 23:59:59.999999|6|\\r\\n|timestamp|4\u5b57\u8282|1970-01-01 00:00:01.000000\u52302038-01-19 03:14:07.999999|6|\\r\\n\\r\\n\u5f53TIMESTAMP\u5b57\u6bb5\u63d2\u5165\u4e00\u4e2a\u503c\u65f6\uff0c\u6839\u636e**\u5f53\u524d\u65f6\u533a**\u5c06\u63d2\u5165\u65f6\u95f4\u8f6c\u4e3aUTC\u65f6\u95f4\uff1b\u5f53\u8bfb\u53d6TIMESTAMP\u5b57\u6bb5\u503c\u65f6\uff0c\u53c8\u5c06UTC\u65f6\u95f4\u8f6c\u4e3a\u5ba2\u6237\u7aef\u5f53\u524d\u65f6\u533a\u8fd4\u56de\u3002**DATETIME\u5b58\u50a8\u503c\u4e0e\u65f6\u533a\u65e0\u5173**\u3002\\r\\n\\r\\n:::caution \u5173\u4e8e\u65f6\u95f4\u7cbe\u5ea6\\r\\nDATETIME\u548cTIMESTAMP\u90fd\u7684\u7cbe\u5ea6\u90fd\u662f6\u4f4d\uff0c\u8868\u793a\u79d2\u7ea7\u53ef\u4ee5\u7cbe\u786e\u5230\u5c0f\u6570\u70b9\u540e6\u4f4d\uff0c\u4f46\u5728\u8f83\u65e9\u7684MySQL\u7248\u672c(5.6.5\u4e4b\u524d)\u4e2d\u79d2\u7ea7\u6ca1\u6709\u5c0f\u6570\u90e8\u5206\u3002\\r\\n:::"},{"id":"/2021/10/16/PrefixSum","metadata":{"permalink":"/blog/2021/10/16/PrefixSum","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2021-10-16-PrefixSum.mdx","source":"@site/blog/2021-10-16-PrefixSum.mdx","title":"\u6bcf\u65e5\u7b97\u6cd5\u9898-\u524d\u7f00\u548c","description":"\u6bcf\u65e5\u7b97\u6cd5\u9898-\u524d\u7f00\u548c","date":"2021-10-16T00:00:00.000Z","formattedDate":"October 16, 2021","tags":[{"label":"Algorithm","permalink":"/blog/tags/algorithm"},{"label":"Prefix Sum","permalink":"/blog/tags/prefix-sum"}],"readingTime":3.515,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"\u6bcf\u65e5\u7b97\u6cd5\u9898-\u524d\u7f00\u548c","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["Algorithm","Prefix Sum"],"description":"\u6bcf\u65e5\u7b97\u6cd5\u9898-\u524d\u7f00\u548c","hide_table_of_contents":false},"prevItem":{"title":"MySQL\u57fa\u7840\u77e5\u8bc6\u603b\u7ed3(1)","permalink":"/blog/2021/10/26/MySQLSummary"},"nextItem":{"title":"\u6bcf\u65e5\u7b97\u6cd5\u9898-\u94fe\u8868\u76f8\u5173\u603b\u7ed3","permalink":"/blog/2021/10/13/LinkedListAlogrithms"}},"content":"\u603b\u7ed3\u524d\u7f00\u548c\u76f8\u5173\u95ee\u9898\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## \u524d\u7f00\u548c\u5b9a\u4e49\\r\\n\\r\\n\u4ec0\u4e48\u662f\u524d\u7f00\u548c\uff1f\u987e\u540d\u601d\u4e49\uff0c\u5b83\u8868\u793a\u6570\u7ec4array\u7684\u524d\u7f00\u6570\u7ec4\u4e4b\u548c\uff0c\u5373\\r\\n\\r\\n$$prefixSum[i]=\\\\sum_{0}^iarray[i]$$\\r\\n\\r\\n\u5f53\u6c42\u51fa\u6570\u7ec4\u6240\u6709\u4f4d\u7f6e\u7684\u524d\u7f00\u548c\u4e4b\u540e\uff0c\u901a\u8fc7prefixSum[i]-prefixSum[j-1]\u5373\u53ef\u5feb\u901f\u5f97\u5230\u533a\u95f4[j,i]\u5185\u5143\u7d20\u4e4b\u548c\uff0c\u4ece\u800c\u5728O(1)\u65f6\u95f4\u5185\u5f97\u5230\u672c\u6765\u9700\u8981O(n)\u65f6\u95f4\u8ba1\u7b97\u7684\u503c\u3002\u6362\u8a00\u4e4b\uff0c\u4f7f\u7528\u524d\u7f00\u548c\u7684\u672c\u8d28\u5c31\u662f\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\u3002\\r\\n\\r\\n## \u4e00\u7ef4\u6570\u7ec4\u524d\u7f00\u548c\\r\\n\\r\\n[\u9898\u76ee\u63cf\u8ff0](https://leetcode-cn.com/problems/range-sum-query-immutable/)\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4nums\uff0c\u6c42\u51fa\u6570\u7ec4\u4ece\u7d22\u5f15i\u5230j\uff08i \u2264 j\uff09\u8303\u56f4\u5185\u5143\u7d20\u7684\u603b\u548c\uff0c\u5305\u542bi\u3001j\u4e24\u70b9\u3002\\r\\n\\r\\n\u5148\u6c42\u51fa\u524d\u7f00\u548c\u6570\u7ec4prefixSum\uff0c\u6839\u636e\u63a8\u5bfc\u516c\u5f0f$sum[i,j]=prefixSum[j]-prefixSum[i-1]$\u5373\u53ef\u6c42\u89e3\uff0c\u5b9e\u73b0\u4ee3\u7801\u5982\u4e0b\uff1a\\r\\n\\r\\n```java\\r\\npublic class NumArray {\\r\\n    private int[] prefixSum;\\r\\n    public NumArray(int[] nums) {\\r\\n        int len = nums.length;\\r\\n        prefixSum = new int[len+1];\\r\\n        for (int i = 0; i < len; i++) {\\r\\n            prefixSum[i+1] = prefixSum[i] + nums[i];\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public int sumRange(int left, int right) {\\r\\n        return prefixSum[right+1] - prefixSum[left];\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n## \u4e8c\u7ef4\u6570\u7ec4\u524d\u7f00\u548c\\r\\n\\r\\n[\u9898\u76ee\u63cf\u8ff0](https://leetcode-cn.com/problems/range-sum-query-2d-immutable/)\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u7ef4\u77e9\u9635 matrix\uff0c\u5b9e\u73b0\u5982\u4e0b\u65b9\u6cd5\uff1a\\r\\n\\r\\n- NumMatrix(int[][] matrix)\xa0\u7ed9\u5b9a\u6574\u6570\u77e9\u9635 matrix \u8fdb\u884c\u521d\u59cb\u5316\\r\\n- int sumRegion(int row1, int col1, int row2, int col2)\xa0\u8fd4\u56de\u5de6\u4e0a\u89d2 (row1,\xa0col1)\xa0\u3001\u53f3\u4e0b\u89d2\xa0(row2,\xa0col2)\xa0\u7684\u5b50\u77e9\u9635\u7684\u5143\u7d20\u603b\u548c\u3002\\r\\n\u957f\u5ea6\\r\\n\\r\\n\u89e3\u51b3\u8fd9\u9053\u9898\u7684\u601d\u8def\u8fd8\u662f\u524d\u7f00\u548c\uff0c\u53ea\u4e0d\u8fc7\u4ece\u4e00\u7ef4\u6570\u7ec4\u6269\u5c55\u5230\u4e8c\u7ef4\u6570\u7ec4\u3002\u5bf9\u4e8e\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5176\u524d\u7f00\u548cprefixMatrix[i][j]\u5b9a\u4e49\u516c\u5f0f\u5982\u4e0b\uff0c\u5b83\u8868\u793a\u4ece\u77e9\u9635\u5de6\u4e0a\u9876\u70b9[0,0]\u5230[i,j]\u6240\u56f4\u6210\u7684\u5b50\u77e9\u9635\u5185\u5143\u7d20\u4e4b\u548c\uff1a\\r\\n\\r\\n$$prefixMatrix[i][j]=\\\\sum_{0}^i\\\\sum_{0}^jmatrix[i][j]$$\\r\\n\\r\\n\u6c42\u77e9\u9635matrix\u5bf9\u5e94\u7684\u524d\u7f00\u548c\u77e9\u9635prefixMatrix\u76f8\u6bd4\u4e8e\u4e00\u7ef4\u6570\u7ec4\u66f4\u52a0\u590d\u6742\uff0c\u601d\u8def\u8fd8\u662f\u4f7f\u7528\u5bb9\u65a5\u539f\u7406\uff0c\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\u6240\u793a\uff1a\\r\\n\\r\\n```java {9-11}\\r\\npublic NumMatrix(int[][] matrix) {\\r\\n    int row = matrix.length;\\r\\n    int col = matrix[0].length;\\r\\n\\r\\n    prefixMatrix = new int[row+1][col+1];\\r\\n\\r\\n    for (int i = 1; i < row + 1; i++) {\\r\\n        for (int j = 1; j < col + 1; j++) {\\r\\n            prefixMatrix[i][j] = \\r\\n                    prefixMatrix[i-1][j] + prefixMatrix[i][j-1] \\r\\n                    - prefixMatrix[i-1][j-1] + matrix[i-1][j-1];\\r\\n        }\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n:::tip \u7f16\u7a0b\u63d0\u793a\\r\\n\\r\\n- \u548c\u4e00\u7ef4\u6570\u7ec4\u4e00\u6837\uff0c\u65b0\u6784\u9020\u7684\u524d\u7f00\u548c\u77e9\u9635\u5728\u6bcf\u4e2a\u7ef4\u5ea6\u4e0a\u7684\u957f\u5ea6\u90fd\u662f\u539f\u6765\u77e9\u9635\u52a01\\r\\n- \u56e0\u6b64\u904d\u5386prefixMatrix\u7684\u4e24\u4e2a\u4e0b\u6807\u4ece1\u5f00\u59cb\uff0c\u9996\u884c\u548c\u9996\u5217\u5143\u7d20\u9ed8\u8ba4\u4e3a0\\r\\n- \u6ce8\u610f\u8ba1\u7b97\u516c\u5f0f\u4e0d\u8981\u5199\u9519\\r\\n:::\\r\\n\\r\\n\u63a5\u4e0b\u6765\u9700\u8981\u63a8\u5bfc\u51fa\u5b50\u77e9\u9635\u548csumMatrix[[m,n][x,y]]\u4e0eprefixMatrix[i][j]\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5176\u4e2d[m,n]\uff0c[x,y]\u5206\u522b\u662f\u5b50\u77e9\u9635\u5de6\u4e0a\u3001\u53f3\u4e0b\u9876\u70b9\u5750\u6807\u3002\u6839\u636e\u5bb9\u65a5\u539f\u7406\uff0c\u5f97\u5230\u5173\u7cfb\u5982\u4e0b\uff1a\\r\\n\\r\\n$$\\r\\nsumMatrix[[m,n][x,y]] = prefixMatrix[x][y] \\\\\\\\\\r\\n                      - ( prefixMatrix[m-1][y] \\\\\\\\\\r\\n                      + prefixMatrix[x][n-1] \\\\\\\\\\r\\n                      - prefixMatrix[m-1][n-1])\\r\\n$$\\r\\n\\r\\n\u5bf9\u5e94\u7684\u4ee3\u7801\u5b9e\u73b0\u4e3a\uff1a\\r\\n\\r\\n```java\\r\\npublic int sumRegion(int row1, int col1, int row2, int col2) {\\r\\n    return sumMatrix[row2+1][col2+1] - \\r\\n           (sumMatrix[row1][col2+1] \\r\\n           + sumMatrix[row2+1][col1] \\r\\n           - sumMatrix[row1][col1]);\\r\\n}\\r\\n```\\r\\n\\r\\n## \u603b\u7ed3\\r\\n\\r\\n\u4f7f\u7528\u524d\u7f00\u548c\u7684\u4e24\u4e2a\u8981\u70b9\uff1a\\r\\n\\r\\n1. \u6784\u9020\u8d4b\u503c\u524d\u7f00\u6570\u7ec4\u5728\u7ef4\u5ea6\u4e0a\u52a01\uff0c\u65b9\u4fbf\u5728\u8ba1\u7b97\u533a\u95f4\u548c\u65f6\u4e0d\u7528\u8003\u8651\u8fb9\u754c\u503c\u5904\u7406\\r\\n2. \u6ce8\u610f\u8ba1\u7b97\u533a\u95f4\u548c\u516c\u5f0f\u4e0d\u8981\u8bb0\u9519"},{"id":"/2021/10/13/LinkedListAlogrithms","metadata":{"permalink":"/blog/2021/10/13/LinkedListAlogrithms","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2021-10-13-LinkedListAlogrithms.md","source":"@site/blog/2021-10-13-LinkedListAlogrithms.md","title":"\u6bcf\u65e5\u7b97\u6cd5\u9898-\u94fe\u8868\u76f8\u5173\u603b\u7ed3","description":"\u6bcf\u65e5\u7b97\u6cd5\u9898-\u94fe\u8868\u76f8\u5173\u603b\u7ed3","date":"2021-10-13T00:00:00.000Z","formattedDate":"October 13, 2021","tags":[{"label":"Algorithm","permalink":"/blog/tags/algorithm"},{"label":"LinkedList","permalink":"/blog/tags/linked-list"}],"readingTime":3.585,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"\u6bcf\u65e5\u7b97\u6cd5\u9898-\u94fe\u8868\u76f8\u5173\u603b\u7ed3","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["Algorithm","LinkedList"],"description":"\u6bcf\u65e5\u7b97\u6cd5\u9898-\u94fe\u8868\u76f8\u5173\u603b\u7ed3","hide_table_of_contents":false},"prevItem":{"title":"\u6bcf\u65e5\u7b97\u6cd5\u9898-\u524d\u7f00\u548c","permalink":"/blog/2021/10/16/PrefixSum"},"nextItem":{"title":"\u6bcf\u65e5\u7b97\u6cd5\u9898-\u5b57\u7b26\u4e32\u7684\u6392\u5217","permalink":"/blog/2021/10/10/CheckInclusion"}},"content":"\u603b\u7ed3\u53cd\u8f6c\u94fe\u8868\u3001\u5faa\u73af\u94fe\u8868\u3001\u5220\u9664\u5012\u6570\u8282\u70b9\u7b49\u7ecf\u5178\u7b97\u6cd5\u9898\u76ee\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## \u53cd\u8f6c\u94fe\u8868\\r\\n\\r\\n[\u9898\u76ee\u63cf\u8ff0](https://leetcode-cn.com/problems/reverse-linked-list/)\uff1a\u7ed9\u5b9a\u5355\u5411\u94fe\u8868\u7684\u5934\u7ed3\u70b9`head`\uff0c\u5c31\u5730\u53cd\u8f6c\u94fe\u8868\u5e76\u8fd4\u56de\u65b0\u7684\u5934\u7ed3\u70b9\u3002\\r\\n:::tip \u601d\u8def\\r\\n\u5c31\u5730\u53cd\u8f6c\u9700\u8981\u7528\u5230\u4e24\u4e2a\u4e34\u65f6\u53d8\u91cf\u6307\u9488pre\u548cnext\uff0cpre\u4fdd\u5b58\u5f53\u524d\u8282\u70b9\u7684\u4e0a\u4e00\u4e2a\u8282\u70b9\uff08\u540c\u65f6\u4e5f\u662f\u53cd\u8f6c\u94fe\u8868\u65b0\u7684\u5934\u7ed3\u70b9\uff09\uff0cnext\u4fdd\u5b58\u5f53\u524d\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u8ba9\u5f53\u524d\u8282\u70b9\u6307\u9488cur\u80fd\u591f\u8fc7\u6e21\u5230\u53f3\u8fb9\u8fd8\u6ca1\u6709\u53cd\u8f6c\u7684\u90e8\u5206\u3002\\r\\n:::\\r\\n\\r\\n```java\\r\\nclass Solution {\\r\\n    public ListNode reverseList(ListNode head) {\\r\\n        ListNode pre = null, next = null;\\r\\n\\r\\n        while(head != null) {\\r\\n            next = head.next;\\r\\n            head.next = pre;\\r\\n            pre = head;\\r\\n            head = next;\\r\\n        }\\r\\n\\r\\n        return pre;\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n## \u5220\u9664\u5012\u6570\u7b2cN\u4e2a\u8282\u70b9\\r\\n\\r\\n[\u9898\u76ee\u63cf\u8ff0](https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/)\uff1a\u7ed9\u4f60\u4e00\u4e2a\u94fe\u8868\uff0c\u5220\u9664\u94fe\u8868\u7684\u5012\u6570\u7b2c n \u4e2a\u7ed3\u70b9\uff0c\u5e76\u4e14\u8fd4\u56de\u94fe\u8868\u7684\u5934\u7ed3\u70b9\u3002\\r\\n:::tip \u601d\u8def\\r\\n\u7ecf\u5178\u5feb\u6162\u6307\u9488\u65b9\u6848\uff1afast\u6307\u9488\u5148\u8d70n\u6b65\uff0c\u7136\u540eslow\u6307\u9488\u548cfast\u6307\u9488\u540c\u6b65\u8d70\uff0c\u5f53fast\u5230\u8fbe\u672b\u5c3e\u65f6slow\u6240\u6307\u4f4d\u7f6e\u4fbf\u662f\u5012\u6570\u7b2cn\u4e2a\u8282\u70b9\u3002**\u4e3a\u4e86\u65b9\u4fbf\u5220\u9664\u5012\u6570\u7b2cn\u4e2a\u8282\u70b9\uff0c\u8ba9slow\u518d\u6162\u4e00\u6b65\uff0c\u6700\u7ec8\u6307\u5411\u6240\u8981\u5220\u9664\u8282\u70b9\u7684\u524d\u9a71**\uff0c\u8fd9\u91cc\u4e3a\u4e86\u8ba9deleted\u80fd\u88ab\u56de\u6536\u5c06\u5176\u5b8c\u5168\u9694\u79bb\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u7684\u4e00\u884c\u4ee3\u7801`slow.next=slow.next.next`\u3002\\r\\n:::\\r\\n\\r\\n```java {4}\\r\\nclass Solution {\\r\\n    public ListNode removeNthFromEnd(ListNode head, int n) {\\r\\n        ListNode tmpHead = new ListNode(-1, head);\\r\\n        ListNode fast = head, slow = tmpHead, deleted;// \u6ce8\u610ffast\u548cslow\u7684\u8d77\u59cb\u4f4d\u7f6e\u4e0d\u540c\\r\\n\\r\\n        while(n-- > 0) {\\r\\n            fast = fast.next;\\r\\n        }\\r\\n\\r\\n        while(fast != null) {\\r\\n            fast = fast.next;\\r\\n            slow = slow.next;\\r\\n        }\\r\\n\\r\\n        deleted = slow.next;\\r\\n        slow.next = deleted.next;\\r\\n        deleted.next = null;\\r\\n\\r\\n        return tmpHead.next;\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n## :banana:\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u91cd\u5408\u70b9\\r\\n\\r\\n[\u9898\u76ee\u63cf\u8ff0](https://leetcode-cn.com/problems/intersection-of-two-linked-lists/)\uff1a\u7ed9\u4f60\u4e24\u4e2a\u5355\u94fe\u8868\u7684\u5934\u8282\u70b9`headA`\u548c`headB`\uff0c\u8bf7\u4f60\u627e\u51fa\u5e76\u8fd4\u56de\u4e24\u4e2a\u5355\u94fe\u8868\u76f8\u4ea4\u7684\u8d77\u59cb\u8282\u70b9\u3002\u5982\u679c\u4e24\u4e2a\u94fe\u8868\u6ca1\u6709\u4ea4\u70b9\uff0c\u8fd4\u56de`null`\u3002\\r\\n\\r\\n:::tip \u601d\u8def\\r\\n\\r\\n1. \u4f7f\u7528HashSet\u4fdd\u5b58A\u94fe\u8868\u6240\u6709\u8282\u70b9\uff0c\u7136\u540e\u904d\u5386B\u94fe\u8868\uff0c\u5728HashSet\u4e2d\u5305\u542b\u7684\u5373\u4e3a\u76f8\u4ea4\u8282\u70b9\\r\\n\\r\\n2. \u7279\u6b8a\u7684\u53cc\u6307\u9488\u904d\u5386\uff1a**\u5f53\u6307\u9488a\u5230\u8fbe\u5b8cA\u94fe\u8868\u672b\u5c3e\uff0c\u8f6c\u800c\u904d\u5386B\u94fe\u8868\uff0c\u6307\u9488b\u4ea6\u7136\u3002\u5f53a\u7b49\u4e8eb\u65f6\u5373\u4e3a\u6240\u6c42\u7ed3\u679c**\\r\\n  \\r\\n\u8bc1\u660e\uff1a\u8bbeA\u3001B\u94fe\u8868\u957f\u5ea6\u5206\u522b\u4e3am\u3001n\uff0c\u91cd\u53e0\u90e8\u5206\u957f\u5ea6\u4e3ak\uff0c\u5f53\u6307\u9488a\u548c\u6307\u9488b\u90fd\u8d70\u4e86(m+n-k)\u6b65\u65f6\uff0c\u6b64\u65f6a\u3001b\u90fd\u5728\u94fe\u8868\u4ea4\u70b9(\u5373a==b)\u3002\u5982\u679c\u6ca1\u6709\u4ea4\u70b9\uff0c\u6700\u540ea\u548cb\u4e5f\u90fd\u4f1a\u4e3anull\uff0c\u6b64\u65f6\u4e5f\u6709a==b\u3002\\r\\n\\r\\n**\u5728\u7f16\u5199\u4ee3\u7801\u65f6\u6ce8\u610f\u4e24\u70b9\uff1a\u4e00\u662f\u7528\u4e34\u65f6\u8282\u70b9\u4fdd\u5b58\u5934\u7ed3\u70b9\u5426\u5219\u627e\u4e0d\u5230\u6700\u5f00\u59cb\u4f4d\u7f6e\uff0c\u4e8c\u662fwhile\u5faa\u73af\u5185\u7684\u5224\u65ad\u6761\u4ef6\u662f`tmpA==tmpB`\u800c\u4e0d\u662f`tmpA.next==tmpB.next`\u3002**\\r\\n:::\\r\\n\\r\\n```java\\r\\npublic class Solution {\\r\\n    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {\\r\\n        ListNode tmpA = headA;\\r\\n        ListNode tmpB = headB;\\r\\n        while(tmpA != tmpB) {\\r\\n            tmpA = (tmpA == null) ? headB : tmpA.next;\\r\\n            tmpB = (tmpB == null) ? headA : tmpB.next;\\r\\n        }\\r\\n        return tmpA;\\r\\n    }\\r\\n}\\r\\n```"},{"id":"/2021/10/10/CheckInclusion","metadata":{"permalink":"/blog/2021/10/10/CheckInclusion","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2021-10-10-CheckInclusion.mdx","source":"@site/blog/2021-10-10-CheckInclusion.mdx","title":"\u6bcf\u65e5\u7b97\u6cd5\u9898-\u5b57\u7b26\u4e32\u7684\u6392\u5217","description":"\u6bcf\u65e5\u7b97\u6cd5\u9898-\u5b57\u7b26\u4e32\u7684\u6392\u5217","date":"2021-10-10T00:00:00.000Z","formattedDate":"October 10, 2021","tags":[{"label":"Algorithm","permalink":"/blog/tags/algorithm"}],"readingTime":6.445,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"\u6bcf\u65e5\u7b97\u6cd5\u9898-\u5b57\u7b26\u4e32\u7684\u6392\u5217","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["Algorithm"],"description":"\u6bcf\u65e5\u7b97\u6cd5\u9898-\u5b57\u7b26\u4e32\u7684\u6392\u5217","hide_table_of_contents":false},"prevItem":{"title":"\u6bcf\u65e5\u7b97\u6cd5\u9898-\u94fe\u8868\u76f8\u5173\u603b\u7ed3","permalink":"/blog/2021/10/13/LinkedListAlogrithms"},"nextItem":{"title":"Random\u5bfc\u81f4\u7684\u963b\u585e\u95ee\u9898","permalink":"/blog/2021/09/21/AProblemCausedByRandom"}},"content":"\u6bcf\u65e5\u7b97\u6cd5\u9898-\u5b57\u7b26\u4e32\u7684\u6392\u5217\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## \u539f\u9898\u63cf\u8ff0\\r\\n\u7ed9\u4f60\u4e24\u4e2a\u5b57\u7b26\u4e32s1\u548cs2\uff0c\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u5224\u65ads2\u662f\u5426\u5305\u542bs1\u7684\u6392\u5217\u3002\u5982\u679c\u662f\uff0c\u8fd4\u56detrue\uff1b\u5426\u5219\uff0c\u8fd4\u56defalse\u3002\u6362\u53e5\u8bdd\u8bf4\uff0cs1\u7684\u6392\u5217\u4e4b\u4e00\u662fs2\u7684\u5b50\u4e32\u3002\\r\\n```bash title=\u793a\u4f8b\\r\\n\u8f93\u5165\uff1as1 = \\"ab\\" s2 = \\"eidbaooo\\"\\r\\n\u8f93\u51fa\uff1atrue\\r\\n\u89e3\u91ca\uff1as2 \u5305\u542b s1 \u7684\u6392\u5217\u4e4b\u4e00 (\\"ba\\").\\r\\n\\r\\n\u8f93\u5165\uff1as1= \\"ab\\" s2 = \\"eidboaoo\\"\\r\\n\u8f93\u51fa\uff1afalse\\r\\n```\\r\\n**\u63d0\u793a\uff1a1 <= s1.length, s2.length <= 10^4\uff0cs1\u548cs2\u4ec5\u5305\u542b\u5c0f\u5199\u5b57\u6bcd**\\r\\n\\r\\n## \u89e3\u9898\u601d\u8def\\r\\n\u9898\u76ee\u610f\u601d\u662f\u6c42\u8bc1\u662f\u5426\u5b58\u5728s2\u5b50\u4e32sub2\uff0c\u4f7f\u5f97sub2\u4e3as1\u7684\u4e00\u79cd\u6392\u5217\uff0c\u8fd9\u91cc\u53ea\u9700\u8981\u5173\u5fc3sub2\u4e2d\u5b57\u7b26\u7c7b\u578b\u548c\u4e2a\u6570\u4e0es1\u7684\u76f8\u7b49\u5373\u53ef\uff0c\u7531\u4e8e\u5df2\u7ecf\u63d0\u793as1\u548cs2\u4ec5\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u957f\u5ea6\u4e3a26\u7684int\u6570\u7ec4\u6765\u8bb0\u5f55\u6bcf\u4e2a\u5c0f\u5199\u5b57\u6bcd\u51fa\u73b0\u4e2a\u6570\\r\\n\\r\\n\u5bf9\u4e8e\u76ee\u6807\u4e32s1\u548c\u5b50\u4e32sub2\uff0c\u5206\u522b\u4f7f\u7528`int pattern[26]`\u548c`int window[26]`\u6765\u8bb0\u5f55\u5b57\u7b26\u51fa\u73b0\u60c5\u51b5\u3002\u5982\u679cparttern[26]\u6bcf\u4e2a\u5143\u7d20\u7b49\u4e8ewindow[26]\uff0c\u8bf4\u660e\u6b64\u65f6sub2\u662fs1\u7684\u4e00\u79cd\u6392\u5217\u3002\u63a5\u4e0b\u6765\u8fd8\u8981\u786e\u5b9asub2\u5185\u5bb9\uff0c\u7531\u4e8esub2\u957f\u5ea6\u7b49\u4e8es1\u957f\u5ea6\uff0c\u4f7f\u7528\u56fa\u5b9a\u5927\u5c0f\u7684\u6ed1\u52a8\u7a97\u53e3\u5728s2\u4e0a\u79fb\u52a8\u5f97\u5230sub2\uff0c\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a\\r\\n```java\\r\\nclass Solution {\\r\\n    public boolean checkInclusion(String s1, String s2) {\\r\\n        int[] pattern = new int[26];\\r\\n        int[] window = new int[26];\\r\\n        int patternSize = s1.length(), sourceSize = s2.length();\\r\\n        if(patternSize > sourceSize)\\r\\n            return false;\\r\\n        // \u521d\u59cb\u7edf\u8ba1\\r\\n        for (int i = 0; i < patternSize; i++) {\\r\\n            pattern[s1.charAt(i)-\'a\']++;\\r\\n            window[s2.charAt(i)-\'a\']++;\\r\\n        }\\r\\n        // \u5224\u65ad\u4e00\u5f00\u59cb\u7a97\u53e3\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\\r\\n        if(Arrays.equals(pattern, window)) {\\r\\n            return true;\\r\\n        }\\r\\n        // \u7a97\u53e3\u6ed1\u52a8\uff0c\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\\r\\n        for (int i = patternSize; i < sourceSize; ++i) {\\r\\n            window[s2.charAt(i)-\'a\']++;   // \u5de6\u4fa7\u5b57\u7b26\u4e2a\u6570\u51cf1\\r\\n            window[s2.charAt(i-patternSize)-\'a\']--; // \u53f3\u4fa7\u5b57\u7b26\u4e2a\u6570\u52a01\\r\\n            if(Arrays.equals(pattern, window)) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n}\\r\\n```\\r\\n:::tip \u7f16\u7a0b\u4e8b\u9879\\r\\n- \u5f53s1\u957f\u5ea6\u5927\u4e8es2\u65f6\u76f4\u63a5\u8fd4\u56defalse\\r\\n- \u9996\u5148\u786e\u5b9a\u7b2c\u4e00\u4e2a\u6ed1\u52a8\u7a97\u53e3\u5b57\u7b26\u60c5\u51b5\u5e76\u5224\u65ad\u6bd4\u8f83\uff0c\u7136\u540e\u624d\u6ed1\u52a8\u7a97\u53e3\\r\\n- \u4f7f\u7528Arrays.equals(int[], int[])\u65b9\u6cd5\u8fdb\u884c\u6570\u7ec4\u6bd4\u8f83\\r\\n:::\\r\\n\\r\\n## \u65b9\u6848\u4f18\u5316\\r\\n\u4e0a\u8ff0\u89e3\u51b3\u65b9\u6848\u6bcf\u6b21\u786e\u5b9asub2\u662f\u5426\u4e3as1\u7684\u6392\u5217\u65f6\uff0c\u90fd\u8981\u5bf9\u4e24\u4e2a\u7edf\u8ba1\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u4f9d\u6b21\u6bd4\u8f83\u5927\u5c0f\uff0c\u5b9e\u9645\u4e0a\u7a97\u53e3\u6ed1\u52a8\u65f6\uff0c\u53ea\u4f1a\u51fa\u53bb1\u4e2a\u5b57\u7b26\uff0c\u52a0\u51651\u4e2a\u5b57\u7b26\uff0c\u5373window\u6570\u7ec4\u53ea\u4f1a\u6539\u53d82\uff08\u62160\uff0c\u51fa\u53bb\u8fdb\u6765\u662f\u540c\u4e00\u4e2a\u5b57\u7b26\uff09\u4e2a\u5143\u7d20\u503c\uff0c\u6ca1\u6709\u5fc5\u8981\u91cd\u65b0\u6bd4\u8f83\u8fd926\u4e2a\u5143\u7d20\u5927\u5c0f\\r\\n\\r\\n\u4e3a\u6b64\uff0c\u53ea\u4f7f\u7528\u4e00\u4e2a`int diff[26]`\u6570\u7ec4\u6765\u8868\u793as1\u548csub2\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u7684\u4e2a\u6570\u5dee\uff0c\u518d\u7528\u53d8\u91cfdiffCount\u8868\u793adiff\u6570\u7ec4\u4e2d\u5143\u7d20\u4e0d\u4e3a0\u7684\u4e2a\u6570\uff0c\u5f53diffCount\u4e3a0\u65f6\u5373\u8868\u660esub2\u662fs1\u7684\u4e00\u79cd\u6392\u5217\uff0c\u5b9e\u73b0\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a\\r\\n```java\\r\\nclass Solution {\\r\\n    public boolean checkInclusion(String s1, String s2) {\\r\\n        int[] diff = new int[26];\\r\\n        int patternSize = s1.length(), sourceSize = s2.length();\\r\\n        int diffCount = 0, left, right;\\r\\n\\r\\n        if(patternSize > sourceSize)\\r\\n            return false;\\r\\n        // \u521d\u59cb\u7edf\u8ba1\\r\\n        for (int i = 0; i < patternSize; i++) {\\r\\n            diff[s1.charAt(i)-\'a\']++;\\r\\n            diff[s2.charAt(i)-\'a\']--;\\r\\n        }\\r\\n        for (int i = 0; i < 26; i++) {\\r\\n            if(diff[i] != 0) {\\r\\n                diffCount++;\\r\\n            }\\r\\n        }\\r\\n        // \u5224\u65ad\u4e00\u5f00\u59cb\u7a97\u53e3\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\\r\\n        if(diffCount == 0) {\\r\\n            return true;\\r\\n        }\\r\\n        // \u6ed1\u52a8\u7a97\u53e3\uff0c\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\\r\\n        for (int i = patternSize; i < sourceSize; ++i) {\\r\\n            left = s2.charAt(i-patternSize)-\'a\';\\r\\n            right = s2.charAt(i)-\'a\';\\r\\n            if(left == right) {\\r\\n                continue;\\r\\n            }\\r\\n            if(diff[left] == 0) {\\r\\n                diffCount++;\\r\\n            }\\r\\n            ++diff[left];           // \u6ce8\u610f\u662f\u52a01\\r\\n            if(diff[left] == 0) {\\r\\n                diffCount--;\\r\\n            }\\r\\n            if(diff[right] == 0) {\\r\\n                diffCount++;\\r\\n            }\\r\\n            --diff[right];          // \u6ce8\u610f\u662f\u51cf1\\r\\n            if(diff[right] == 0) {\\r\\n                diffCount--;\\r\\n            }\\r\\n            if(diffCount == 0) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n}\\r\\n```\\r\\n:::caution \u6ce8\u610f\\r\\n- \u9996\u5148\u9700\u8981\u5224\u65ad\u51fa\u53bb\u8fdb\u6765\u7684\u5b57\u7b26\u662f\u5426\u76f8\u540c\uff0c\u82e5\u76f8\u540c\u76f4\u63a5\u5f80\u4e0b\u6ed1\\r\\n- \u5728\u66f4\u65b0\u5b57\u7b26\u4e2a\u6570\u5dee\u4e4b\u524d\uff0c\u5982\u679c\u5b57\u7b26\u4e2a\u6570\u5dee\u4e3a0\uff0c\u6b64\u65f6\u9700\u8981\u7ed9diffCount\u52a01(\u51fa\u73b0\u4e86\u65b0\u7684\u4e2a\u6570\u4e0d\u76f8\u540c\u5b57\u7b26)\uff0c\u5426\u5219\u4e0d\u9700\u8981\\r\\n- \u66f4\u65b0\u5b57\u7b26\u4e2a\u6570\u5dee\uff0c\u7531\u4e8ediff\u4fdd\u5b58\u7684\u662fs1\u5b57\u7b26\u4e2a\u6570\u51cf\u53bbsub2\u5b57\u7b26\u4e2a\u6570\uff0c\u6240\u4ee5\u51fa\u53bb\u7684\u5b57\u7b26\u4f4d\u7f6eleft\u5bf9\u5e94\u5143\u7d20\u52a01\uff0c\u800c\u4e0d\u662f\u51cf1\uff0c\u76f8\u53cd\u5730\uff0c\u8fdb\u6765\u7684\u5b57\u7b26\u4f4d\u7f6eright\u5bf9\u5e94\u5143\u7d20\u51cf1\\r\\n- \u66f4\u65b0\u5b8cleft\u548cright\u7684\u5b57\u7b26\u4e2a\u6570\u5dee\u540e\uff0c\u5982\u679c\u5b57\u7b26\u4e2a\u6570\u5dee\u4e3a0\uff0c\u9700\u8981\u5c06diffCount\u51cf1\uff0c\u6700\u540e\u770bdiffCount\u662f\u5426\u4e3a0\\r\\n:::\\r\\n\\r\\n## \u9898\u76ee\u6539\u8fdb\\r\\n\u5c06\u9898\u76ee\u6539\u4e3a\u8f93\u51fa\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u5b50\u4e32sub2\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u4f5c\u4e3a\u6570\u7ec4\u8fd4\u56de\u3002**\u6b64\u65f6\u9700\u8981\u6ce8\u610f\uff0c\u5f53left\u548cright\u76f8\u7b49\u65f6\u4e0d\u80fd`continue`\u8df3\u8fc7**\uff0c\u5426\u5219\u4f1a\u9519\u5931\u6b63\u786e\u7b54\u6848\uff0c\u6bd4\u5982s1\u4e3a\u201cab\u201d\uff0cs2\u4e3a\u201cabab\u201d\uff0c\u6b64\u65f6\u4f1a\u56e0\u4e3a\u8df3\u8fc7\u800c\u6f0f\u6389\u4e86\u4f4d\u7f6e1\uff0c2\\r\\n```java\\r\\nfor (int i = 0; i < patternLen; i++) {\\r\\n    ++diff[s.charAt(i) - \'a\'];\\r\\n    --diff[p.charAt(i) - \'a\'];\\r\\n}\\r\\nfor (int i : diff) {\\r\\n    if(i != 0) {\\r\\n        ++diffCount;\\r\\n    }\\r\\n}\\r\\nif(diffCount == 0) {\\r\\n    ans.add(0);\\r\\n}\\r\\n\\r\\nfor (int i = patternLen; i < sourceLen; i++) {\\r\\n    left = s.charAt(i-patternLen) - \'a\';\\r\\n    right = s.charAt(i) - \'a\';\\r\\n    if(diff[left] == 0) {\\r\\n        ++diffCount;        // \u6ce8\u610f\u8fd9\u91cc\u662f+1\uff0cdiff[]\u542b\u4e49\u6539\u53d8\u4e86\\r\\n    }\\r\\n    --diff[left];\\r\\n    if(diff[left] == 0) {\\r\\n        --diffCount;\\r\\n    }\\r\\n    if(diff[right] == 0) {\\r\\n        ++diffCount;\\r\\n    }\\r\\n    ++diff[right];\\r\\n    if(diff[right] == 0) {\\r\\n        --diffCount;\\r\\n    }\\r\\n    if(diffCount == 0) {\\r\\n        ans.add(i-patternLen+1);    // \u6ce8\u610f\u7b54\u6848\u4f4d\u7f6e\u7684\u8ba1\u7b97\u8981\u52a01\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n## \u603b\u7ed3\\r\\n\u4f18\u5316\u65b9\u6848\u6709\u4e24\u4e2a\u5751\uff0c\u4e00\u662f\u9700\u8981\u5224\u65adleft\u548cright\u662f\u5426\u76f8\u540c(\u4e0d\u5f71\u54cd\u7ed3\u679c\u6b63\u786e\u6027\uff0c\u8df3\u8fc7\u53ef\u4ee5\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u4ee3\u7801\u6267\u884c)\uff0c\u4e8c\u662f\u66f4\u65b0diff[left]\u548cdiff[right]\u9700\u8981\u7406\u6e05\u695a\u5230\u5e95\u662f\u52a01\u8fd8\u662f\u51cf1"},{"id":"/2021/09/21/AProblemCausedByRandom","metadata":{"permalink":"/blog/2021/09/21/AProblemCausedByRandom","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2021-09-21-AProblemCausedByRandom.mdx","source":"@site/blog/2021-09-21-AProblemCausedByRandom.mdx","title":"Random\u5bfc\u81f4\u7684\u963b\u585e\u95ee\u9898","description":"\u8bb0\u4e00\u6b21\u7531Random\u5bfc\u81f4\u7684\u963b\u585e\u95ee\u9898","date":"2021-09-21T00:00:00.000Z","formattedDate":"September 21, 2021","tags":[{"label":"Random","permalink":"/blog/tags/random"},{"label":"OpenJDK","permalink":"/blog/tags/open-jdk"}],"readingTime":6.975,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"Random\u5bfc\u81f4\u7684\u963b\u585e\u95ee\u9898","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["Random","OpenJDK"],"description":"\u8bb0\u4e00\u6b21\u7531Random\u5bfc\u81f4\u7684\u963b\u585e\u95ee\u9898","hide_table_of_contents":false},"prevItem":{"title":"\u6bcf\u65e5\u7b97\u6cd5\u9898-\u5b57\u7b26\u4e32\u7684\u6392\u5217","permalink":"/blog/2021/10/10/CheckInclusion"},"nextItem":{"title":"\u6c42\u6700\u957f\u56de\u6587\u5b50\u4e32","permalink":"/blog/2021/09/21/LongestPalindrome"}},"content":"\u8bb0\u4e00\u6b21\u7531Random\u4f7f\u7528\u4e0d\u6070\u5f53\u5bfc\u81f4\u7684\u963b\u585e\u95ee\u9898\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## \u95ee\u9898\u63cf\u8ff0\\r\\n\u67d0\u6b21\u4ea7\u54c1\u5728\u7ebf\u7f51\u9879\u76ee\u90e8\u7f72\u540e\uff0c\u6bcf\u6b21\u70b9\u51fb\u7533\u8bf7\u8868\u5355\u65f6\u9875\u9762\u90fd\u4f1a\u5361\u4f4f\uff0c\u65e5\u5fd7\u4e5f\u4e0d\u89c1\u5f02\u5e38\uff0c\u4f7f\u7528jstack\u8c03\u51fa\u65e5\u5fd7\uff0c\u53d1\u73b0\u5982\u4e0b\u5f02\u5e38\\r\\n```log\\r\\n\\"http-nio-9903-exec-9\\" #104 daemon prio=5 os_prio=0 tid=0x00007fab00f4a800 nid=0x85 waiting for monitor entry [0x00007fa8efcf8000]\\r\\n   java.lang.Thread.State: BLOCKED (on object monitor)\\r\\n\\tat sun.security.provider.NativePRNG$RandomIO.getMixRandom(NativePRNG.java:399)\\r\\n\\t- waiting to lock <0x0000000080ad93f8> (a java.lang.Object)\\r\\n\\tat sun.security.provider.NativePRNG$RandomIO.implNextBytes(NativePRNG.java:535)\\r\\n\\tat sun.security.provider.NativePRNG$RandomIO.access$400(NativePRNG.java:331)\\r\\n\\tat sun.security.provider.NativePRNG$Blocking.engineNextBytes(NativePRNG.java:268)\\r\\n\\tat java.security.SecureRandom.nextBytes(SecureRandom.java:468)\\r\\n\\tat java.security.SecureRandom.next(SecureRandom.java:491)\\r\\n\\tat java.util.Random.nextInt(Random.java:390)\\r\\n  ...\\r\\n```\\r\\n\u8fd9\u91cc\u4ee3\u7801\u8c03\u7528\u4e86Random.nextInt()\u65b9\u6cd5\uff0c\u4e3a\u4e1a\u52a1\u7533\u8bf7\u8868\u5355\u751f\u6210\u4e00\u4e2a4\u4f4d\u968f\u673a\u53f7\u7801\u3002\u53ef\u4ee5\u770b\u5230\u963b\u585e\u539f\u56e0\u6765\u81eaSecureRandom\\r\\n\\r\\n## \u539f\u56e0\u5206\u6790\\r\\nSecureRandom\u751f\u6210\u968f\u673a\u6570\u9700\u8981\u968f\u673a\u79cd\u5b50\uff0c\u4e00\u822c\u4ece/dev/random\u6216/dev/urandom\u4e2d\u83b7\u53d6\uff0c\u5728SecureRandom\u6e90\u7801\u4e0a\u6709\u5982\u4e0b\u6ce8\u91ca\uff1a\\r\\n> Note: Depending on the implementation, the generateSeed and \\r\\nnextBytes methods may block as entropy is being gathered,\\r\\n for example, if they need to read from /dev/random on various \\r\\nUnix-like operating systems.\\r\\n\\r\\n\u5982\u679c\u5b9e\u73b0\u7c7b\u4ece/dev/random\u4e2d\u8bfb\u53d6\uff0c\u90a3\u4e48nextBytes()\u65b9\u6cd5\u53ef\u80fd\u4f1a\u88ab\u963b\u585e\uff0c\u7531\u6b64\u5bfc\u81f4\u4e0a\u8ff0\u95ee\u9898\\r\\n\\r\\n## \u89e3\u51b3\u65b9\u6cd5\\r\\n1. \u5728\u83b7\u53d6SecureRandom\u5bf9\u8c61\u65f6\u4e0d\u8981\u7528`SecureRandom.getInstanceStrong()`\uff0c\u6539\u6210`SecureRandom.getInstance(\\"NativePRNGNonBlocking\\")`\\r\\n2. \u542f\u52a8\u53c2\u6570\u6dfb\u52a0-Djava.security.egd=file:/dev/urandom\\r\\n3. \u4fee\u6539$JAVA_HOME/jre/lib/security/java.security\u6587\u4ef6\uff0c\u5c06\u914d\u7f6e\u9879securerandom.source\u4fee\u6539\u4e3a`securerandom.source=file:/dev/random`\\r\\n\\r\\n## \u6df1\u5165\u7814\u7a76\\r\\n\\r\\n### java.util.Random\\r\\n\u4f7f\u7528\u7ebf\u6027\u540c\u4f59\u4f2a\u968f\u673a\u6570\u751f\u6210\u5668(LGC)\uff0c\u5176\u7f3a\u70b9\u662f\u53ef\u9884\u6d4b\u7684\uff0c\u56e0\u6b64\u6ce8\u91cd\u5b89\u5168\u65f6\u5e94\u4f7f\u7528SecureRandom\u4ee3\u66ffRandom\uff0cRandom\u9ed8\u8ba4\u4f7f\u7528\u7cfb\u7edf\u5f53\u524d\u65f6\u95f4\u4f5c\u4e3a\u79cd\u5b50\uff0c**\u53ea\u8981\u79cd\u5b50\u4e00\u6837\uff0c\u4ea7\u751f\u968f\u673a\u6570\u4e5f\u76f8\u540c**\\r\\n```java\\r\\npublic void sameSeedTest() {\\r\\n    Random r1 = new Random(123);\\r\\n    Random r2 = new Random(123);\\r\\n    for (int i = 0; i < 5; i++) {\\r\\n        // \u8f93\u51fa\u90fd\u4e3atrue\\r\\n        System.out.println(r1.nextInt() == r2.nextInt());\\r\\n    }\\r\\n}\\r\\n```\\r\\nRandom\u751f\u6210\u968f\u673a\u6570\u5206\u4e3a\u4e24\u6b65\uff1a\\r\\n1. \u7531\u65e7seed\u751f\u6210\u65b0seed\\r\\n2. \u7531\u65b0seed\u751f\u6210\u65b0\u968f\u673a\u6570\\r\\n\u5728Random\u4e2dseed\u662f\u4e00\u4e2aAtomicLong\u5bf9\u8c61\uff0c\u770bnext\u65b9\u6cd5\u6e90\u7801\\r\\n```java\\r\\nprotected int next(int bits) {\\r\\n    long oldseed, nextseed;\\r\\n    AtomicLong seed = this.seed;\\r\\n    do {\\r\\n        oldseed = seed.get();\\r\\n        nextseed = (oldseed * multiplier + addend) & mask;\\r\\n    } while (!seed.compareAndSet(oldseed, nextseed));\\r\\n    return (int)(nextseed >>> (48 - bits));\\r\\n}\\r\\n```\\r\\n\u5f53\u8bbe\u7f6e\u65b0seed\u65f6\u4f7f\u7528CAS\u64cd\u4f5c\u66f4\u65b0\uff0c\u56e0\u6b64\u5728\u591a\u7ebf\u7a0b\u573a\u666f\u4e0b\u4e00\u4e2a\u5171\u4eab\u7684Random\u5bf9\u8c61\u751f\u6210\u7684\u968f\u673a\u6570\u4ecd\u7136\u4e0d\u662f\u76f8\u540c\u7684\\r\\n\\r\\n### java.util.concurrent.ThreadLocalRandom\\r\\nRandom\u7c7b\u4f7f\u7528CAS\u64cd\u4f5c\u786e\u4fdd\u6bcf\u6b21\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u66f4\u65b0seed\uff0c\u4f46\u662f\u589e\u52a0\u4e86\u5f00\u9500\u548c\u7ebf\u7a0b\u7ade\u4e89\u3002\u4e3a\u4e86\u907f\u514d\u7ade\u4e89\uff0cJDK 7\u5f15\u5165ThreadLocalRandom\u7c7b\uff0c\u7ed9\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u4fdd\u5b58\u5b83\u81ea\u5df1\u7684seed\uff0c\u4f7f\u7528\u4ee3\u7801\u5982\u4e0b\uff1a\\r\\n```java\\r\\npublic class TLRDemo {\\r\\n    private static class RNGPrinter extends Thread {\\r\\n        @Override\\r\\n        public void run() {\\r\\n            System.out.println(getName() + \\": \\" + ThreadLocalRandom.current().nextInt(100));\\r\\n        }\\r\\n    }\\r\\n    public static void main(String[] args) {\\r\\n        for (int i = 0; i < 5; i++) {\\r\\n            new RNGPrinter().start();\\r\\n        }\\r\\n    }\\r\\n}\\r\\n```\\r\\n\u5206\u6790\u4e00\u4e0b`ThreadLocalRandom.current().nextInt(100))`\u8fd9\u884c\u4ee3\u7801\u7684\u542b\u4e49\\r\\n```java title=java/util/concurrent/ThreadLocalRandom.java\\r\\n /** The common ThreadLocalRandom */\\r\\nstatic final ThreadLocalRandom instance = new ThreadLocalRandom();\\r\\n\\r\\npublic static ThreadLocalRandom current() {\\r\\n    if (UNSAFE.getInt(Thread.currentThread(), PROBE) == 0)\\r\\n        localInit();\\r\\n    return instance;\\r\\n}\\r\\n```\\r\\n\u4f7f\u7528UNSAFT.getInt\u64cd\u4f5c\u83b7\u53d6\u5f53\u524dThread\u5bf9\u8c61threadLocalRandomProbe\u5b57\u6bb5\u7684\u503c\uff0c\u8fd9\u91ccPROBE\u662f\u8be5\u5b57\u6bb5\u5728Thread\u5bf9\u8c61\u4e2d\u7684\u504f\u79fb\u5730\u5740\uff0c\u5982\u679cthreadLocalRandomProbe\u503c\u4e3a0\uff0c\u8bf4\u660e\u5f53\u524d\u7ebf\u7a0b\u8fd8\u6ca1\u6709\u7528\u8fc7\u968f\u673a\u6570\u751f\u6210\u5668\uff0c\u5148\u521d\u59cb\u5316\u7136\u540e\u8fd4\u56de\u9759\u6001\u53d8\u91cfinstance\uff0c\u521d\u59cb\u5316\u65b9\u6cd5localInit()\u4ee3\u7801\u5982\u4e0b\uff1a\\r\\n```java {5-7}\\r\\nstatic final void localInit() {\\r\\n    int p = probeGenerator.addAndGet(PROBE_INCREMENT);\\r\\n    int probe = (p == 0) ? 1 : p; // skip 0\\r\\n    long seed = mix64(seeder.getAndAdd(SEEDER_INCREMENT));\\r\\n    Thread t = Thread.currentThread();\\r\\n    UNSAFE.putLong(t, SEED, seed);\\r\\n    UNSAFE.putInt(t, PROBE, probe);\\r\\n}\\r\\n```\\r\\n\u8fd9\u4e2a\u901a\u8fc7UNSAFE.putXxx\u65b9\u6cd5\u7ed9\u5f53\u524d\u7ebf\u7a0b\u7684threadLocalRandomSeed\u548cthreadLocalRandomProbe\u5b57\u6bb5\u8bbe\u7f6e\u521d\u59cb\u503c\uff0c\u6ce8\u610f\u8bbe\u7f6eprobe\u65f6\u5982\u679c\u751f\u6210\u4e860\u5c31\u8bbe\u7f6e\u4e3a1\uff0c\u786e\u4fdd\u521d\u59cb\u5316\u540e\u7ebf\u7a0b\u7684probe\u4e00\u5b9a\u662f\u975e0\u503c\uff0c\u63a5\u4e0b\u6765\u518d\u770bThreadLocalRandom.nextInt\u65b9\u6cd5\\r\\n```java {4,11}\\r\\npublic int nextInt(int bound) {\\r\\n    if (bound <= 0)\\r\\n        throw new IllegalArgumentException(BadBound);\\r\\n    int r = mix32(nextSeed());\\r\\n    int m = bound - 1;\\r\\n    if ((bound & m) == 0) // power of two\\r\\n        r &= m;\\r\\n    else { // reject over-represented candidates\\r\\n        for (int u = r >>> 1;\\r\\n              u + m - (r = u % bound) < 0;\\r\\n              u = mix32(nextSeed()) >>> 1)\\r\\n            ;\\r\\n    }\\r\\n    return r;\\r\\n}\\r\\n```\\r\\n\u4e3b\u8981\u5173\u5fc3nextSeed()\u65b9\u6cd5\uff0c\u5b83\u901a\u8fc7\u65e7seed\u751f\u6210\u65b0seed\u5e76\u8fd4\u56de\uff0c\u8fd8\u662f\u7528\u5230\u4e86UNSAFE\u7c7b\u7684putXxx\u548cgetXxx\uff0c\u6ce8\u610f\u8fd9\u91cc\u751f\u6210\u65b0seed\u5c31\u662f\u5728\u65e7seed\u503c\u4e0a\u52a0GAMMA\uff0c\u8fd9\u662f\u4e00\u4e2a\u56fa\u5b9a\u503c\\r\\n```java\\r\\n/**\\r\\n * The seed increment\\r\\n */\\r\\nprivate static final long GAMMA = 0x9e3779b97f4a7c15L;\\r\\n\\r\\nfinal long nextSeed() {\\r\\n    Thread t; long r; // read and update per-thread seed\\r\\n    UNSAFE.putLong(t = Thread.currentThread(), SEED,\\r\\n                    r = UNSAFE.getLong(t, SEED) + GAMMA);\\r\\n    return r;\\r\\n}\\r\\n```\\r\\n:::danger ThreadLocalRandom\u9519\u8bef\u4f7f\u7528:angry:\\r\\n\u4ee5\u4e0b\u4ee3\u7801\u6bcf\u4e2a\u7ebf\u7a0b\u4ea7\u751f\u7684\u968f\u673a\u6570\u90fd\u662f\u76f8\u540c\u7684\uff0c**\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u8c03\u7528ThreadLocalRandom.current()\u65b9\u6cd5\uff0c\u5219\u65b0seed\u5b58\u653e\u5728\u4e3b\u7ebf\u7a0b\u4e2d**\uff0c\u56e0\u6b64\u7b2c\u4e00\u6b21\u6bcf\u4e2a\u7ebf\u7a0b\u6267\u884c\u65f6\u53bb\u62ff\u81ea\u5df1\u7684seed\u503c\u90fd\u4e3a0\uff0c\u4ea7\u751f\u7684\u65b0seed\u53c8\u662f\u76f8\u540c\u7684\uff0c\u6545\u6240\u6709\u7ebf\u7a0b\u8c03\u7528\u76f8\u540c\u6b21\u6570nextInt()\u65b9\u6cd5\u4ea7\u751f\u7684\u968f\u673a\u6570\u90fd\u662f\u76f8\u540c\u7684\\r\\n```java\\r\\npublic class ErrorTLRDEMO {\\r\\n    private static class RNGPrinter extends Thread {\\r\\n        private ThreadLocalRandom tlr;\\r\\n        public RNGPrinter(ThreadLocalRandom tlr) {\\r\\n            this.tlr = tlr;\\r\\n        }\\r\\n        @Override\\r\\n        public void run() {\\r\\n            System.out.println(getName() + \\": \\" + tlr.nextInt(100));\\r\\n        }\\r\\n    }\\r\\n    public static void main(String[] args) {\\r\\n        ThreadLocalRandom tlr = ThreadLocalRandom.current();\\r\\n        for (int i = 0; i < 5; i++) {\\r\\n            new ErrorTLRDEMO.RNGPrinter(tlr).start();\\r\\n        }\\r\\n    }\\r\\n}\\r\\n```\\r\\n:::\\r\\n:::tip \u603b\u7ed3\\r\\nThreadLocalRandom\u5e76\u6ca1\u6709\u4f7f\u7528\u5230synchronized\u6216\u8005Lock\u7b49\u540c\u6b65\u64cd\u4f5c\uff0c\u5b83\u53ea\u662f\u751f\u6210seed\u7136\u540e\u901a\u8fc7UNSAFE\u5b58\u653e\u5230Thread\u7c7b\u7684\u5b57\u6bb5\u4e2d\uff0c\u5373\u4e3a\u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u5355\u72ec\u8bbe\u7f6e\u4e00\u4e2aseed\uff0c\u5f53\u67d0\u4e2a\u7ebf\u7a0b\u9700\u8981\u751f\u6210\u968f\u673a\u6570\u65f6\uff0cThreadLocalRandom\u53c8\u4ece\u8be5\u7ebf\u7a0b\u53d6\u51faseed\u7136\u540e\u8ba1\u7b97\u5f97\u5230\u968f\u673a\u6570\uff0c\u4ece\u800c\u907f\u514d\u591a\u7ebf\u7a0b\u7ade\u4e89\u548c\u81ea\u65cb\u7b49\u5f85\\r\\n:::\\r\\n\\r\\n### SecureRandom\\r\\nRandom\u548cThreadLocalRandom\u4ea7\u751f\u968f\u673a\u6570\u5e76\u4e0d\u662f\u5bc6\u7801\u5b66\u5b89\u5168\u7684(not cryptographically secure)\uff0c\u800cSecureRandom\u63d0\u4f9b\u4e86\u6ee1\u8db3\u52a0\u5bc6\u8981\u6c42\u7684\u5f3a\u968f\u673a\u6570\u751f\u6210\u5668\u3002\\r\\n\\r\\n## \u603b\u7ed3\\r\\n1. \u4eceJava\u8bed\u6cd5\u89d2\u5ea6\u4e0a\u770b\uff0cSecureRandom\u548cThreadLocalRandom\u90fd\u662fRandom\u5b50\u7c7b\\r\\n2. ThreadLocalRandom.current()\u4e00\u5b9a\u8981\u6709\u5404\u4e2a\u7ebf\u7a0b\u8c03\u7528\\r\\n3. \u91cd\u590d\u4f7f\u7528SecureRandom\u751f\u6210\u968f\u673a\u6570\u53ef\u80fd\u4f1a\u5bfc\u81f4\u963b\u585e\\r\\n\\r\\n## \u53c2\u8003\u6587\u6863\\r\\n1. [SecureRandom\u4f7f\u7528\u4e0d\u5f53\u5f15\u8d77\u7684\u7ebf\u7a0b\u963b\u585e](https://www.cnblogs.com/it-deepinmind/p/13344553.html)"},{"id":"/2021/09/21/LongestPalindrome","metadata":{"permalink":"/blog/2021/09/21/LongestPalindrome","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2021-09-21-LongestPalindrome.mdx","source":"@site/blog/2021-09-21-LongestPalindrome.mdx","title":"\u6c42\u6700\u957f\u56de\u6587\u5b50\u4e32","description":"\u6c42\u6700\u957f\u56de\u6587\u5b50\u4e32","date":"2021-09-21T00:00:00.000Z","formattedDate":"September 21, 2021","tags":[{"label":"Algorithm","permalink":"/blog/tags/algorithm"},{"label":"Palindrome","permalink":"/blog/tags/palindrome"},{"label":"Manacher","permalink":"/blog/tags/manacher"}],"readingTime":5.34,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"\u6c42\u6700\u957f\u56de\u6587\u5b50\u4e32","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["Algorithm","Palindrome","Manacher"],"description":"\u6c42\u6700\u957f\u56de\u6587\u5b50\u4e32","hide_table_of_contents":false},"prevItem":{"title":"Random\u5bfc\u81f4\u7684\u963b\u585e\u95ee\u9898","permalink":"/blog/2021/09/21/AProblemCausedByRandom"},"nextItem":{"title":"2021\u5e749\u6708\u4efd\u5de5\u4f5c\u65e5\u5fd7","permalink":"/blog/2021/09/19/WorkJournal"}},"content":"\u7b97\u6cd5\u9898\uff1a\u6c42\u6700\u957f\u56de\u6587\u5b50\u4e32\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## \u9898\u76ee\u63cf\u8ff0\\r\\n[\u6700\u957f\u56de\u6587\u5b50\u4e32](https://leetcode-cn.com/problems/longest-palindromic-substring/)\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32`s`\uff0c\u627e\u5230`s`\u4e2d\u6700\u957f\u7684\u56de\u6587\u5b50\u4e32\uff0c\u793a\u4f8b\uff1as=\\"babad\\"\uff0c\u8f93\u51fa\u4e3a\\"bab\\"\\r\\n\\r\\n## Manacher\u7b97\u6cd5\\r\\n\\r\\n### \u6784\u9020\u65b0\u5b57\u7b26\u4e32\\r\\n\u7531\u4e8e\u5076\u6570\u957f\u5ea6\u7684\u56de\u6587\u4e32\u6ca1\u6709\u4e2d\u5fc3\u5b57\u7b26\uff0c\u8fd9\u91cc\u7531\u539f\u5b57\u7b26\u4e32s\u6784\u9020\u4e00\u4e2a\u65b0\u5b57\u7b26\u4e32str\u3002\u6784\u9020\u89c4\u5219\uff1a\u53d6\u4e09\u4e2a**\u4e92\u4e0d\u76f8\u540c\u4e14\u4e0d\u4f1a\u5728s\u4e2d\u51fa\u73b0**\u7684\u5b57\u7b26\uff0c\u4ee5`^`\u3001`$`\u3001`#`\u4e3a\u4f8b\uff0c\u9996\u5148\u7528`$`\u4f5c\u4e3a\u9996\u5b57\u7b26\uff0c\u7136\u540e\u5728s\u5b57\u7b26\u4e4b\u95f4\u63d2\u5165`#`\uff0c\u6700\u540e\u63d2\u5165`^`\uff0c\u8fd9\u6837\u65b9\u4fbf\u540e\u5e8f\u7684\u4e2d\u5fc3\u6269\u6563\u64cd\u4f5c\u65f6\u4e0d\u7528\u5224\u65ad\u662f\u5426\u6ea2\u51fa\u8fb9\u754c\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\r\\n```java\\r\\npublic String initStr(String s) {\\r\\n    StringBuilder sb = new StringBuilder(\\"$#\\");\\r\\n    for (int i = 0; i < s.length(); i++) {\\r\\n        sb.append(s.charAt(i));\\r\\n        sb.append(\'#\');\\r\\n    }\\r\\n    sb.append(\'^\');     // \u6ce8\u610f\u8fd8\u8981\u52a0\u53e6\u4e00\u4e2a\u4e0d\u76f8\u5e72\u7684\u5b57\u7b26\uff0c\u8fd9\u6837\u4e0b\u9762\u7684\u6269\u5c55\u4e0d\u7528\u5224\u65ad\u8fb9\u754c\u662f\u5426\u6ea2\u51fa\\r\\n    return sb.toString();\\r\\n}\\r\\n```\\r\\n\\r\\n### \u627e\u5230\u56de\u6587\u4e2d\u5fc3\u548c\u6700\u5927\u957f\u5ea6\\r\\n1. \u5f53i\u5c0f\u4e8e\u5f53\u524d\u6700\u957f\u56de\u6587\u7684\u4e0a\u754cupBound\u65f6\\r\\n    1. \u4ee5i\u4e3a\u4e2d\u5fc3\u7684\u56de\u6587\u957f\u5ea6\u81f3\u5c11\u4e3a\u5bf9\u79f0\u70b9\u56de\u6587\u957f\u5ea6\u6216\u8005upBound-i\\r\\n2. \u5f53i\u5927\u4e8e\u7b49\u4e8e\u6700\u957f\u56de\u6587\u7684\u4e0a\u754c\u65f6\\r\\n    1. \u6ca1\u6709\u89c4\u5f8b\uff0c\u53ea\u597d\u4ece1\u5f00\u59cb\\r\\n3. while\u5faa\u73af\u7531i\u9010\u6e10\u5411\u4e24\u7aef\u6269\u5c55\uff0c\u8fd9\u91cc\u4e0d\u9700\u8981\u5224\u65adi\u662f\u5426\u8d85\u8fc7\u8fb9\u754c\\r\\n4. \u5f53i+expand[i]\u5927\u4e8eupBound\u65f6\uff0c\u66f4\u65b0upBound\u548ccenter\\r\\n5. \u5f53expand[i]\u5927\u4e8e\u6700\u5927\u957f\u5ea6maxLength\u65f6\uff0c\u66f4\u65b0finalCenter\u548cmaxLength\\r\\n6. \u8fd4\u56de\u7ed3\u679c\uff0c\u5b50\u4e32\u8d77\u59cb\u4f4d\u7f6e`start`\u4e3a`(finalCenter-maxLength)/2`\uff0c\u7ed3\u675f\u4f4d\u7f6e\u4e3a`start+maxLength-1`\\r\\n```java\\r\\npublic String manacher(char[] str, String s) {\\r\\n    int i, center = 0, upBound = 0, maxLength = 0, finalCenter = 0;\\r\\n    int len = str.length;\\r\\n    int[] expand = new int[len];\\r\\n    // i\u4ece1\u5f00\u59cb\uff0c\u5230len-1\u7ed3\u675f\uff0c\u6ce8\u610f\uff01\\r\\n    for (i =1; i < len-1; ++i) {\\r\\n        // \u53ef\u4ee5\u8df3\u8fc7\u6b65\u6570\\r\\n        expand[i] = (i < upBound) ? Math.min(expand[2*center - i], upBound-i) : 1;\\r\\n        // \u4e24\u7aef\u6bd4\u8f83\uff0c\u6ce8\u610f\u5148\u5224\u65ad\u8fb9\u754c\u6761\u4ef6\u518d\u8df3\\r\\n        while(str[i-expand[i]] == str[i+expand[i]]) {\\r\\n            expand[i]++;\\r\\n        }\\r\\n        // \u66f4\u65b0\u4e2d\u5fc3\u70b9\u548c\u4e0a\u754c\\r\\n        if(expand[i] + i > upBound) {\\r\\n            center = i;\\r\\n            upBound = expand[i] + i;\\r\\n        }\\r\\n        // \u66f4\u65b0\u6700\u957f\u56de\u6587\u4e32\u957f\u5ea6\u53ca\u5176\u4e0b\u6807\\r\\n        if(expand[i] > maxLength) {\\r\\n            maxLength = expand[i];\\r\\n            finalCenter = i;\\r\\n        }\\r\\n    }\\r\\n    // \u6ce8\u610f\u6700\u540e\u8fd4\u56de\u6700\u5927\u957f\u5ea6\u65f6\u8981\u51cf1\uff0c\u4e0d\u80fd\u76f4\u63a5\u8fd4\u56deupBound-center\uff0c\u8fd9\u662f\u6700\u540e\u4e00\u4e2a\u56de\u6587\u4e32\u957f\u5ea6\u4e0d\u662f\u6700\u957f\u56de\u6587\u4e32\u957f\u5ea6\\r\\n    // return maxLength-1;\\r\\n    // \u8fd4\u56de\u6700\u957f\u56de\u6587\u4e32\\r\\n    return s.substring((finalCenter-maxLength)/2, (finalCenter-maxLength)/2 + maxLength-1);\\r\\n}\\r\\n```\\r\\n:::caution \u7f16\u7a0b\u7ec6\u8282\\r\\n1. for\u5faa\u73afi\u4ece1\u5f00\u59cb\uff0c\u5230len-1\u7ed3\u675f\\r\\n2. \u6700\u957f\u56de\u6587\u4e32\u957f\u5ea6\u662fmaxLength-1\u800c\u4e0d\u662fmaxLength\\r\\n3. \u5f53expand[i]+i>upBound\u65f6\u662f\u5c40\u90e8\u6700\u957f\u56de\u6587\u5b50\u4e32\u800c\u4e0d\u662f\u5168\u5c40\u56de\u6587\u5b50\u4e32\uff0c\u5e94\u8be5\u5728\u6bcf\u4e00\u6b21\u904d\u5386\u65f6\u7ef4\u62a4\uff0c\u800c\u4e0d\u662ffor\u9000\u51fa\u540e\u76f4\u63a5\u62ffi\u5f53\u505a\u6700\u957f\u56de\u6587\u5b50\u4e32\u4e2d\u5fc3\\r\\n4. while\u5faa\u73af\u6ca1\u6709\u5224\u65ad\u8fb9\u754c\uff0c\u6700\u957f\u56de\u6587\u4e2d\u5fc3\u662f(finalCenter-maxLength)/2\u90fd\u662f\u8981\u9760initStr\u6b63\u786e\u5904\u7406\u624d\u80fd\u786e\u4fdd\\r\\n:::\\r\\n\\r\\n## \u9898\u76ee\u53d8\u5f62\\r\\n\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32s\uff0c\u8bf7\u8ba1\u7b97\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6709\u591a\u5c11\u4e2a\u56de\u6587\u5b50\u5b57\u7b26\u4e32\u3002\u5177\u6709\u4e0d\u540c\u5f00\u59cb\u4f4d\u7f6e\u6216\u7ed3\u675f\u4f4d\u7f6e\u7684\u5b50\u4e32\uff0c\u5373\u4f7f\u662f\u7531\u76f8\u540c\u7684\u5b57\u7b26\u7ec4\u6210\uff0c\u4e5f\u4f1a\u88ab\u89c6\u4f5c\u4e0d\u540c\u7684\u5b50\u4e32\u3002\\r\\n\\r\\n### \u601d\u8def\u5206\u6790\\r\\n\u56de\u987e\u524d\u9762\u5728\u904d\u5386str\u65f6\uff0c\u5f97\u5230\u4e86str\u4e0a\u6bcf\u4e2a\u5b57\u7b26\u5728i\u4f4d\u7f6e\u80fd\u591f\u5ef6\u4f38\u7684\u6700\u5927\u5bf9\u79f0\u957f\u5ea6expand[i]\uff0c\u90a3\u4e48\u628a\u6240\u6709expand[i]\u52a0\u8d77\u6765\u5c31\u5f97\u5230str\u6240\u6709\u56de\u6587\u5b50\u4e32\u7684\u4e2a\u6570\u3002\u53ef\u662f\u53c8\u8981\u600e\u4e48\u6c42s\u6240\u6709\u56de\u6587\u5b50\u4e32\u7684\u4e2a\u6570\u5462\uff1f\\r\\n\\r\\n\u7531\u4e8estr\u662f\u5728s\u7684\u57fa\u7840\u4e0a\u95f4\u9694\u5b57\u7b26\u63d2\u5165\'#\'\uff0c\u53ef\u4ee5\u8fd9\u4e48\u7406\u89e3\uff1a**\u5bf9\u4e8es\u6765\u8bf4\uff0cstr\u7684\u56de\u6587\u5b50\u4e32\'#b#\'\u5c31\u662fs\u7684\u56de\u6587\u4e32\'b\'\u5305\u4e86\u5c42\u76ae\uff0cstr\u7684\u56de\u6587\u5b50\u4e32\'#a#b#a\'\u5c31\u662fs\u7684\u56de\u6587\u4e32\'abc\'\u5305\u4e86\u5c42\u76ae**\uff0c\u56e0\u6b64\u53ef\u4ee5\u5f97\u5230`s_expand[i]=str_expand[i]/2`\u3002\u6700\u540e\u5b9e\u73b0\u4ee3\u7801\u5c31\u5f88\u660e\u4e86\uff1a\\r\\n```java\\r\\npublic int manacher(char[] str, int len) {\\r\\n    int center = 0, radius = 0, ans = 0;\\r\\n    int[] radArray = new int[len];\\r\\n\\r\\n    for (int i = 1; i < len - 1; i++) {\\r\\n        radArray[i] = (center + radius > i) ? Math.min(radArray[2*center-i], center + radius - i) : 1;\\r\\n        while(str[i - radArray[i]] == str[i + radArray[i]]) {\\r\\n            ++radArray[i];\\r\\n        }\\r\\n        if(radArray[i] > radius) {\\r\\n            center = i;\\r\\n            radius = radArray[i];\\r\\n        }\\r\\n        ans += radArray[i]/2;\\r\\n    }\\r\\n    return ans;\\r\\n}\\r\\n```\\r\\n:::caution \u6ce8\u610f\\r\\n\u4e25\u683c\u6765\u8bf4\uff0c\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u8ba1\u7b97\u5f97\u5230radArray\u662f\u4e0d\u51c6\u786e\u7684(\u9996\u5c3e\u5143\u7d20\u90fd\u662f0)\uff0c\u5b9e\u9645\u4e0a\u5e94\u8be5\u4e3a1\uff0c\u53ea\u4e0d\u8fc7\u56e0\u4e3a0\u548c1\u88ab2\u6574\u9664\u7ed3\u679c\u90fd\u662f0\uff0c\u5e76\u4e0d\u5f71\u54cd\u6700\u7ec8\u7ed3\u679c\\r\\n:::"},{"id":"/2021/09/19/WorkJournal","metadata":{"permalink":"/blog/2021/09/19/WorkJournal","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2021-09-19-WorkJournal.mdx","source":"@site/blog/2021-09-19-WorkJournal.mdx","title":"2021\u5e749\u6708\u4efd\u5de5\u4f5c\u65e5\u5fd7","description":"2021\u5e749\u6708\u4efd\u5de5\u4f5c\u65e5\u5fd7","date":"2021-09-19T00:00:00.000Z","formattedDate":"September 19, 2021","tags":[{"label":"Work Journal","permalink":"/blog/tags/work-journal"}],"readingTime":10.25,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"2021\u5e749\u6708\u4efd\u5de5\u4f5c\u65e5\u5fd7","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["Work Journal"],"description":"2021\u5e749\u6708\u4efd\u5de5\u4f5c\u65e5\u5fd7","hide_table_of_contents":false},"prevItem":{"title":"\u6c42\u6700\u957f\u56de\u6587\u5b50\u4e32","permalink":"/blog/2021/09/21/LongestPalindrome"},"nextItem":{"title":"\u7eaf\u6570\u5b66\u7684\u7b97\u6cd5\u9898(1)","permalink":"/blog/2021/09/13/MathAlgorithms-01"}},"content":"\u5305\u542b\u4ece3\u6708\u4efd\u52309\u6708\u4efd\u7684\u5de5\u4f5c\u65e5\u5fd7\uff0c\u4e3b\u8981\u8bb0\u5f55\u65b0\u5b66\u5230\u7684\u96f6\u661f\u6280\u672f\u70b9\\r\\n\x3c!--truncate--\x3e\\r\\n:::tip :lock:\u5b89\u5168\u95ee\u9898\\r\\n\u540e\u7aef\u5bf9\u7528\u6237\u5bc6\u7801\u52a0\u5bc6\u4fdd\u5b58\u65f6\uff0c\u5b9e\u9645\u52a0\u5bc6\u7684\u5b57\u6bb5\u662f`\u7528\u6237\u540d+\u7528\u6237\u5bc6\u7801`\uff0c\u8fd9\u6837\u53ef\u4ee5\u9632\u6b62\u767b\u5f55\u6570\u636e\u5e93\u590d\u5236\u53e6\u4e00\u4e2a\u5df2\u77e5\u7684\u7528\u6237\u5bc6\u7801\u5b57\u6bb5\u4ece\u800c\u4fee\u6539\u7528\u6237\u5bc6\u7801\u7684\u884c\u4e3a\\r\\n:::\\r\\n\\r\\n:::tip :sparkles:Shell\u6280\u5de7\\r\\n\u5728\u7f16\u5199shell\u811a\u672c\u65f6\uff0c\u5f53\u547d\u4ee4\u8fc7\u957f\u65f6\u5f80\u5f80\u4f7f\u7528\u7a7a\u683c\u52a0`\\\\`\u8fdb\u884c\u5206\u884c\u4e66\u5199\uff0c\u901a\u5e38\u6bcf\u4e00\u884c\u5bf9\u5e94\u4e00\u4e2a\u53c2\u6570\u914d\u7f6e\uff0c\u5982\u679c\u8981\u6ce8\u91ca\u8fd9\u884c\u914d\u7f6e\uff0c\u76f4\u63a5\u5728\u884c\u9996\u52a0\u4e0a`#`\u662f\u9519\u8bef\u7684\uff0c\u8fd8\u8981\u7528`` ` ``\u5305\u88f9\u8868\u793a\u6267\u884c\u547d\u4ee4\uff0c\u800c\u8be5\u547d\u4ee4\u4ee5`#`\u5f00\u5934\u53c8\u76f8\u5f53\u4e8e\u4e0d\u6267\u884c\\r\\n```bash {7}\\r\\ndocker run -d \\\\\\r\\n--code nginx \\\\\\r\\n--restart=always \\\\\\r\\n-p 80:80 \\\\\\r\\n-v /opt/xxx/conf/:/etc/nginx/custom/conf/ \\\\\\r\\n-v /opt/nginx.conf:/etc/nginx/nginx.conf \\\\\\r\\n`# -v /opt/volume/html:/usr/share/nginx/html \\\\`\\r\\n-v /opt:/usr/share/nginx/html \\\\\\r\\n```\\r\\n:::\\r\\n\\r\\n:::info :memo:mkcert\u57fa\u672c\u4f7f\u7528\\r\\nHttps\u81ea\u7b7e\u540d\u8bc1\u4e66\u751f\u6210\u65b9\u5f0f\uff1a\\r\\n1. github\u9879\u76ee\u4e0b\u8f7d\u8f6f\u4ef6\u5305mkcert-v1.4.3-linux-amd64\\r\\n2. `chmod +x mkcert-v1.4.3-linux-amd64`\\r\\n3. `./mkcert-v1.4.3-linux-amd64 -install`\u751f\u6210\u6839\u8bc1\u4e66\uff0c\u5b58\u653e\u8def\u5f84\u7531 ./mkcert-v1.4.3-linux-amd64 xxx\u7ed9\u51fa\\r\\n4. `./mkcert-v1.4.3-linux-amd64 kayhaw.github.io`\u4e3a\u57df\u540d\u5730\u5740\u751f\u6210\u8bc1\u4e66\uff0c\u53ef\u4ee5\u6307\u5b9a\u591a\u4e2a\u57df\u540d\u3001ip\u5730\u5740\uff0c\u4f7f\u7528\u7a7a\u683c\u5206\u5f00\\r\\n:::\\r\\n\\r\\n:::info :memo:SQL\u548c\u6570\u636e\u5e93\\r\\n1. \u5c0f\u4e8e\u3001\u5927\u4e8e\u53f7\u5728xml\u6587\u4ef6\u4e2d\u662f\u7279\u6b8a\u7b26\u53f7\uff0c\u4e0d\u80fd\u76f4\u63a5\u5199`>`\u3001`<`\uff0c\u6539\u6210`&lt;`\u3001`&gt;`\\r\\n2. 13\u4f4d\u65f6\u95f4\u6233\u683c\u5f0f\u5316\u4f7f\u7528MySQL\u63d0\u4f9b\u7684FROM_UNIXTIME\u65b9\u6cd5\uff0c\u6ce8\u610f\u5148\u8981\u9664\u4ee51000\\r\\n3. MySQL timestampdiff\u7528\u6cd5\uff1a`TIMESTAMPDIFF(<UNIT>, <time1>, <time2>)`\uff0c\u5176\u4e2d`<UNIT>`\u662f\u5173\u952e\u5b57`HOUR`\u3001`DAY`\u7b49\\r\\n4. \u6a21\u7cca\u5339\u914d\u591a\u5b57\u6bb5\uff1a`INSTR(CONCAT(A, B, C), <\u5339\u914d\u5185\u5bb9>) &gt; 0`\u6216\u8005`CONCAT(A, B, C) LIKE CONCAT(\'%\', <>, \'%\')`\\r\\n5. \u4f7f\u7528`<where>`\u6807\u7b7e\u800c\u4e0d\u662f`where 1=1`\\r\\n6. MyBatis\u63a5\u53e3\u65b9\u6cd5\u8fd4\u56de\u53c2\u6570\u4e3aList\u6216Set\uff0cxml\u6587\u4ef6\u4e2d\u7684resultType\u4e0d\u8981\u5199java.util.List\uff0c\u800c\u662f\u6cdb\u578b\u53c2\u6570\u5168\u7c7b\u540d\\r\\n7. if\u6d4b\u8bd5\u6761\u4ef6\u5199\u6cd5\uff0c\u7b2c\u4e00\u79cd\u5199\u6cd5\u662f\u9519\u8bef\u7684\uff0c\u5355\u5f15\u53f7\'0\'\u4f1a\u88ab\u89c6\u4e3a\u5b57\u7b26\u800c\u4e0d\u662fString\u7c7b\u578b\\r\\n```xml\\r\\n<if test=\\"code != null and code != \'0\' and code != \'1\'\\">\\r\\n    AND user.code = #{code}\\r\\n</if>\\r\\n<if test=\\"code != null and code != \'0\'.toString() and code != \'1\'.toString()\\">\\r\\n    AND user.code = #{code}\\r\\n</if>\\r\\n```\\r\\n8. \u591a\u8868\u8fde\u63a5\u67e5\u8be2\u65f6\uff0c\u53ef\u80fd\u5177\u6709\u76f8\u540c\u7684\u5b57\u6bb5\u540d\u79f0\uff0c\u9700\u8981\u5e26\u4e0a\u8868\u540d\u524d\u7f00\\r\\n9. \u591a\u8868left join\u8fde\u63a5\u67e5\u8be2\uff0c\u53f3\u8fb9\u8868\u5b57\u6bb5\u90fd\u662f\u7a7a\uff0c\u540e\u9762\u53c8\u52a0\u4e86where\u7b5b\u9009\u6761\u4ef6\uff0c\u5bfc\u81f4\u9700\u8981\u90e8\u5206\u5b57\u6bb5\u4e3a\u7a7a\u7684\u7ec4\u5408\u8bb0\u5f55\u88ab\u8fc7\u6ee4\u51fa\u53bb\\r\\n10. mybatis list\u6539in sql\u8bed\u53e5\u7684\u5199\u6cd5\\r\\n```xml\\r\\n<if test=\\"names != null and names.size() > 0\\">\\r\\n    AND t.name IN\\r\\n    <foreach collection=\\"names\\" item=\\"name\\" index=\\"index\\" open=\\"(\\" separator=\\",\\" close=\\")\\">\\r\\n        #{name}\\r\\n    </foreach>\\r\\n</if>\\r\\n```\\r\\n11. :rotating_light:MySql JDBC\u7684getInt\u3001getDouble\u3001getBoolean\u7b49\u65b9\u6cd5\uff0c\u5728\u8868\u5b57\u6bb5\u503c\u4e3anull\u65f6\u8fd4\u56de\u7c7b\u578b\u96f6\u503c\uff0c\u4e3a\u4e86\u903b\u8f91\u6b63\u786e\u4f7f\u7528getObject\u4ee3\u66ff\uff0c\u5b9e\u9645\u4e0a\u8fd9\u4e9b\u65b9\u6cd5\u7684\u5e95\u5c42\u5b9e\u73b0\u90fd\u662f\u7528getObject\u7136\u540e\u5f3a\u5236\u8f6c\u6362\\r\\n12. :clown_face:\u8868\u540d\u4e0d\u80fd\u7528\u6765\u505aPrepareStatement\u7684\u5360\u4f4d\u7b26\uff1a`PreparedStatement statement = connection.prepareStatement(\\"SELECT * FROM ? LIMIT ?\\");`\uff0c\u7ecf\u8fc7\u89e3\u6790\u4e4b\u540e\u662f`SELECT * FROM \'kayhaw_test\' LIMIT 1000`\uff0c\u8868\u540d\u5e26\u4e0a\u4e86\u53cc\u5f15\u53f7\uff0csql\u6267\u884c\u62a5\u9519\\r\\n13. Hive\u5efa\u8868`escaped by`\u5199\u6210\u4e86`escape by`\uff0c\u6ca1\u6709\u52a0`d`\u662f\u56e0\u4e3adbeaver\u81ea\u52a8\u63d0\u793a\u7684\uff0c\u4ee5\u4e3a\u662f\u6b63\u786e\u7684\\r\\n14. Hive\u6570\u636e\u5e93\u5b57\u6bb5\u540d\u53ef\u80fd\u5305\u542b\u5404\u79cd\u7279\u6b8a\u5b57\u7b26\uff0c\u5728select\u67e5\u8be2\u65f6\u7528\u53cd\u5f15\u53f7\u5c06\u5b57\u6bb5\u540d\u5305\u88f9\u8d77\u6765\uff1b\u7c7b\u4f3c\uff0c\u5f53hive\u7528\u6237\u67e5\u8be2\u53e6\u4e00\u8868\u7a7a\u95f4\u7684\u8868\u65f6\uff0c\u9700\u8981\u7ed9schema\u548c\u8868\u540d\u52a0\u4e0a\u53cd\u5f15\u53f7\\r\\n15. MySql\u5efa\u5e93\u5efa\u8868\u9ed8\u8ba4\u5b57\u7b26\u96c6\u6392\u5e8f\u5e94\u8be5\u662f\u654f\u611f\u7684\uff0c\u7ed3\u679c\u9009\u9519\u4ee5utf8bm4-ci\u5b57\u7b26\u96c6\u5bfc\u81f4\u5927\u5c0f\u5199\u4e0d\u654f\u611f\uff0c\u5efa\u5e93\u5411\u4e0b\u5f71\u54cd\u5efa\u8868\uff0c\u5373\u4f7f\u6539\u56de\u6765\u540e\u4e5f\u4e0d\u4f1a\u751f\u6548\uff0c\u9700\u8981\u91cd\u65b0\u5efa\u5e93\u5efa\u8868\\r\\n16. \u8fbe\u68a6\u6570\u636e\u5e93\u548cOracle\u4e00\u6837\uff0c\u5728select\u5b57\u6bb5\u5217\u8868\u4e2d\u7684\u5b57\u6bb5\u4e5f\u5fc5\u987b\u5305\u542b\u5728group by\u8bed\u53e5\u4e2d\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u201c\u4e0d\u662fgroup by\u8868\u8fbe\u5f0f\u201d\uff0c\u5e76\u4e14\u6392\u5e8f\u5b57\u6bb5\u4e5f\u9700\u8981\u51fa\u73b0\u5728group by\u5217\u8868\u4e2d\\r\\n17. MySQL\u7684group by\u540e\u63a5\u5b57\u6bb5\u5217\u8868\u4e0d\u80fd\u7528\u5706\u62ec\u53f7\u5305\u8d77\uff0c\u5426\u5219\u62a5\u9519\uff0c\u4f46\u662f\u8fbe\u68a6\u6570\u636e\u5e93\u53ef\u4ee5\\r\\n18. HSQL\u4e2d`cast as integer`\u5bfc\u81f4\u9519\u8bef\uff0c\u5b57\u6bb5\u7c7b\u578b\u4e3adecimal\u5e76\u4e14\u6709\u4e2a\u5b57\u6bb5\u503c\u4e3a9311054824\u5927\u4e8einteger\u7684\u8303\u56f4\uff0c\u6539\u6210`cast as long`\uff0c\u6ce8\u610f\u8fd9\u91cc\u662fJava\u4e2d\u7684\u7c7b\u578b\uff0c\u5168\u5c0f\u5199\\r\\n:::\\r\\n\\r\\n:::tip :arrow_down:Harbor\u62c9\u53d6\u955c\u50cf\u548c\u4fdd\u5b58\\r\\n1. \u767b\u5f55harbor\uff0c\u9009\u62e9\u6700\u65b0\u7684\u5e94\u7528\u955c\u50cf\\r\\n2. \u65c1\u8fb9\u6709\u62c9\u53d6\u547d\u4ee4\uff0c\u70b9\u51fb\u590d\u5236\u5f97\u5230`docker pull example.com/demo helloworld@sha256:0c014719011a375c09d3167c119e24793b415354d0a02ddd4171014812b35ce7`\\r\\n3. \u4f7f\u7528sha\u6807\u8bb0\u62c9\u53d6\u7684\u955c\u50cf\u6ca1\u6709\u6807\u7b7e\\r\\n4. \u70b9\u51fb\u8be6\u60c5\uff0c\u9009\u62e9tag\u540d\u79f00.0.1-2021042019\uff0c\u628a@sha256xxx\u6362\u6210:0.0.1-2021042019\uff0c\u6ce8\u610f\u522b\u6f0f\u4e86\u5192\u53f7\\r\\n5. \u4fdd\u5b58\u62c9\u53d6\u955c\u50cf\u4e3atar\u6587\u4ef6`docker save -o helloworld.tar example.com/demo/helloworld:0.0.1-2021042019`\\r\\n\u6ce8\u610f\u8fd9\u91cc\u8fd8\u662f\u7528\u4ed3\u5e93\u540d+\u5192\u53f7+tag\u7684\u5f62\u5f0f\uff0c\u4e0d\u8981\u4f7f\u7528docker images\u5217\u51fa\u7684id\uff0c\u5426\u5219\u4fdd\u5b58\u7684\u955c\u50cf\u6587\u4ef6\u8fd8\u662f\u6ca1\u6709\u4ed3\u5e93\u548ctag\u4fe1\u606f\\r\\n6. `docker load -i api-appgateway.tar`\u52a0\u8f7d\u955c\u50cf\u6587\u4ef6\\r\\n:::\\r\\n\\r\\n:::tip :memo:SpringBoot\\r\\n- \u9879\u76ee\u62a5\u9519`FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: RequestParam.value() was empty on parameter 0`\uff0c\u539f\u56e0\u662f@RequestParam\u6ce8\u89e3\u6ca1\u6709\u52a0value\u53c2\u6570\u503c\uff0c\u5728fegin\u63a5\u53e3\u6587\u4ef6\u4e2d\u8fd9\u662f\u5fc5\u586b\u7684\\r\\n- swagger\u53c2\u6570\u5bf9\u8c61\u4e2dApiModel\u7684value\u6ce8\u89e3\u4e0d\u80fd\u91cd\u590d\uff0c\u5426\u5219\u4f1a\u628a\u4e24\u4e2a\u7684\u5b57\u6bb5\u5408\u5e76\u4f5c\u4e3a\u6587\u6863\u7684\u53c2\u6570\\r\\n- \u670d\u52a1\u62a5\u9519no such method\uff0c\u539f\u56e0\u662f\u8001\u7248\u672c\u7684\u670d\u52a1\u91cd\u65b0\u6ce8\u518c\u5230nacos\uff0c\u8d1f\u8f7d\u5747\u8861\u627e\u8fd9\u4e2a\u670d\u52a1\u8c03\u7528\u65b9\u6cd5\u62a5\u9519\uff0c\u89e3\u51b3\u65b9\u6cd5\u662f\u4e0b\u7ebf\u8be5\u670d\u52a1\\r\\n:::\\r\\n\\r\\n:::tip :coffee:\u83b7\u53d6\u4eca\u59290\u70b9\u65f6\u95f4\u6233\u7684\u4e24\u79cd\u65b9\u5f0f\\r\\n- \u65b9\u5f0f1\uff1a\u5f97\u5230\u7cbe\u786e\u53d6\u96f6\u70b9\u96f6\u5206\u96f6\u79d2\\r\\n```java\\r\\nlong current = System.currentTimeMillis();\\r\\nlong zero = current/(1000*3600*24)*(1000*3600*24) - TimeZone.getDefault().getRawOffset();\\r\\n```\\r\\n- \u65b9\u5f0f2\uff1a\\r\\n```java {6}\\r\\nCalendar calendar = Calendar.getInstance();\\r\\ncalendar.setTime(new Date());\\r\\ncalendar.set(Calendar.HOUR_OF_DAY, 0);\\r\\ncalendar.set(Calendar.MINUTE, 0);\\r\\ncalendar.set(Calendar.SECOND, 0);\\r\\ncalendar.set(Calendar.MILLISECOND, 0);    // \u522b\u6f0f\u4e86\u6beb\u79d2\\r\\nzero = calendar.getTime().getTime();\\r\\n```\\r\\n:::\\r\\n\\r\\n:::tip :white_check_mark:\u5f00\u53d1\u6ce8\u610f\u4e8b\u9879\\r\\n1. \u63a5\u53e3\u4e00\u65e6\u786e\u5b9a\u5c31\u4e0d\u8981\u518d\u6539\u53c2\u6570\u540d\u79f0\\r\\n2. \u6570\u636e\u8868\u4e00\u65e6\u786e\u5b9a\u5c31\u4e0d\u8981\u518d\u4fee\u6539\u5b57\u6bb5\u540d\u79f0\\r\\n3. \u5f53\u8fd4\u56de\u5206\u9875\u7ed3\u679c\u65f6\u7528Page\u5305\u88c5\u800c\u4e0d\u662fList\u8fd4\u56de\\r\\n4. \u6d89\u53ca\u7528\u6237id\u7684\u53c2\u6570\u4e0d\u9700\u8981\u524d\u7aef\u4f20\u8f93\uff0c\u4f7f\u7528\u6ce8\u89e3\u7edf\u4e00\u83b7\u53d6\\r\\n6. Feigned\u63a5\u53e3\u5b9a\u4e49\u7684RequestParam\u6ce8\u89e3\u9700\u8981\u52a0\u4e0avalue\u5c5e\u6027\\r\\n7. \u670d\u52a1\u63a5\u53e3\u5b9e\u73b0\u7c7b\u8981\u52a0\u4e0aservice\u6ce8\u89e3\\r\\n:::\\r\\n\\r\\n:::tip :coffee:Java API\u4f7f\u7528\\r\\n- \u6458\u53d6\u62ec\u53f7\u4e4b\u95f4\u7684\u5185\u5bb9\u5199\u6cd5\uff1a`value.substring(value.indexOf(\'(\')+1, value.lastIndexOf(\')\'))`\uff0c\u6ce8\u610f\u5f00\u59cb\u4f4d\u7f6e\u662f\u5de6\u62ec\u53f7+1\uff0c\u7ed3\u675f\u4f4d\u7f6e\u5c31\u662f\u53f3\u62ec\u53f7\\r\\n- String split\u7684\u53c2\u6570\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u800c\u70b9\u597d\u5728\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u5339\u914d\u4efb\u610f1\u4e2a\u5b57\u7b26\uff0c\u4ee5\u70b9\u53f7\u5206\u5272\u5199\u6cd5\u662f\uff1a`String[] arr = str.split(\\"\\\\\\\\.\\");`\\r\\n- \u5224\u65ad\u5bf9\u8c61\u662f\u5426\u4e3anull\uff1a[`Objects.isNull()`](https://zhuanlan.zhihu.com/p/347581992)\\r\\n- JDBC\u7684`getDate()`\u8fd4\u56de\u7c7b\u578b\u662fjava.sql.Date\uff0c\u4e0d\u662fjava.utils.Date\uff0c\u6ce8\u610f\u533a\u522b\uff01\uff01\uff01\\r\\n- Guava API\uff1a\u4f7f\u7528`Maps.newHashMapWithExpectedSize(c.size())`\u751f\u6210\u4e00\u4e2a\u521d\u59cb\u5316\u5927\u5c0f\u7684HashMap\\r\\n:::\\r\\n\\r\\n:::tip \u65e5\u5e38:clown_face:\\r\\n1. bootstrap.properties\u73af\u5883\u914d\u7f6e\uff0cactive\u6587\u4ef6\u7531local\u6539\u4e3a\u4e86test\uff0c\u5bfc\u81f4\u67e5\u8be2\u7684\u6570\u636e\u5e93\u662f\u6d4b\u8bd5\u73af\u5883\u7684\uff0c\u4e00\u76f4\u62a5\u9519\u627e\u4e0d\u5230\u4f7f\u7528\u7684\u6570\u636e\u8868\\r\\n2. \u672c\u5730bootstrap.properties\u914d\u7f6e\u88ab\u6539\uff0clocal\u73af\u5883\u7684namespace\u6ca1\u6709\u8bbe\u7f6e\u6210\u672c\u5730\u73af\u5883\u7684\u914d\u7f6e\uff0c\u5bfc\u81f4\u542f\u52a8\u62a5\u9519\u627e\u4e0d\u5230redis\u914d\u7f6e\\r\\n3. \u5bf9\u8c61\u63cf\u8ff0\uff0c\u5bf9\u8c61\u540d\u79f0\u7b49\u5b57\u6bb5\u5728\u6570\u636e\u5e93\u5b57\u6bb5\u8bbe\u8ba1\u65f6\u8981\u548c\u524d\u7aef\u786e\u8ba4\u6700\u5927\u957f\u5ea6\u9650\u5236\\r\\n4. flyway\u4e00\u6b21\u53ea\u80fd\u63a5\u5165\u4e00\u4e2a\u540e\u7aef\u4e1a\u52a1\u5e93\uff0c\u56e0\u4e3a\u4e00\u4e2a\u5fae\u670d\u52a1\u540e\u7aef\u5bf9\u5e94\u4e00\u4e2a\u4e1a\u52a1\u5e93\\r\\n5. \u7edf\u8ba1\u5f53\u5929\u65e5\u671f\u662f\u5927\u4e8e\u7b49\u4e8e\u5f53\u59290\u70b90\u5206\uff0c\u800c\u4e0d\u662f\u5927\u4e8e\\r\\n6. flyway\u6267\u884csql\u811a\u672c\u62a5\u9519\uff0c\u539f\u56e0\u662f\u7ed9longtext\u52a0\u4e86\u9ed8\u8ba4\u503c\u7a7a\u5b57\u7b26\u4e32\uff0c\u4f46\u662flongtext\u4e0d\u80fd\u8bbe\u7f6e\u9ed8\u8ba4\u503c\\r\\n7. \u5728\u6392\u5e8f\u67e5\u8be2\u540e\u4e0d\u8981\u518d\u6839\u636e\u4e1a\u52a1\u5355\u72ec\u5bf9\u5b57\u6bb5\u503c\u6392\u5e8f\uff0c\u5426\u5219\u4e4b\u524d\u7684\u6392\u5e8f\u5931\u6548\uff0c\u6392\u5e8f\u5c31\u662f\u4e00\u8d77\u7684\\r\\n8. DELETE\u8bed\u53e5\u540e\u9762\u4e0d\u8ddf\u5b57\u6bb5\uff0c\u9519\u8bef\u5199\u6cd5\uff1a`DELETE * FROM STUDENT WHERE NAME = #{name}`\\r\\n9. pageHelper\u5206\u9875\u53c2\u6570\u7531\u65b9\u6cd5\u53c2\u6570\u6307\u5b9a\u65f6\u8fd8\u662f\u8981\u52a0\u4e0a@Param(\\"pageNum\\")\u6ce8\u91ca\uff0c\u5355\u5355`Integer pageNum`\u4e0d\u751f\u6548\\r\\n10. Nacos\u4fee\u6539\u914d\u7f6e\uff0c\u9700\u8981\u91cd\u542fdocker\u670d\u52a1\uff0c\u90e8\u7f72\u591a\u4e2a\u8282\u70b9\u5168\u90e8\u90fd\u8981\u91cd\u542f\\r\\n11. MyBatis\u7684xml\u6587\u4ef6\u4e2d\uff0c\u66f4\u65b0\u65b9\u6cd5\u4e00\u65f6\u624b\u5feb\u4f7f\u7528\u4e86`<select>`\u6807\u7b7e\u800c\u4e0d\u662f`<update>`\u6807\u7b7e\u5bfc\u81f4\u51fa\u9519\\r\\n12. swagger\u9875\u9762\u53c2\u6570\u5bf9\u8c61\u6ca1\u6709\u663e\u5f0f\u5b57\u6bb5\u540d\u79f0\u548c\u7c7b\u578b\uff0c\u539f\u56e0\u662f\u7c7b\u5b57\u6bb5\u6ca1\u6709setter\u548cgetter\u65b9\u6cd5\uff0c\u6216\u8005\u4f7f\u7528lombok\u7684@Data\u6ce8\u89e3\\r\\n:::\\r\\n\\r\\n:::tip :wrench:\u5de5\u5177\u4f7f\u7528\\r\\n- Windows\u4e0b\u4f7f\u7528Docker Desktop\u542f\u52a8MySQL\u670d\u52a1\\r\\n```bash\\r\\n# \u62c9\u955c\u50cf\\r\\ndocker pull mysql:5.7.18\\r\\n# \u542f\u52a8\u5bb9\u5668\uff0c-p\u7aef\u53e3\u6620\u5c04\u914d\u7f6e\u4e0d\u8981\u653e\u5728-d\u914d\u7f6e\u9879\u540e\u9762\\r\\ndocker run --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7.18\\r\\n```\\r\\n:::"},{"id":"/2021/09/13/MathAlgorithms-01","metadata":{"permalink":"/blog/2021/09/13/MathAlgorithms-01","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2021-09-13-MathAlgorithms-01.mdx","source":"@site/blog/2021-09-13-MathAlgorithms-01.mdx","title":"\u7eaf\u6570\u5b66\u7684\u7b97\u6cd5\u9898(1)","description":"\u7eaf\u6570\u5b66\u7684\u7b97\u6cd5\u9898(1)","date":"2021-09-13T00:00:00.000Z","formattedDate":"September 13, 2021","tags":[{"label":"Math algorithm","permalink":"/blog/tags/math-algorithm"}],"readingTime":5.97,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"\u7eaf\u6570\u5b66\u7684\u7b97\u6cd5\u9898(1)","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["Math algorithm"],"description":"\u7eaf\u6570\u5b66\u7684\u7b97\u6cd5\u9898(1)","hide_table_of_contents":false},"prevItem":{"title":"2021\u5e749\u6708\u4efd\u5de5\u4f5c\u65e5\u5fd7","permalink":"/blog/2021/09/19/WorkJournal"},"nextItem":{"title":"Java\u5355\u4f8b\u6a21\u5f0f\u7684\u5b9e\u73b0","permalink":"/blog/2021/09/12/JavaSingtion"}},"content":"\u90a3\u4e9b\u9700\u8981\u6570\u5b66\u77e5\u8bc6\u7684\u7b97\u6cd5\u9898\uff0c\u7b2c\u4e00\u6ce2\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## \u6590\u6ce2\u90a3\u5951\u6570\u5217\\r\\n\u5e38\u89c1\u7684\u9898\u76ee\u5982[\u722c\u697c\u68af](https://leetcode-cn.com/problems/climbing-stairs/)\uff0c\u672c\u8d28\u4e0a\u662f\u6c42f(n)=f(n-1)+f(n-2)\u7684\u503c\\r\\n```java\\r\\npublic int climbStairs(int n) {\\r\\n    int a = 1, b = 1, c = 1;\\r\\n    while(--n != 0) {\\r\\n        c = a + b;\\r\\n        b = c;\\r\\n        a = c - a;\\r\\n    }\\r\\n    return c;\\r\\n}\\r\\n```\\r\\n\u6ce8\u610f\uff0c\u5728\u53e6\u4e00\u9053\u9898[\u6c42\u6590\u6ce2\u90a3\u5951\u6570\u5217](https://leetcode-cn.com/problems/fei-bo-na-qi-shu-lie-lcof/)\u4e2d\u521d\u59cb\u503c\u662f\u4ece0\u5f00\u59cb\u7684\uff0c\u5e76\u4e14\u8981\u6c42\u5bf9\u7ed3\u679c\u53d6\u6a21\\r\\n```java\\r\\npublic int fib(int n) {\\r\\n    if(n == 0) return 0;\\r\\n    int a = 0, b = 0, c = 1;\\r\\n    while(--n > 0) {\\r\\n        a = b;\\r\\n        b = c;\\r\\n        c = (a + b)  % 1000000007;\\r\\n    }\\r\\n    return c;\\r\\n}\\r\\n```\\r\\n\u5b9e\u9645\u5199\u4ee3\u7801\u65f6\u9700\u8981\u6ce8\u610f\uff1a\\r\\n1. \u4ea4\u66ff\u8d4b\u503c\u987a\u5e8f\u4e0d\u80fd\u641e\u9519\uff0c\u6bd4\u5982\u5199\u6210`c=a+b, b=c, a=b`\\r\\n2. while\u7684\u9000\u51fa\u6761\u4ef6\u662f`--n > 0`\uff0c\u4e00\u5b9a\u662f`--`\u5728\u524d\u9762\\r\\n3. \u53d6\u6a21\u8fd9\u91cc\u6bd4\u8f83\u5751\uff0c\u4e00\u5f00\u59cb\u6309\u7167\u722c\u697c\u68af\u7684\u89e3\u9898\u4ee3\u7801\u5c31\u5199\u6210\u4e86`c = (a+b)%1000000007, b=c, a=b`\uff0c\u5bfc\u81f4\u90e8\u5206\u6d4b\u8bd5\u7528\u4f8b\u6ca1\u6709\u901a\u8fc7\\r\\n\u603b\u7ed3\u8d77\u6765\u8fd8\u662f\u7b2c\u4e8c\u6bb5\u4ee3\u7801\u66f4\u4e3a\u5168\u9762\uff0c\u80fd\u591f\u5904\u7406f(0)\u7684\u60c5\u51b5\uff0c\u76f4\u63a5\u80cc\u4e0b\u6765\u5427\\r\\n\\r\\n## \u706f\u6ce1\u5f00\u5173\\r\\n[\u539f\u9898](https://leetcode-cn.com/problems/bulb-switcher/)\u63cf\u8ff0\uff1a\\r\\n> \u521d\u59cb\u65f6\u6709n\u4e2a\u706f\u6ce1\u5904\u4e8e\u5173\u95ed\u72b6\u6001\u3002\u5bf9\u67d0\u4e2a\u706f\u6ce1\u5207\u6362\u5f00\u5173\u610f\u5473\u7740\uff1a\u5982\u679c\u706f\u6ce1\u72b6\u6001\u4e3a\u5173\u95ed\uff0c\u90a3\u8be5\u706f\u6ce1\u5c31\u4f1a\u88ab\u5f00\u542f\uff1b\u800c\u706f\u6ce1\u72b6\u6001\u4e3a\u5f00\u542f\uff0c\u90a3\u8be5\u706f\u6ce1\u5c31\u4f1a\u88ab\u5173\u95ed\u3002    \\r\\n\u7b2c 1 \u8f6e\uff0c\u6bcf\u4e2a\u706f\u6ce1\u5207\u6362\u4e00\u6b21\u5f00\u5173\u3002\u5373\uff0c\u6253\u5f00\u6240\u6709\u7684\u706f\u6ce1\u3002    \\r\\n\u7b2c 2 \u8f6e\uff0c\u6bcf\u4e24\u4e2a\u706f\u6ce1\u5207\u6362\u4e00\u6b21\u5f00\u5173\u3002 \u5373\uff0c\u6bcf\u4e24\u4e2a\u706f\u6ce1\u5173\u95ed\u4e00\u4e2a\u3002    \\r\\n\u7b2c 3 \u8f6e\uff0c\u6bcf\u4e09\u4e2a\u706f\u6ce1\u5207\u6362\u4e00\u6b21\u5f00\u5173\u3002    \\r\\n\u7b2c\xa0i \u8f6e\uff0c\u6bcf\xa0i\xa0\u4e2a\u706f\u6ce1\u5207\u6362\u4e00\u6b21\u5f00\u5173\u3002 \u800c\u7b2c\xa0n\xa0\u8f6e\uff0c\u4f60\u53ea\u5207\u6362\u6700\u540e\u4e00\u4e2a\u706f\u6ce1\u7684\u5f00\u5173\u3002  \\r\\n\u627e\u51fa\xa0n\xa0\u8f6e\u540e\u6709\u591a\u5c11\u4e2a\u4eae\u7740\u7684\u706f\u6ce1\u3002    \\r\\n\\r\\n\u4e00\u5f00\u59cb\u8bd5\u56fe\u5bf91,2,3,4\u51e0\u79cd\u8f83\u5c0f\u60c5\u51b5\u5206\u6790\u51fa\u7ed3\u679c\u7136\u540e\u5224\u65ad\u7ed3\u679c\u662f\u5426\u662f\u67d0\u79cd\u89c4\u5219\u7684\u6570\u5217\uff0c\u5b9e\u9645\u4e0a\u6ca1\u6709\uff0c\u63a5\u7740\u53c8\u4e0a\u5934\u60f3\u7740\u80fd\u4e0d\u80fd\u8f6c\u6210\u52a8\u6001\u89c4\u5212\uff0c\u8fd8\u662f\u4e0d\u884c\u3002\u770b\u4e86\u9898\u89e3\uff0c\u4ece1\u5f00\u59cb\u5bf9\u706f\u6ce1\u7f16\u53f7\uff0c\u5bf9\u4e8e\u706f\u6ce1k\uff0c\u5b83\u5728\u4ec0\u4e48\u65f6\u5019\u5207\u6362\u5f00\u5173\u5462\uff1f\u4ece\u7b2c1,2,3,4\u5230i\uff0c\u53d1\u73b0**\u5f53k\u80fd\u6574\u9664i\u65f6\u706f\u6ce1k\u5207\u6362\u4e00\u6b21\u5f00\u5173**\uff0c\u5e76\u4e14\u53ea\u9700\u8981\u5173\u6ce8\u5207\u6362\u6b21\u6570\u7684\u5947\u5076\u6027\uff0c\u90a3\u5207\u6362\u51e0\u6b21\u5462\uff1f\u7531\u4e8e\u8f6e\u6570\u4ece1\u5230k\uff0c\u90a3\u5207\u6362\u6b21\u6570\u5c31\u662fk\u7684\u6240\u6709\u56e0\u5b50\u7684\u4e2a\u6570\uff0c\u5230\u4e86\u8fd9\u91cc\u5c31\u9700\u8981\u5f15\u5165\u4e00\u4e2a\u91cd\u8981\u7684\u6570\u5b66\u7406\u8bba\\r\\n:::info \u56e0\u6570\u4e2a\u6570\u7684\u5947\u5076\u6027\\r\\n\u5f53\u6574\u6570k\u4e3a\u5b8c\u5168\u5e73\u65b9\u6570\u65f6\uff0c\u5176\u56e0\u6570\u4e2a\u6570\u4e3a\u5947\u6570\uff0c\u5426\u5219\u4e3a\u5076\u6570\\r\\n:::\\r\\n\u6240\u4ee5\uff0c\u5bf9\u4e8e\u706f\u6ce1k\uff0c\u5f53k\u4e3a\u5b8c\u5168\u5e73\u65b9\u6570\u65f6\uff0c\u6b64\u65f6\u5b83\u5207\u6362\u5f00\u5173\u5947\u6570\u6b21\uff0c\u6700\u540e\u4e3a\u70b9\u4eae\u72b6\u6001\uff0c\u5426\u5219\u4e3a\u7184\u706d\u72b6\u6001\u3002\u56e0\u6b64\u95ee\u9898\u5373\u8f6c\u6362\u4e3a\u6c421\u5230n\u4e2d\u5b8c\u5168\u5e73\u65b9\u6570\u7684\u4e2a\u6570\uff1a\\r\\n```java\\r\\npublic int bulbSwitch(int n) {\\r\\n    int ans = 0;\\r\\n    for(int i = 1; i * i <= n; ++i) {\\r\\n        ++ans;\\r\\n    }\\r\\n    return ans;\\r\\n}\\r\\n```\\r\\n\\r\\n## \u7528rand7\u751f\u6210rand10\\r\\n[\u539f\u9898](https://leetcode-cn.com/problems/implement-rand10-using-rand7/)\u63cf\u8ff0\uff1a\\r\\n> \u5df2\u6709\u65b9\u6cd5`rand7`\u53ef\u751f\u62101\u52307\u8303\u56f4\u5185\u7684\u5747\u5300\u968f\u673a\u6574\u6570\uff0c\u8bd5\u5199\u4e00\u4e2a\u65b9\u6cd5`rand10`\u751f\u62101\u523010\u8303\u56f4\u5185\u7684\u5747\u5300\u968f\u673a\u6574\u6570\u3002\u4e0d\u8981\u4f7f\u7528\u7cfb\u7edf\u7684`Math.random()`\u65b9\u6cd5\u3002\\r\\n\\r\\n\u4e00\u5f00\u59cb\u662f\u6709\u70b9\u61f5\u903c\u7684\uff0c\u51b7\u9759\u5206\u6790\u540e\u662f\u8981\u5bf9`rand7()`\u8fdb\u884c\u4e00\u4e9b\u52a0\u51cf\u4e58\u9664\u8fd0\u7b97\u540e\u8fd4\u56de\u4e00\u4e2a\u6570\u3002\u90a3\u600e\u4e48\u8fdb\u884c\u56db\u5219\u8fd0\u7b97\u968f\u673a\u4ea7\u751f1\u523010\u7684\u6570\u5462\uff1f\u8fd9\u91cc\u5f15\u51fa3\u4e2a\u91cd\u8981\u6982\u7387\u516c\u5f0f\\r\\n:::tip \u516c\u5f0f1\\r\\n\u4ee4Rand_N\u8868\u793a\u968f\u673a\u751f\u62101\u5230N\u7684\u65b9\u6cd5\uff0c\u90a3\u4e48\u6709:    \\r\\n**Rand_XY = (Rand_X - 1) * Rand_Y + Rand_Y**    \\r\\n\u5176\u4e2dRand_XY\u4e2d\u7684XY\u8868\u793aX\u4e58\u4ee5Y\\r\\n:::\\r\\n:::tip \u516c\u5f0f2\\r\\n\u5982\u679cX\u6574\u9664N\uff0c\u90a3\u4e48(Rand_N) % X + 1= Rand_X\\r\\n:::\\r\\n:::tip \u62d2\u7edd\u91c7\u6837\\r\\nRand_Y() = (X > Y) ? Rand_X - Y : Rand_X;\\r\\n:::\\r\\n\u5148\u6839\u636e\u516c\u5f0f1\uff0c\u53ef\u4ee5\u7528\u4e24\u4e2a`rand7()`\u65b9\u6cd5\u5f97\u5230`rand49()`\uff0c\u901a\u8fc7\u62d2\u7edd\u91c7\u6837\uff0c\u53ea\u8981`rand49()`\u7684\u8fd4\u56de\u503c\u5927\u4e8e10\u5c31\u7ee7\u7eed\u91c7\u6837\uff0c\u5426\u5219\u76f4\u63a5\u8fd4\u56de\u3002\u8fd9\u91cc\u5f97\u5230\u4e8649\u4e2a\u968f\u673a\u6570\u4f46\u662f\u5374\u53ea\u898110\u4e2a\uff0c\u4e22\u5f03\u6982\u7387\u592a\u5927\u3002\u7531\u4e8e49\u518510\u7684\u6700\u5927\u516c\u500d\u6570\u662f40\uff0c\u6839\u636e\u516c\u5f0f2\uff0c\u5c06\u6761\u4ef6\u6539\u4e3a\u5927\u4e8e40\u624d\u62d2\u7edd\u91c7\u6837\uff0c\u8fd9\u6837\u53ea\u9700\u8981\u4e22\u5f039\u4e2a\u6570\u30029\u4e2a\u8fd8\u662f\u592a\u591a\uff0c\u7528`rand49()`\u51cf\u53bb40\u5f97\u5230`rand(9)`\uff0c\u6839\u636e\u516c\u5f0f1\u7ee7\u7eed\u5f97\u5230`rand63()`\uff0c\u8fd8\u4e0d\u591f\uff0c\u51cf60\u5f97\u5230`rand3()`\uff0c\u6700\u540e\u5f97\u5230`rand21()`\uff0c\u6b64\u65f6\u53ea\u9700\u8981\u4e22\u5f031\u4e2a\u6570\\r\\n```java\\r\\npublic int rand10() {\\r\\n    while(true) {\\r\\n        int a = rand7();\\r\\n        int b = rand7();\\r\\n        int sum = (a - 1) * 7 + b;\\r\\n\\r\\n        if(sum <= 40)   return sum % 10 + 1;\\r\\n\\r\\n        a = sum - 40;\\r\\n        b = rand7();\\r\\n        sum = (a - 1) * 7 + b;\\r\\n        if(sum <= 60)   return sum % 10 + 1;\\r\\n\\r\\n        a = sum - 60;\\r\\n        b = rand7();\\r\\n        sum = (a - 1) * 7 + b;\\r\\n        if(sum <= 20)   return sum % 10 + 1;\\r\\n    }\\r\\n}\\r\\n```"},{"id":"/2021/09/12/JavaSingtion","metadata":{"permalink":"/blog/2021/09/12/JavaSingtion","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2021-09-12-JavaSingtion.mdx","source":"@site/blog/2021-09-12-JavaSingtion.mdx","title":"Java\u5355\u4f8b\u6a21\u5f0f\u7684\u5b9e\u73b0","description":"Java\u5355\u4f8b\u6a21\u5f0f\u51e0\u79cd\u5b9e\u73b0","date":"2021-09-12T00:00:00.000Z","formattedDate":"September 12, 2021","tags":[{"label":"Singleton","permalink":"/blog/tags/singleton"}],"readingTime":5.845,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"Java\u5355\u4f8b\u6a21\u5f0f\u7684\u5b9e\u73b0","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["Singleton"],"description":"Java\u5355\u4f8b\u6a21\u5f0f\u51e0\u79cd\u5b9e\u73b0","hide_table_of_contents":false},"prevItem":{"title":"\u7eaf\u6570\u5b66\u7684\u7b97\u6cd5\u9898(1)","permalink":"/blog/2021/09/13/MathAlgorithms-01"},"nextItem":{"title":"\u53cc\u4eb2\u59d4\u6d3e\u673a\u5236\u4ee3\u7801\u89e3\u6790","permalink":"/blog/2021/09/11/ParentsDelegationModel"}},"content":"Java\u5355\u4f8b\u6a21\u5f0f\u5b9e\u73b0\uff0c\u5305\u62ec\u997f\u6c49\u5f0f\u548c\u61d2\u6c49\u5f0f\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## \u5355\u4f8b\u6a21\u5f0f\\r\\n\u67d0\u4e00\u4e2a\u7c7b\u53ea\u80fd\u6709\u4e00\u4e2a\u5b9e\u4f8b\u5bf9\u8c61\uff0c\u6bd4\u5982Runtime\u7c7b\uff0c\u9700\u8981\u6ee1\u8db3\u5982\u4e0b3\u70b9\u8981\u6c42\uff1a\\r\\n- \u53ea\u80fd\u6709\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u5373\u6784\u9020\u5668\u8981\u79c1\u6709\u5316\\r\\n- \u7c7b\u5fc5\u987b\u81ea\u884c\u521b\u5efa\u8be5\u5355\u4f8b\uff0c\u5373\u4f7f\u7528\u9759\u6001\u4fdd\u91cf\u4fdd\u5b58\u8be5\u5b9e\u4f8b\\r\\n- \u7c7b\u5fc5\u987b\u81ea\u884c\u63d0\u4f9b\u8be5\u5355\u4f8b\uff0c\u53ef\u4ee5\u4f7f\u7528public\u516c\u5f00\u6216\u8005\u4f7f\u7528\u9759\u6001\u65b9\u6cd5\u8fd4\u56de\\r\\n\\r\\n\u5355\u4f8b\u521b\u5efa\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\u997f\u6c49\u5f0f\u548c\u61d2\u6c49\u5f0f\\r\\n\\r\\n## \u997f\u6c49\u5f0f\\r\\n\u5355\u4f8b\u5bf9\u8c61\u7684\u997f\u6c49\u5f0f\u521b\u5efa\u6307\u76f4\u63a5\u521b\u5efa\u5bf9\u8c61\uff0c\u4f18\u70b9\u662f\u4e0d\u5b58\u5728\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898\uff0c\u7f3a\u70b9\u662f\u65e0\u8bba\u5355\u4f8b\u662f\u5426\u4f7f\u7528\u90fd\u4f1a\u521b\u5efa\\r\\n\\r\\n### \u76f4\u63a5\u5b9e\u4f8b\u5316\\r\\n\u76f4\u63a5\u521b\u5efa\u5b9e\u4f8b\u5bf9\u8c61\uff0c\u4e0d\u7ba1\u662f\u5426\u9700\u8981\u8fd9\u4e2a\u5bf9\u8c61\\r\\n```java\\r\\npublic class Singleton {\\r\\n    public static final Singleton INSTANCE = new Singleton();\\r\\n    private Singleton() {}\\r\\n}\\r\\n```\\r\\n### \u679a\u4e3e\u521b\u5efa\\r\\n\u5229\u7528\u679a\u4e3e\u7c7b\u7684\u5bf9\u8c61\u662f\u6709\u9650\u4e2a\u8fd9\u4e2a\u7279\u6027\uff0c\u53ea\u63d0\u4f9b\u4e00\u4e2a\u5bf9\u8c61\\r\\n```java\\r\\npublic enum EnumSingleton {\\r\\n    INSTANCE\\r\\n}\\r\\n```\\r\\n### \u9759\u6001\u4ee3\u7801\u5757\u521b\u5efa\\r\\n\u5c06\u521b\u5efa\u5355\u4f8b\u7684new\u8bed\u53e5\u7531\u5b57\u6bb5\u521d\u59cb\u5316\u642c\u5230\u9759\u6001\u4ee3\u7801\u5757\u4e2d\uff0c\u9002\u5408\u590d\u6742\u5b9e\u4f8b\u5316\u5355\u4f8b\uff0c\u6bd4\u5982\u5f53\u5bf9\u8c61\u521b\u5efa\u9700\u8981\u4ece\u6587\u4ef6\u8bfb\u53d6\u914d\u7f6e\u5e76\u8bbe\u7f6e\\r\\n```java {2}\\r\\npublic class StaticSingleton {\\r\\n    public static StaticSingleton INSTANCE;   // \u6ce8\u610f\u53bb\u6389final\\r\\n    private String info;\\r\\n\\r\\n    static {\\r\\n        Properties pro = new Properties();\\r\\n        try {\\r\\n            pro.load(StaticSingleton.class.getClassLoader().getResourceAsStream(\\"config.properties\\"));\\r\\n            INSTANCE = new StaticSingleton(pro.getProperty(\\"info\\"));\\r\\n        } catch (IOException e) {\\r\\n            e.printStackTrace();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private StaticSingleton(String info) {\\r\\n        this.info = info;\\r\\n    }\\r\\n}\\r\\n```\\r\\n:::info \u4e3a\u4ec0\u4e48\u997f\u6c49\u5f0f\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff1f\\r\\n\u7c7b\u52a0\u8f7d\u673a\u5236\u7684\u521d\u59cb\u5316\u9636\u6bb5\uff0c\u6267\u884cclinit()\u65b9\u6cd5\u65f6\u865a\u62df\u673a\u786e\u4fdd\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u5373\u591a\u4e2a\u7ebf\u7a0b\u6267\u884cclinit()\u65b9\u6cd5\u53ea\u4f1a\u6709\u4e00\u4e2a\u6267\u884c\uff0c\u5176\u4ed6\u88ab\u963b\u585e\\r\\n:::\\r\\n\\r\\n## \u61d2\u6c49\u5f0f\\r\\n\u61d2\u6c49\u5f0f\u662f\u53ea\u6709\u5728\u4f7f\u7528\u5230\u8fd9\u4e2a\u5355\u4f8b\u65f6\u624d\u521b\u5efa\u5e76\u8fd4\u56de\uff0c\u5c3d\u91cf\u51cf\u5c11\u5185\u5b58\u5f00\u9500\\r\\n### \u57fa\u672c\u65b9\u5f0f\\r\\n\u4e3a\u4e86\u5ef6\u8fdf\u5355\u4f8b\u5bf9\u8c61\u7684\u521b\u5efa\uff0c\u4e0d\u5728\u5355\u4f8b\u53d8\u91cfinstance\u58f0\u660e\u65f6\u5c31\u521d\u59cb\u5316\uff0c\u800c\u5c06instance\u58f0\u660e\u4e3aprivate\u7684\uff0c\u7136\u540e\u628a\u521b\u5efa\u903b\u8f91\u632a\u5230\u53e6\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5getInstance()\u4e2d\uff0c\u8be5\u65b9\u6cd5\u5224\u65adinstance\u662f\u5426\u4e3anull\uff0c\u662f\u7684\u8bdd\u624dnew\u521b\u5efa\u5bf9\u8c61\uff0c\u5426\u5219\u8bf4\u660e\u5df2\u7ecf\u521b\u5efa\u8fc7\u5bf9\u8c61\uff0c\u76f4\u63a5\u8fd4\u56de\uff0c\u5982\u6b64\u786e\u4fddgetInstance()\u65b9\u6cd5\u6bcf\u6b21\u8fd4\u56de\u76f8\u540c\u5bf9\u8c61\u3002\u7136\u800c\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\uff0c\u4ee5\u4e0b\u4ee3\u7801\u662f\u4e0d\u5b89\u5168\u7684\uff0cinstance\u53ef\u80fd\u4f1a\u88ab\u521b\u5efa\u591a\u6b21\\r\\n```java title=\\"\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684\u61d2\u6c49\u5f0f\u5355\u4f8b\u521b\u5efa\\"\\r\\npublic class Singleton {\\r\\n    private static Singleton instance;\\r\\n    \\r\\n    private Singleton() {\\r\\n    }\\r\\n    \\r\\n    public static Singleton getInstance() {\\r\\n        if(instance == null) {\\r\\n            instance = new Singleton();\\r\\n            return instance;\\r\\n        }\\r\\n        return instance;\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n### \u7ebf\u7a0b\u5b89\u5168\u65b9\u5f0f\\r\\n\u4e3a\u4e86\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\u521b\u5efa\u5355\u4f8b\uff0c\u9996\u5148\u4f7f\u7528synchronized\u5173\u952e\u5b57\u5c06getInstace\u4e2d\u7684\u4ee3\u7801\u5757\u5305\u88f9\u5e76\u8bbe\u7f6e\u540c\u6b65\u5bf9\u8c61\u4e3aSingleton\u7c7b\uff0c\u4f46\u662f\u5728\u521b\u5efa\u4e00\u6b21\u5355\u4f8b\u540e\uff0c\u4ee5\u540e\u6bcf\u6b21\u8fdb\u5165\u540c\u6b65\u5757\u5e26\u6765\u7684\u5f00\u9500\u5c31\u662f\u591a\u4f59\u7684\uff0c\u56e0\u6b64\u518d\u52a0\u4e00\u5c42if\u5224\u65ad\u907f\u514d\u4f7f\u7528\u540c\u6b65\u9501\\r\\n```java title=\u4f7f\u7528DCL\u521b\u5efa\u5355\u4f8b\\r\\npublic class Singleton {\\r\\n    // \u522b\u5c11\u4e86volatile\\r\\n    private volatile static Singleton instance;\\r\\n    \\r\\n    private Singleton() {\\r\\n    }\\r\\n    \\r\\n    public static Singleton getInstance() {\\r\\n        if(instance == null) {\\r\\n            synchronized (Singleton.class) {\\r\\n                if(instance == null) {\\r\\n                    instance = new Singleton();\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        return instance;\\r\\n    }\\r\\n}\\r\\n```\\r\\n\u8fd9\u79cd\u5224\u65ad\u4e862\u6b21instance\u662f\u5426\u4e3a\u7a7a\u7684\u65b9\u5f0f\u79f0\u4e4b\u4e3a**DCL(Double Check Lock)**\u3002\u867d\u7136synchronized\u786e\u4fdd\u4ee3\u7801\u5757\u5185\u7684\u8bed\u53e5\u8981\u4e48\u90fd\u6267\u884c\uff0c\u8981\u4e48\u90fd\u4e0d\u6267\u884c\uff0c\u4f46\u662fnew Singleton()\u5728\u865a\u62df\u673a\u4e2d\u4f1a\u88ab\u62c6\u5206\u4e3a\u591a\u6761\u6307\u4ee4\uff0c\u518d\u52a0\u4e0a\u6307\u4ee4\u91cd\u6392\u5c31\u4f1a\u5bfc\u81f4\u9519\u8bef\uff0c\u4f7f\u7528volatile\u5173\u952e\u5b57\u53ef\u4ee5\u907f\u514d\u6307\u4ee4\u91cd\u6392\uff0c**\u6ce8\u610f\u5343\u4e07\u4e0d\u80fd\u6f0f\u4e86volatile\u5173\u952e\u5b57**\\r\\n\\r\\n### \u9759\u6001\u5185\u90e8\u7c7b\\r\\n\u4f7f\u7528synchronized\u5173\u952e\u5b57\u7684\u65b9\u5f0f\u521b\u5efa\u5355\u4f8b\u4ee3\u7801\u590d\u6742\uff0c\u8fd8\u53ef\u4ee5\u7528\u9759\u6001\u5185\u90e8\u7c7b\u6765\u521b\u5efa\u5355\u4f8b\u4ee5\u7b80\u5316\u4ee3\u7801\u3002\u5229\u7528\u9759\u6001\u5185\u90e8\u7c7b\u7684\u7279\u6027\uff1a**\u9759\u6001\u5185\u90e8\u7c7b\u4e0d\u4f1a\u968f\u5916\u90e8\u7c7b\u7684\u52a0\u8f7d\u548c\u521d\u59cb\u5316\u800c\u52a0\u8f7d\u3001\u521d\u59cb\u5316\uff0c\u5f53\u7528\u5230\u5176\u6210\u5458\u65f6\u624d\u4f1a\u521d\u59cb\u5316**\uff0c\u5e76\u4e14\u662f\u5728\u9759\u6001\u5185\u90e8\u7c7b\u7684clinit\u65b9\u6cd5\u6267\u884c\u521b\u5efa\uff0c\u56e0\u6b64\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\\r\\n```java\\r\\npublic class InnerSingleton {\\r\\n    private static InnerSingleton instance;\\r\\n    private InnerSingleton() {}\\r\\n\\r\\n    private static class Inner {\\r\\n        private static final InnerSingleton INSTANCE = new InnerSingleton();\\r\\n    }\\r\\n\\r\\n    public static InnerSingleton getInstance() {\\r\\n        return Inner.INSTANCE;\\r\\n    }\\r\\n}\\r\\n```\\r\\n:::info \u603b\u7ed3\\r\\n1. \u997f\u6c49\u5f0f\u5355\u4f8b\u53d8\u91cf\u662fpublic\u7684\uff0c\u61d2\u6c49\u5f0f\u5355\u4f8b\u53d8\u91cf\u662fprivate\u7684\\r\\n2. \u997f\u6c49\u5f0f\u5355\u4f8b\u5728clinit\u65b9\u6cd5\u6267\u884c\u4e2d\u521b\u5efa\uff0c\u56e0\u6b64\u7ebf\u7a0b\u5b89\u5168\uff0c\u800c\u61d2\u6c49\u5f0f\u57fa\u672c\u65b9\u5f0f\u5728\u9759\u6001\u65b9\u6cd5\u4e2d\u521b\u5efa\uff0c\u7ebf\u7a0b\u4e0d\u5b89\u5168\\r\\n3. \u997f\u6c49\u5f0f\u7528\u5230\u7684Java\u7279\u6027\uff1a\u679a\u4e3e\uff0c\u9759\u6001\u4ee3\u7801\u5757\uff1b\u61d2\u6c49\u5f0f\u7528\u5230\u7684Java\u7279\u6027\uff1asynchronized\u3001volatile\u5173\u952e\u5b57\uff0c\u9759\u6001\u5185\u90e8\u7c7b\\r\\n4. \u61d2\u6c49\u5f0f\u89e3\u51b3\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684\u65b9\u5f0f\uff1a\u663e\u5f0f\u4f7f\u7528synchronized\u5173\u952e\u5b57\u540c\u6b65\uff0c\u9690\u5f0f\u4f7f\u7528\u9759\u6001\u5185\u90e8\u7c7b\u540c\u6b65\\r\\n:::"},{"id":"/2021/09/11/ParentsDelegationModel","metadata":{"permalink":"/blog/2021/09/11/ParentsDelegationModel","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2021-09-11-ParentsDelegationModel.mdx","source":"@site/blog/2021-09-11-ParentsDelegationModel.mdx","title":"\u53cc\u4eb2\u59d4\u6d3e\u673a\u5236\u4ee3\u7801\u89e3\u6790","description":"\u53cc\u4eb2\u59d4\u6d3e\u673a\u5236\u4ee3\u7801\u89e3\u6790","date":"2021-09-11T00:00:00.000Z","formattedDate":"September 11, 2021","tags":[{"label":"Inorder Traversal","permalink":"/blog/tags/inorder-traversal"}],"readingTime":0.725,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"\u53cc\u4eb2\u59d4\u6d3e\u673a\u5236\u4ee3\u7801\u89e3\u6790","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["Inorder Traversal"],"description":"\u53cc\u4eb2\u59d4\u6d3e\u673a\u5236\u4ee3\u7801\u89e3\u6790","hide_table_of_contents":false},"prevItem":{"title":"Java\u5355\u4f8b\u6a21\u5f0f\u7684\u5b9e\u73b0","permalink":"/blog/2021/09/12/JavaSingtion"},"nextItem":{"title":"\u4e8c\u53c9\u6811\u4e2d\u5e8f\u904d\u5386\u7684\u5e94\u7528","permalink":"/blog/2021/09/08/\u4e8c\u53c9\u6811\u4e2d\u5e8f\u904d\u5386\u5e94\u7528"}},"content":"\u53cc\u4eb2\u59d4\u6d3e\u673a\u5236\u4ee3\u7801\u89e3\u6790\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n\u53cc\u4eb2\u59d4\u6d3e\u673a\u5236\\r\\n```java\\r\\nprotected Class<?> loadClass(String name, boolean resolve)\\r\\n        throws ClassNotFoundException\\r\\n{\\r\\n    synchronized (getClassLoadingLock(name)) {\\r\\n        // First, check if the class has already been loaded\\r\\n        Class<?> c = findLoadedClass(name);\\r\\n        if (c == null) {\\r\\n            long t0 = System.nanoTime();\\r\\n            try {\\r\\n                if (parent != null) {\\r\\n                    c = parent.loadClass(name, false);\\r\\n                } else {\\r\\n                    c = findBootstrapClassOrNull(name);\\r\\n                }\\r\\n            } catch (ClassNotFoundException e) {\\r\\n                // ClassNotFoundException thrown if class not found\\r\\n                // from the non-null parent class loader\\r\\n            }\\r\\n\\r\\n            if (c == null) {\\r\\n                // If still not found, then invoke findClass in order\\r\\n                // to find the class.\\r\\n                long t1 = System.nanoTime();\\r\\n                c = findClass(name);\\r\\n\\r\\n                // this is the defining class loader; record the stats\\r\\n                sun.misc.PerfCounter.getParentDelegationTime().addTime(t1 - t0);\\r\\n                sun.misc.PerfCounter.getFindClassTime().addElapsedTimeFrom(t1);\\r\\n                sun.misc.PerfCounter.getFindClasses().increment();\\r\\n            }\\r\\n        }\\r\\n        if (resolve) {\\r\\n            resolveClass(c);\\r\\n        }\\r\\n        return c;\\r\\n    }\\r\\n}\\r\\n```"},{"id":"/2021/09/08/\u4e8c\u53c9\u6811\u4e2d\u5e8f\u904d\u5386\u5e94\u7528","metadata":{"permalink":"/blog/2021/09/08/\u4e8c\u53c9\u6811\u4e2d\u5e8f\u904d\u5386\u5e94\u7528","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2021-09-08-\u4e8c\u53c9\u6811\u4e2d\u5e8f\u904d\u5386\u5e94\u7528.mdx","source":"@site/blog\\\\2021-09-08-\u4e8c\u53c9\u6811\u4e2d\u5e8f\u904d\u5386\u5e94\u7528.mdx","title":"\u4e8c\u53c9\u6811\u4e2d\u5e8f\u904d\u5386\u7684\u5e94\u7528","description":"\u4e8c\u53c9\u6811\u4e2d\u5e8f\u904d\u5386\u7684\u5e94\u7528","date":"2021-09-08T00:00:00.000Z","formattedDate":"September 8, 2021","tags":[{"label":"Inorder Traversal","permalink":"/blog/tags/inorder-traversal"}],"readingTime":3.245,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"\u4e8c\u53c9\u6811\u4e2d\u5e8f\u904d\u5386\u7684\u5e94\u7528","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["Inorder Traversal"],"description":"\u4e8c\u53c9\u6811\u4e2d\u5e8f\u904d\u5386\u7684\u5e94\u7528","hide_table_of_contents":false},"prevItem":{"title":"\u53cc\u4eb2\u59d4\u6d3e\u673a\u5236\u4ee3\u7801\u89e3\u6790","permalink":"/blog/2021/09/11/ParentsDelegationModel"},"nextItem":{"title":"\u7b97\u6cd5\u5e38\u7528\u6570\u636e\u7ed3\u6784(1)-\u5355\u8c03\u6808","permalink":"/blog/2021/09/07/OrderedStack"}},"content":"\u4e8c\u53c9\u6811\u4e2d\u5e8f\u904d\u5386\u7b97\u6cd5\u9898\u4e2d\u7684\u5b9e\u9645\u5e94\u7528\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## \u9a8c\u8bc1\u4e8c\u53c9\u641c\u7d22\u6811\\r\\n\u4e8c\u53c9\u641c\u7d22\u6811\u5b9a\u4e49\u4e3a\\r\\n- \u8282\u70b9\u7684\u5de6\u5b50\u6811\u53ea\u5305\u542b\u5c0f\u4e8e\u5f53\u524d\u8282\u70b9\u7684\u6570\\r\\n- \u8282\u70b9\u7684\u53f3\u5b50\u6811\u53ea\u5305\u542b\u5927\u4e8e\u5f53\u524d\u8282\u70b9\u7684\u6570\\r\\n- \u6240\u6709\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u81ea\u8eab\u5fc5\u987b\u4e5f\u662f\u4e8c\u53c9\u641c\u7d22\u6811\\r\\n\\r\\n\u73b0\u5728\u9700\u8981[\u9a8c\u8bc1\u4e8c\u53c9\u641c\u7d22\u6811](https://leetcode-cn.com/problems/validate-binary-search-tree/)\u662f\u5426\u6709\u6548\u3002\u9996\u5148\u4ece\u5b9a\u4e49\u4e0a\u5f88\u660e\u663e\u5c31\u53ef\u4ee5\u7528\u9012\u5f52\u65b9\u6cd5\u53bb\u5b9e\u73b0\uff0c\u4ee3\u7801\u5982\u4e0b\\r\\n```java\\r\\npublic boolean isValidBST(TreeNode root) {\\r\\n    return isValidBST(root, Long.MIN_VALUE, Long.MAX_VALUE);\\r\\n}\\r\\n\\r\\npublic boolean isValidBST(TreeNode node, long lower, long upper) {\\r\\n    if (node == null) {\\r\\n        return true;\\r\\n    }\\r\\n    if (node.val <= lower || node.val >= upper) {\\r\\n        return false;\\r\\n    }\\r\\n    return isValidBST(node.left, lower, node.val) && isValidBST(node.right, node.val, upper);\\r\\n}\\r\\n```\\r\\n\u5bf9\u4e8e\u975e\u9012\u5f52\u65b9\u5f0f\u9a8c\u8bc1\uff0c\u53ea\u9700\u8981\u9700\u8981\u7262\u8bb0\u4e00\u70b9\uff1a**\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u7ed3\u679c\u662f\u4e00\u4e2a\u9012\u589e\u6570\u7ec4**\uff0c\u56e0\u6b64\u5728\u4e2d\u5e8f\u904d\u5386\u8fed\u4ee3\u65b9\u5f0f\u4ee3\u7801\u7684\u57fa\u7840\u4e0a\uff0c\u5f15\u5165\u4e00\u4e2apre\u53d8\u91cf\u4fdd\u5b58\u4e0a\u4e00\u4e2a\u904d\u5386\u8282\u70b9\u7684\u503c\uff0c\u901a\u8fc7\u6bd4\u8f83\u5f53\u524d\u904d\u5386\u5143\u7d20cur\u548cpre\u7684\u5927\u5c0f\u5224\u65ad\u662f\u5426\u4e3a\u4e8c\u53c9\u6811\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\\r\\n```java {4}\\r\\npublic boolean isValidBST(TreeNode root) {\\r\\n    Deque<TreeNode> stack = new LinkedList<>();\\r\\n    TreeNode node = root;\\r\\n    double pre = -Double.MAX_VALUE;\\r\\n    while (!stack.isEmpty() || node != null) {\\r\\n        while (node != null) {\\r\\n            stack.push(node);\\r\\n            node = node.left;\\r\\n        }\\r\\n        node = stack.pop();\\r\\n        if(node.val > pre)\\r\\n            pre = node.val;\\r\\n        else\\r\\n            return false;\\r\\n        node = node.right;\\r\\n    }\\r\\n    return true;\\r\\n}\\r\\n```\\r\\n:::caution \u6ce8\u610f\\r\\npre\u7684\u521d\u59cb\u503c\u5fc5\u987b\u786e\u4fdd\u6bd4\u5143\u7d20\u7c7b\u578b\u7684\u6700\u5c0f\u503c\u8fd8\u5c0f\uff0c\u4e00\u5f00\u59cb\u7528\u7684\u662fInteger.MIN_VALUE\u5bfc\u81f4\u7ed3\u679c\u9519\u8bef\uff0c\u529b\u6263\u6709\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u5c31\u662f\u5355\u8282\u70b9\u6811\uff0c\u503c\u4e3a-2<sup>31</sup>(Integer.MIN_VALUE)\\r\\n:::\\r\\n\\r\\n## \u4e24\u6570\u4e4b\u548c\\r\\n[\u9898\u76ee\u63cf\u8ff0](https://leetcode-cn.com/problems/two-sum-iv-input-is-a-bst/)\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u641c\u7d22\u6811root\u548c\u76ee\u6807\u503ck\uff0c\u5982\u679cBST\u4e2d\u5b58\u5728\u4e24\u4e2a\u5143\u7d20\u4e14\u5b83\u4eec\u7684\u548c\u7b49\u4e8e\u7ed9\u5b9a\u76ee\u6807\u7ed3\u679c\uff0c\u5219\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\u3002\u4e86\u89e3\u4e86\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u7ed3\u679c\u662f\u4e00\u4e2a\u9012\u589e\u6570\u7ec4\u8fd9\u4e2a\u7279\u6027\u540e\uff0c\u95ee\u9898\u5c31\u8f6c\u6362\u4e3a\u6c42\u9012\u589e\u6570\u7ec4\u662f\u5426\u5b58\u5728\u4e24\u6570\u4e4b\u548c\u4e3a\u7ed9\u5b9a\u76ee\u6807\u503c\u3002\u8981\u8bf4\u8fd9\u4e2a\u53ef\u592a\u719f\u4e86\uff0c\u7528\u53cc\u6307\u9488\u89e3\u51b3\uff1a\\r\\n```java\\r\\npublic boolean findTarget(TreeNode root, int k) {\\r\\n    Deque<TreeNode> stack = new LinkedList<>();\\r\\n    List<Integer> list = new ArrayList<>();\\r\\n    TreeNode node = root;\\r\\n    int sum;\\r\\n    while(!stack.isEmpty() || node != null) {\\r\\n        while (node != null) {\\r\\n            stack.push(node);\\r\\n            node = node.left;\\r\\n        }\\r\\n        node = stack.pop();\\r\\n        list.add(node.val);\\r\\n        node = node.right;\\r\\n    }\\r\\n    for (int i = 0, j = list.size()-1; i < j;) {\\r\\n        sum = list.get(i) + list.get(j);\\r\\n        if(sum == k)\\r\\n            return true;\\r\\n        else if(sum < k)\\r\\n            ++i;\\r\\n        else\\r\\n            --j;\\r\\n    }\\r\\n    return false;\\r\\n}\\r\\n```\\r\\n:::info \u603b\u7ed3\\r\\n\u80cc\u4e0b\u4e2d\u5e8f\u904d\u5386\u8fed\u4ee3\u65b9\u5f0f\u4ee3\u7801\uff0c\u8fd9\u6b21\u505a\u9898\u65f6\u5c31\u56e0\u4e3a\u628a\u7b2c\u4e00\u4e2awhile\u5faa\u73af\u4e2d\u7684`||` \u5199\u6210\u4e86`&&`\u5bfc\u81f4\u51fa\u9519\uff01\u522b\u4e00\u4e0a\u6765\u5c31\u628aroot\u538b\u5165\u6808\uff0c\u8fd9\u4e0d\u662f\u5c42\u5e8f\u904d\u5386\uff01\\r\\n:::"},{"id":"/2021/09/07/OrderedStack","metadata":{"permalink":"/blog/2021/09/07/OrderedStack","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2021-09-07-OrderedStack.mdx","source":"@site/blog/2021-09-07-OrderedStack.mdx","title":"\u7b97\u6cd5\u5e38\u7528\u6570\u636e\u7ed3\u6784(1)-\u5355\u8c03\u6808","description":"\u5355\u8c03\u6808\u76f8\u5173\u7b97\u6cd5\u9898","date":"2021-09-07T00:00:00.000Z","formattedDate":"September 7, 2021","tags":[{"label":"OrderedStack","permalink":"/blog/tags/ordered-stack"}],"readingTime":2.895,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"\u7b97\u6cd5\u5e38\u7528\u6570\u636e\u7ed3\u6784(1)-\u5355\u8c03\u6808","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["OrderedStack"],"description":"\u5355\u8c03\u6808\u76f8\u5173\u7b97\u6cd5\u9898","hide_table_of_contents":false},"prevItem":{"title":"\u4e8c\u53c9\u6811\u4e2d\u5e8f\u904d\u5386\u7684\u5e94\u7528","permalink":"/blog/2021/09/08/\u4e8c\u53c9\u6811\u4e2d\u5e8f\u904d\u5386\u5e94\u7528"},"nextItem":{"title":"\u4e8c\u53c9\u6811\u57fa\u672c\u7b97\u6cd5","permalink":"/blog/2021/09/06/BiTreeBasicAlgorithms"}},"content":"\u7b97\u6cd5\u5e38\u7528\u6570\u636e\u7ed3\u6784(1)-\u5355\u8c03\u6808\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## \u5b9a\u4e49\\r\\n\u5355\u8c03\u6808\u5c31\u662f\u5143\u7d20\u5355\u8c03\u9012\u589e\u6216\u9012\u51cf\u7684\u6808\u3002\u4ee5\u5355\u8c03\u9012\u589e\u6808\u4e3a\u4f8b\uff0c\u5982\u679c\u5f53\u524d\u5165\u6808\u5143\u7d20\u5927\u4e8e\u6808\u9876\u5143\u7d20\uff0c\u5219\u8fdb\u884c\u6b63\u5e38\u5165\u6808\uff0c\u5426\u5219\u5faa\u73af\u5f39\u51fa\u6808\u5185\u5143\u7d20\uff0c\u76f4\u5230\u6808\u4e3a\u7a7a\u6216\u8005\u6808\u9876\u5143\u7d20\u5c0f\u4e8e\u5165\u6808\u5143\u7d20\uff0c\u7136\u540e\u518d\u6b63\u5e38\u5165\u6808\\r\\n\\r\\n\\r\\n## \u7528\u4f8b\\r\\n\u4e0b\u9762\u4ecb\u7ecd\u51e0\u79cd\u5355\u8c03\u6808\u7684\u7528\u4f8b\\r\\n### \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a\\r\\n\u5148\u770b\u4e00\u9053\u7b80\u5355\u7684\u7b97\u6cd5\u9898\uff1a[\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a](https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/)\uff0c\u539f\u9898\u63cf\u8ff0\u5982\u4e0b\uff1a\\r\\n> \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4prices\uff0c\u5b83\u7684\u7b2ci\u4e2a\u5143\u7d20prices[i]\u8868\u793a\u4e00\u652f\u7ed9\u5b9a\u80a1\u7968\u7b2ci\u5929\u7684\u4ef7\u683c\u3002\u4f60\u53ea\u80fd\u9009\u62e9\u67d0\u4e00\u5929\u4e70\u5165\u8fd9\u53ea\u80a1\u7968\uff0c\u5e76\u9009\u62e9\u5728\u672a\u6765\u7684\u67d0\u4e00\u4e2a\u4e0d\u540c\u7684\u65e5\u5b50\u5356\u51fa\u8be5\u80a1\u7968\u3002\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u6765\u8ba1\u7b97\u4f60\u6240\u80fd\u83b7\u53d6\u7684\u6700\u5927\u5229\u6da6\u3002\u8fd4\u56de\u4f60\u53ef\u4ee5\u4ece\u8fd9\u7b14\u4ea4\u6613\u4e2d\u83b7\u53d6\u7684\u6700\u5927\u5229\u6da6\u3002\u5982\u679c\u4f60\u4e0d\u80fd\u83b7\u53d6\u4efb\u4f55\u5229\u6da6\uff0c\u8fd4\u56de0\u3002\u6bd4\u5982\u8f93\u5165\u6570\u7ec4\u4e3a[7,1,5,3,6,4]\uff0c\u8f93\u51fa\u6700\u5927\u5229\u6da65\\r\\n\\r\\n\u4f7f\u7528\u5355\u8c03\u6808\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u57fa\u672c\u601d\u8def\uff1a\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u6808\uff0c\u904d\u5386prices\u6570\u7ec4\u5c06\u5176\u5143\u7d20prices[i]\u538b\u5165\u8be5\u5355\u8c03\u6808\uff0c\u7136\u540e\u6808\u9876\u5143\u7d20\u51cf\u53bb\u6808\u5e95\u5143\u7d20\u5f97\u5230\u76ee\u524d\u53ef\u83b7\u5f97\u7684\u6700\u5927\u5229\u6da6\uff0c\u53d6\u6240\u6709\u8f6e\u5229\u6da6\u7684\u6700\u5927\u503c\u5373\u4e3a\u6240\u6c42\u7b54\u6848\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a\\r\\n```java {3,7}\\r\\npublic int maxProfit(int[] prices) {\\r\\n    Deque<Integer> stack = new LinkedList<>();\\r\\n    stack.push(prices[0]);\\r\\n    int maxProfit = 0;\\r\\n\\r\\n    for (int price : prices) {\\r\\n        while(!stack.isEmpty() && price < stack.peek()) {\\r\\n            stack.pop();\\r\\n        }\\r\\n        stack.push(price);\\r\\n        maxProfit = Math.max(maxProfit, stack.getFirst() - stack.getLast());\\r\\n    }\\r\\n    return maxProfit;\\r\\n}\\r\\n```\\r\\n:::tip \u63d0\u793a\\r\\n1. \u4e8b\u5148\u628a\u7b2c\u4e00\u5929\u4ef7\u683c\u76f4\u63a5\u538b\u5165\u6808\\r\\n2. while\u5faa\u73af\u8981\u8fdb\u884c\u6808\u7684\u975e\u7a7a\u5224\u65ad\uff0c\u5426\u5219\u5f53\u524d\u662f\u5386\u53f2\u6700\u4f4e\u4ef7\u7684\u8bdd\uff0cpeek\u65b9\u6cd5\u8fd4\u56denull\u548cprice\u6bd4\u8f83\\r\\n:::\\r\\n\\r\\n### \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673aII\\r\\n\u8fdb\u9636\u4e00\u4e0b\uff0c[\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673aII](https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-ii/)\uff0c\u539f\u9898\u63cf\u8ff0\u5982\u4e0b\uff1a\\r\\n> \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4prices\uff0c\u5176\u4e2dprices[i]\u662f\u4e00\u652f\u7ed9\u5b9a\u80a1\u7968\u7b2ci\u5929\u7684\u4ef7\u683c\u3002\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u6765\u8ba1\u7b97\u4f60\u6240\u80fd\u83b7\u53d6\u7684\u6700\u5927\u5229\u6da6\u3002\u4f60\u53ef\u4ee5\u5c3d\u53ef\u80fd\u5730\u5b8c\u6210\u66f4\u591a\u7684\u4ea4\u6613\uff08\u591a\u6b21\u4e70\u5356\u4e00\u652f\u80a1\u7968\uff09\u3002\u6ce8\u610f\uff1a\u4f60\u4e0d\u80fd\u540c\u65f6\u53c2\u4e0e\u591a\u7b14\u4ea4\u6613\uff08\u4f60\u5fc5\u987b\u5728\u518d\u6b21\u8d2d\u4e70\u524d\u51fa\u552e\u6389\u4e4b\u524d\u7684\u80a1\u7968\uff09\u3002"},{"id":"/2021/09/06/BiTreeBasicAlgorithms","metadata":{"permalink":"/blog/2021/09/06/BiTreeBasicAlgorithms","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2021-09-06-BiTreeBasicAlgorithms.mdx","source":"@site/blog/2021-09-06-BiTreeBasicAlgorithms.mdx","title":"\u4e8c\u53c9\u6811\u57fa\u672c\u7b97\u6cd5","description":"\u4e8c\u53c9\u6811\u57fa\u672c\u7b97\u6cd5","date":"2021-09-06T00:00:00.000Z","formattedDate":"September 6, 2021","tags":[{"label":"BiTree","permalink":"/blog/tags/bi-tree"}],"readingTime":4.8,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"\u4e8c\u53c9\u6811\u57fa\u672c\u7b97\u6cd5","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["BiTree"],"description":"\u4e8c\u53c9\u6811\u57fa\u672c\u7b97\u6cd5","hide_table_of_contents":false},"prevItem":{"title":"\u7b97\u6cd5\u5e38\u7528\u6570\u636e\u7ed3\u6784(1)-\u5355\u8c03\u6808","permalink":"/blog/2021/09/07/OrderedStack"},"nextItem":{"title":"\u4e8c\u53c9\u6811\u904d\u5386","permalink":"/blog/2021/09/04/BiTreeTraversal"}},"content":"\u5b66\u5b8c\u4e86\u4e8c\u53c9\u6811\u57fa\u7840\u7684\u904d\u5386\u64cd\u4f5c\uff0c\u518d\u8bb0\u5f55\u4e0b\u5176\u4ed6\u4e8c\u53c9\u6811\u76f8\u5173\u7684\u57fa\u672c\u7b97\u6cd5\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## \u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6\\r\\n[\u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6](https://leetcode-cn.com/problems/maximum-depth-of-binary-tree/)\u662f\u6307\u4ece\u6839\u8282\u70b9\u5230**\u6700\u8fdc\u53f6\u5b50\u8282\u70b9**\u4e0a\u7684\u8282\u70b9\u6570\\r\\n\\r\\n### \u9012\u5f52\u65b9\u5f0f\\r\\n\u57fa\u4e8e\u8fd9\u4e48\u4e00\u4e2a\u57fa\u672c\u601d\u8def\uff1a\u4e00\u68f5\u4e8c\u53c9\u6811\u6700\u5927\u6df1\u5ea6\u7b49\u4e8e\u5b83\u5de6\u53f3\u5b50\u6811\u6700\u5927\u6df1\u5ea6\u7684\u8f83\u5927\u503c\u52a01\u3002\u7136\u540e\u8981\u786e\u8ba4\u9012\u5f52\u7ec8\u6b62\u6761\u4ef6\uff0c\u5c31\u662f\u6700\u7b80\u5355\u7a7a\u6811\uff0c\u6b64\u65f6\u8fd4\u56de\u6df1\u5ea6\u4e3a0\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\\r\\n```java {3}\\r\\npublic int maxDepth(TreeNode root) {\\r\\n    if(root == null) {\\r\\n        return 0;     // \u6ce8\u610f\u8fd9\u91cc\u4e0d\u8981\u5199\u62101\\r\\n    }\\r\\n    return Math.max(maxDepth(root.left)+1, maxDepth(root.right)+1);\\r\\n}\\r\\n```\\r\\n\\r\\n### \u975e\u9012\u5f52\u65b9\u5f0f\\r\\n\u8fd9\u91cc\u5c31\u8981\u7528\u5230\u4e4b\u524d\u603b\u7ed3\u7684\u4e8c\u53c9\u6811\u5c42\u5e8f\u904d\u5386\u601d\u8def\uff0c\u56e0\u4e3a\u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6\u5c31\u662f\u5176\u5c42\u5e8f\u904d\u5386\u65f6\u7684\u6700\u5927\u5c42\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\\r\\n```java {3}\\r\\npublic int maxDepth(TreeNode root) {\\r\\n\\r\\n    if(root == null)      // \u6c38\u8fdc\u4e0d\u8981\u5fd8\u8bb0\u5904\u7406\u7a7a\u6811\u60c5\u51b5\\r\\n        return 0;\\r\\n\\r\\n    Queue<TreeNode> queue = new LinkedList<>();\\r\\n    queue.offer(root);\\r\\n\\r\\n    TreeNode tmp = null;\\r\\n    int maxDepth = 0;\\r\\n\\r\\n    while(!queue.isEmpty()) {\\r\\n        int len = queue.size();\\r\\n        maxDepth++;\\r\\n        for (int i = 0; i < len; i++) {\\r\\n            tmp = queue.poll();\\r\\n            if(tmp.left != null)\\r\\n                queue.offer(tmp.left);\\r\\n            if(tmp.right != null)\\r\\n                queue.offer(tmp.right);\\r\\n        }\\r\\n    }\\r\\n    return maxDepth;\\r\\n}\\r\\n```\\r\\n\\r\\n## \u5bf9\u79f0\u4e8c\u53c9\u6811\\r\\n\u5f53\u4e00\u4e2a\u4e8c\u53c9\u6811\u662f\u955c\u50cf\u5bf9\u79f0\u7684\u79f0\u4e4b\u4e3a\u5bf9\u79f0\u4e8c\u53c9\u6811\uff0c\u6bd4\u5982\\r\\n```\\r\\n    1\\r\\n   / \\\\\\r\\n  2   2\\r\\n / \\\\ / \\\\\\r\\n3  4 4  3\\r\\n```\\r\\n\\r\\n### \u9012\u5f52\u65b9\u5f0f\\r\\n\u5bf9\u4e8e\u4e00\u9897\u4e8c\u53c9\u6811\u7684\u5de6\u53f3\u5b50\u6811\uff0c\u5f53\u5de6\u53f3\u5b50\u6811\u6839\u8282\u70b9\u7684\u503c\u76f8\u540c\uff0c\u5e76\u4e14\u5de6\u53f3\u5b50\u6811\u955c\u50cf\u5bf9\u79f0\u65f6\uff0c\u8be5\u6811\u662f\u5bf9\u79f0\u7684\u3002\u5de6\u53f3\u5b50\u6811\u955c\u50cf\u5bf9\u79f0\u7684\u6761\u4ef6\uff1a\\r\\n- \u5de6\u5b50\u6811\u7684\u53f3\u5b50\u6811\u4e0e\u53f3\u5b50\u6811\u7684\u5de6\u5b50\u6811\u5bf9\u79f0\\r\\n- \u53f3\u5b50\u6811\u7684\u5de6\u5b50\u6811\u4e0e\u5de6\u5b50\u6811\u7684\u53f3\u5b50\u6811\u5bf9\u79f0\\r\\n\\r\\n```java\\r\\npublic boolean isSymmetric(TreeNode root) {\\r\\n    return check(root, root);\\r\\n}\\r\\n\\r\\npublic boolean check(TreeNode p, TreeNode q) {\\r\\n    if (p == null && q == null) {\\r\\n        return true;\\r\\n    }\\r\\n    if (p == null || q == null) {\\r\\n        return false;\\r\\n    }\\r\\n    return p.val == q.val && check(p.left, q.right) && check(p.right, q.left);\\r\\n}\\r\\n```\\r\\n\\r\\n### \u8fed\u4ee3\u65b9\u5f0f\\r\\n\u4e0d\u96be\u53d1\u73b0\u5bf9\u79f0\u4e8c\u53c9\u6811\u5c42\u5e8f\u904d\u5386\u65f6\u7684\u7ed3\u679c\u662f\u56de\u6587\u7684\u3002\u4e3a\u4e86\u7b80\u5316\u5224\u65ad\uff0c\u5728\u5c42\u5e8f\u904d\u5386\u7ed9\u961f\u5217\u6dfb\u52a0\u5de6\u53f3\u5b50\u8282\u70b9\u65f6\uff0c\u6309\u7167left.left\u3001right.right\u3001left.right\u3001right.left\u7684\u987a\u5e8f\u63d2\u5165\uff0c\u8fd9\u6837\u4e24\u4e24\u4e00\u5bf9\u7684\u8282\u70b9\u503c\u90fd\u662f\u76f8\u540c\u7684\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\\r\\n\\r\\n```java\\r\\npublic boolean check(TreeNode p, TreeNode q) {\\r\\n    Queue<TreeNode> queue = new LinkedList<>();\\r\\n    queue.offer(p);\\r\\n    queue.offer(q);\\r\\n\\r\\n    while(!queue.isEmpty()) {\\r\\n        TreeNode v = queue.poll();\\r\\n        TreeNode u = queue.poll();\\r\\n\\r\\n        if(v == null && u == null) {\\r\\n            // return true;         \u4e00\u5f00\u59cb\u76f4\u63a5return\uff0c\u9519\u8bef\uff01\\r\\n            continue;\\r\\n        }\\r\\n        if(v == null || u == null || v.val != u.val)\\r\\n            return false;\\r\\n        queue.offer(v.left);\\r\\n        queue.offer(u.right);\\r\\n        queue.offer(v.right);\\r\\n        queue.offer(u.left);\\r\\n    }\\r\\n    return true;\\r\\n}\\r\\n\\r\\npublic boolean isSymmetric(TreeNode root) {\\r\\n    return check(root, root);\\r\\n}\\r\\n```\\r\\n\\r\\n:::tip \u63d0\u793a\\r\\n\u8fd8\u53ef\u4ee5\u901a\u8fc7\u4e2d\u5e8f\u904d\u5386\u7ed3\u679c\u662f\u5426\u56de\u6587\u6765\u5224\u65ad\\r\\n:::\\r\\n\\r\\n## \u7ffb\u8f6c\u4e8c\u53c9\u6811\\r\\n\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u628a\u4e8c\u53c9\u6811\u7684\u5de6\u53f3\u5b50\u6811\u90fd\u5bf9\u8c03\u4e00\u4e0b\\r\\n\\r\\n### \u9012\u5f52\u65b9\u5f0f\\r\\n\u9996\u5148\u9012\u5f52\u7ec8\u6b62\u6761\u4ef6\u662f\u4f20\u5165\u6839\u8282\u70b9\u53c2\u6570\u4e3anull\uff0c\u6b64\u65f6\u8fd4\u56denull\uff0c\u5176\u4ed6\u60c5\u51b5\u5c31\u5bf9\u5de6\u53f3\u5b50\u6811\u9012\u5f52\u8c03\u7528\u65b9\u6cd5\u8fdb\u884c\u7ffb\u8f6c\uff0c\u6700\u540e\u628a\u5de6\u53f3\u5b50\u6811\u4ea4\u6362\u4e00\u4e0b\\r\\n```java\\r\\npublic TreeNode invertTree(TreeNode root) {\\r\\n    if(root == null)\\r\\n        return null;\\r\\n    TreeNode left = invertTree(root.left);\\r\\n    TreeNode right = invertTree(root.right);\\r\\n    root.left = right;\\r\\n    root.right = left;\\r\\n    return root;\\r\\n}\\r\\n```\\r\\n\\r\\n### \u8fed\u4ee3\u65b9\u5f0f\\r\\n\u8fd8\u662f\u4f7f\u7528\u5c42\u5e8f\u904d\u5386\uff0c\u6bcf\u6b21\u53d6\u51fa\u4e00\u4e2a\u8282\u70b9\u4ea4\u6362\u5176\u5de6\u53f3\u5b50\u8282\u70b9\u3002\u8fd9\u91cc\u4e0d\u9700\u8981\u7edf\u8ba1\u5c42\u6570\uff0c\u6240\u4ee5\u6ca1\u6709\u7528for\u5faa\u73af\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\\r\\n```java\\r\\npublic TreeNode invertTree(TreeNode root) {\\r\\n    if(root == null)\\r\\n        return null;\\r\\n\\r\\n    Queue<TreeNode> queue = new LinkedList<>();\\r\\n    queue.offer(root);\\r\\n    TreeNode node, tmp;\\r\\n\\r\\n    while(!queue.isEmpty()) {\\r\\n        node = queue.poll();\\r\\n        tmp = node.left;\\r\\n        node.left = node.right;\\r\\n        node.right = tmp;\\r\\n        // \u786e\u4fdd\u961f\u5217\u4e2d\u7684\u8282\u70b9\u90fd\u662f\u975enull\\r\\n        if(node.left != null)\\r\\n            queue.offer(node.left);\\r\\n        if(node.right != null)\\r\\n            queue.offer(node.right);\\r\\n    }\\r\\n    return root;\\r\\n}\\r\\n```\\r\\n\\r\\n:::info \u603b\u7ed3\\r\\n\u6bcf\u4e00\u79cd\u7b97\u6cd5\u7684\u975e\u9012\u5f52\u5b9e\u73b0\u90fd\u7528\u5230\u4e86\u5c42\u5e8f\u904d\u5386\u7684\u8fed\u4ee3\u5b9e\u73b0\uff0c\u8bf4\u660e\u8fd9\u5957\u4ee3\u7801\u6a21\u677f\u8981\u771f\u7684\u523b\u5728\u9aa8\u5b50\u91cc\u554a\uff0c\u601d\u8003\u8fd9\u4e48\u51e0\u4e2a\u95ee\u9898\uff1a\\r\\n- \u8981\u4e0d\u8981\u5728while\u5faa\u73af\u4e2d\u4f7f\u7528for\u5faa\u73af\uff0c\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\uff1f\\r\\n- \u8981\u4e0d\u8981\u628anull\u4e5f\u63d2\u5165\u961f\u5217\u4e2d\uff0c\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\uff1f\\r\\n:::"},{"id":"/2021/09/04/BiTreeTraversal","metadata":{"permalink":"/blog/2021/09/04/BiTreeTraversal","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2021-09-04-BiTreeTraversal.mdx","source":"@site/blog/2021-09-04-BiTreeTraversal.mdx","title":"\u4e8c\u53c9\u6811\u904d\u5386","description":"\u4e8c\u53c9\u6811\u524d\u3001\u4e2d\u3001\u540e\u3001\u5c42\u5e8f\u904d\u5386","date":"2021-09-04T00:00:00.000Z","formattedDate":"September 4, 2021","tags":[{"label":"BiTree","permalink":"/blog/tags/bi-tree"},{"label":"Traversal","permalink":"/blog/tags/traversal"}],"readingTime":8.255,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"\u4e8c\u53c9\u6811\u904d\u5386","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["BiTree","Traversal"],"description":"\u4e8c\u53c9\u6811\u524d\u3001\u4e2d\u3001\u540e\u3001\u5c42\u5e8f\u904d\u5386","hide_table_of_contents":false},"prevItem":{"title":"\u4e8c\u53c9\u6811\u57fa\u672c\u7b97\u6cd5","permalink":"/blog/2021/09/06/BiTreeBasicAlgorithms"},"nextItem":{"title":"Spring Boot\u5b66\u4e60(1)","permalink":"/blog/2021/08/01/SpringBoot\u53c2\u6570\u6ce8\u89e3"}},"content":"\u4e8c\u53c9\u6811\u76844\u79cd\u904d\u5386\u65b9\u5f0f\uff0c\u5c06\u904d\u5386\u7ed3\u679c\u4ee5\u5217\u8868\u5f62\u5f0f\u8fd4\u56de\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\n## \u524d\u5e8f\u904d\u5386\\r\\n\u6309\u7167\u8bbf\u95ee\u6839\u8282\u70b9-\u5de6\u5b50\u6811-\u53f3\u5b50\u6811\u7684\u987a\u5e8f\u904d\u5386\u4e8c\u53c9\u6811\\r\\n### \u9012\u5f52\u65b9\u5f0f\\r\\n\u9012\u5f52\u65b9\u6cd5\u6d41\u7a0b\\r\\n1. \u5148\u5224\u65adroot\u662f\u5426\u4e3anull\uff0c\u662f\u5219\u76f4\u63a5\u8fd4\u56de\\r\\n2. root\u6dfb\u52a0\u5230\u7ed3\u679c\u5217\u8868res\\r\\n3. \u9012\u5f52\u8c03\u7528preorder\u65b9\u6cd5\uff0c\u5c06**\u5de6**\u8282\u70b9\u3001res\u4f5c\u4e3a\u53c2\u6570\\r\\n4. \u9012\u5f52\u8c03\u7528preorder\u65b9\u6cd5\uff0c\u5c06**\u53f3**\u8282\u70b9\u3001res\u4f5c\u4e3a\u53c2\u6570\\r\\n\u6ce8\u610f\u9012\u5f52\u65b9\u6cd5\u9700\u8981\u628a\u7ed3\u679c\u5217\u8868res\u4f5c\u4e3a\u53c2\u6570\u5e26\u4e0a\uff0c\u5e76\u4e14res\u5fc5\u987b\u4f5c\u4e3a\u5f15\u7528\u4f20\u5165\uff0c\u800c\u4e0d\u662f\u590d\u5236\u503c\\r\\n```java\\r\\nclass Solution {\\r\\n    public List<Integer> preorderTraversal(TreeNode root) {\\r\\n        List<Integer> res = new ArrayList<Integer>();\\r\\n        preorder(root, res);\\r\\n        return res;\\r\\n    }\\r\\n\\r\\n    public void preorder(TreeNode root, List<Integer> res) {\\r\\n        if (root == null) {\\r\\n            return;\\r\\n        }\\r\\n        res.add(root.val);\\r\\n        preorder(root.left, res);\\r\\n        preorder(root.right, res);\\r\\n    }\\r\\n}\\r\\n```\\r\\n### \u8fed\u4ee3\u65b9\u5f0f\\r\\n\u672c\u8d28\u4e0a\u81ea\u5df1\u4f7f\u7528\u6808\u91cd\u65b0\u8d70\u4e00\u904d\u9012\u5f52\u65b9\u6cd5\\r\\n1. \u5f53\u6808\u4e0d\u4e3a\u7a7a**\u6216\u8005**\u5f53\u524d\u8fbe\u5230\u8282\u70b9node\u4e0d\u4e3anull\u65f6\\r\\n2. \u5f53node\u4e0d\u4e3a\u7a7a\u65f6\uff0c\u4e00\u76f4\u5f80\u5de6\u5b50\u8282\u70b9\u8d70\u5230\u5e95\uff0c\u6bcf\u8d70\u4e00\u6b65\u5c31\u628anode\u4fdd\u5b58\u5230res\u5217\u8868\uff0c\u5e76\u4e14\u538b\u5165\u6808\\r\\n3. node\u4e3a\u7a7a\u8868\u793a\u5df2\u7ecf\u8d70\u5230\u4e86\u67d0\u68f5\u5b50\u6811\u7684\u6700\u5de6\u8282\u70b9\uff0c\u5c06\u8be5\u5b50\u6811\u7684root\u8282\u70b9\u4ece\u6808\u4e2d\u5f39\u51fa\uff0c\u7136\u540e\u8bbf\u95ee\u8be5\u5b50\u6811\u7684\u53f3\u5b50\u6811\uff0c\u56de\u5230\u6b65\u9aa41\\r\\n```java\\r\\nclass Solution {\\r\\n    public List<Integer> preorderTraversal(TreeNode root) {\\r\\n        List<Integer> res = new ArrayList<Integer>();\\r\\n        if (root == null) {\\r\\n            return res;\\r\\n        }\\r\\n\\r\\n        Deque<TreeNode> stack = new LinkedList<TreeNode>();\\r\\n        TreeNode node = root;\\r\\n        while (!stack.isEmpty() || node != null) {\\r\\n            while (node != null) {\\r\\n                res.add(node.val);\\r\\n                stack.push(node);\\r\\n                node = node.left;\\r\\n            }\\r\\n            node = stack.pop();\\r\\n            node = node.right;\\r\\n        }\\r\\n        return res;\\r\\n    }\\r\\n}\\r\\n```\\r\\n## \u4e2d\u5e8f\u904d\u5386\\r\\n\u6309\u7167\u8bbf\u95ee\u5de6\u5b50\u6811-\u6839\u8282\u70b9-\u53f3\u5b50\u6811\u7684\u987a\u5e8f\u904d\u5386\u4e8c\u53c9\u6811\\r\\n### \u9012\u5f52\u65b9\u5f0f\\r\\n\u6839\u636e\u8bbf\u95ee\u987a\u5e8f\u903b\u8f91\u4fee\u6539\u4ee3\u7801\uff0c\u628a\u52a0\u5165res\u5217\u8868\u7684\u90a3\u4e00\u884c\u4ee3\u7801\u632a\u5230\u9012\u5f52\u8bbf\u95ee\u5de6\u3001\u53f3\u5b50\u6811\u7684\u4e2d\u95f4\u5373\u53ef\\r\\n```java {12,14}\\r\\nclass Solution {\\r\\n    public List<Integer> inorderTraversal(TreeNode root) {\\r\\n        List<Integer> res = new ArrayList<Integer>();\\r\\n        preorder(root, res);\\r\\n        return res;\\r\\n    }\\r\\n\\r\\n    public void preorder(TreeNode root, List<Integer> res) {\\r\\n        if (root == null) {\\r\\n            return;\\r\\n        }\\r\\n        // res.add(root.val);     \u8fd9\u662f\u524d\u5e8f\u904d\u5386\\r\\n        preorder(root.left, res);\\r\\n        res.add(root.val);        // \u8fd9\u662f\u4e2d\u5e8f\u904d\u5386\\r\\n        preorder(root.right, res);\\r\\n    }\\r\\n}\\r\\n```\\r\\n### \u8fed\u4ee3\u65b9\u5f0f\\r\\n\u5728\u524d\u5e8f\u904d\u5386\u8fed\u4ee3\u65b9\u5f0f\u7684\u57fa\u7840\u4e0a\u4fee\u6539\u4e5f\u5f88\u7b80\u5355\uff0c\u5f53\u8d70\u5b8c\u67d0\u68f5\u5b50\u6811\u7684\u5de6\u5b50\u6811\u540e\uff0c\u4ece\u6808\u4e2d\u5f39\u51fa\u7684root\u8282\u70b9\u5c31\u662f\u8981\u8bbf\u95ee\u7684\u8282\u70b9\uff0c\u5c06\u5176\u52a0\u5165res\u5217\u8868\u5373\u53ef\\r\\n```java {12,17}\\r\\nclass Solution {\\r\\n    public List<Integer> inorderTraversal(TreeNode root) {\\r\\n        List<Integer> res = new ArrayList<Integer>();\\r\\n        if (root == null) {\\r\\n            return res;\\r\\n        }\\r\\n\\r\\n        Deque<TreeNode> stack = new LinkedList<TreeNode>();\\r\\n        TreeNode node = root;\\r\\n        while (!stack.isEmpty() || node != null) {\\r\\n            while (node != null) {\\r\\n                // res.add(node.val);   // \u8fd9\u662f\u524d\u5e8f\u904d\u5386\u7684\u4f4d\u7f6e\\r\\n                stack.push(node);\\r\\n                node = node.left;\\r\\n            }\\r\\n            node = stack.pop();\\r\\n            res.add(node.val);    // \u8fd9\u662f\u4e2d\u5e8f\u904d\u5386\u7684\u4f4d\u7f6e\\r\\n            node = node.right;\\r\\n        }\\r\\n        return res;\\r\\n    }\\r\\n}\\r\\n```\\r\\n## \u540e\u5e8f\u904d\u5386\\r\\n\u6309\u7167\u8bbf\u95ee\u5de6\u5b50\u6811-\u53f3\u5b50\u6811-\u6839\u8282\u70b9\u7684\u987a\u5e8f\u904d\u5386\u4e8c\u53c9\u6811\\r\\n### \u9012\u5f52\u65b9\u5f0f\\r\\n\u6839\u636e\u8bbf\u95ee\u987a\u5e8f\u903b\u8f91\u4fee\u6539\u4ee3\u7801\uff0c\u628a\u52a0\u5165res\u5217\u8868\u7684\u90a3\u4e00\u884c\u4ee3\u7801\u632a\u5230\u9012\u5f52\u8bbf\u95ee\u5de6\u3001\u53f3\u5b50\u6811\u7684\u4e2d\u95f4\u5373\u53ef\\r\\n```java {12,14,16}\\r\\nclass Solution {\\r\\n    public List<Integer> inorderTraversal(TreeNode root) {\\r\\n        List<Integer> res = new ArrayList<Integer>();\\r\\n        preorder(root, res);\\r\\n        return res;\\r\\n    }\\r\\n\\r\\n    public void preorder(TreeNode root, List<Integer> res) {\\r\\n        if (root == null) {\\r\\n            return;\\r\\n        }\\r\\n        // res.add(root.val);     \u8fd9\u662f\u524d\u5e8f\u904d\u5386\\r\\n        preorder(root.left, res);\\r\\n        // res.add(root.val);     \u8fd9\u662f\u4e2d\u5e8f\u904d\u5386\\r\\n        preorder(root.right, res);\\r\\n        res.add(root.val);        // \u8fd9\u662f\u540e\u5e8f\u904d\u5386\\r\\n    }\\r\\n}\\r\\n```\\r\\n### \u8fed\u4ee3\u65b9\u5f0f\\r\\n\u540e\u5e8f\u904d\u5386\u7684\u8fed\u4ee3\u65b9\u5f0f\u53ef\u4e0d\u662f\u50cf\u4e4b\u524d\u90a3\u6837\u628a\u8bbf\u95ee\u4ee3\u7801\u632a\u5230\u6700\u540e\u3002\u76f8\u6bd4\u4e0e\u524d\u5e8f\u3001\u4e2d\u5e8f\u904d\u5386\uff0c\u540e\u5e8f\u904d\u5386\u8981\u6c42\u8bbf\u95ee\u5b8c\u5de6\u53f3\u5b50\u6811\u540e\u8bbf\u95eeroot\u8282\u70b9\uff0c\u5728\u8fed\u4ee3\u65b9\u5f0f\u4e2d\uff0c\u6808\u5f39\u51faroot\u8282\u70b9\u540e\uff0c\u5e76\u4e0d\u80fd\u786e\u5b9a\u8fd9\u4e2aroot\u8282\u70b9\u7684\u53f3\u5b50\u6811\u662f\u4e0d\u662f\u88ab\u8bbf\u95ee\u5b8c\u4e86\uff0c\u6b64\u65f6\u53ef\u4ee5\u7ec6\u5206\u4e3a3\u79cd\u60c5\u51b5\uff1a\\r\\n1. root.right\u4e3a\u7a7a\uff0c\u76f4\u63a5\u5c06root\u8282\u70b9\u6dfb\u52a0\u5230res\u5217\u8868\\r\\n2. root.right\u4e0d\u4e3a\u7a7a\uff0c\u4f46\u662f\u6211\u4eec\u5df2\u7ecf\u4ece\u53f3\u5b50\u6811\u8bbf\u95ee\u56de\u6765\u4e86\uff0c\u6b64\u65f6\u4e5f\u5c06root\u8282\u70b9\u6dfb\u52a0\u5230res\u5217\u8868\\r\\n3. root.right\u4e0d\u4e3a\u7a7a\uff0c\u5e76\u4e14\u8fd8\u6ca1\u6709\u8bbf\u95ee\u8fc7\u53f3\u5b50\u6811\uff0c\u6b64\u65f6root\u5165\u6808\u7136\u540e\u8bbf\u95ee\u53f3\u5b50\u6811\\r\\n\u4e3a\u4e86\u5224\u65ad\u662f\u5426\u5df2\u7ecf\u4ece\u53f3\u5b50\u6811\u8bbf\u95ee\u56de\u6765\uff0c\u4f7f\u7528prev\u8868\u793a\u4e0a\u6b21\u4e00\u904d\u5386\u5b8c\u5b50\u6811\u7684root\u8282\u70b9\u3002\\r\\n```java {16-23}\\r\\nclass Solution {\\r\\n    public List<Integer> postorderTraversal(TreeNode root) {\\r\\n        List<Integer> res = new ArrayList<Integer>();\\r\\n        if (root == null) {\\r\\n            return res;\\r\\n        }\\r\\n\\r\\n        Deque<TreeNode> stack = new LinkedList<TreeNode>();\\r\\n        TreeNode prev = null;\\r\\n        while (root != null || !stack.isEmpty()) {\\r\\n            while (root != null) {\\r\\n                stack.push(root);\\r\\n                root = root.left;\\r\\n            }\\r\\n            root = stack.pop();       // \u5de6\u5b50\u6811\u904d\u5386\u5b8c\uff0c\u5f39\u51fa\u6839\u8282\u70b9\\r\\n            if (root.right == null || root.right == prev) {\\r\\n                res.add(root.val);\\r\\n                prev = root;\\r\\n                root = null;          // root\u5de6\u53f3\u5b50\u6811\u904d\u5386\u5b8c\uff0c\u7f6e\u4e3anull\u540eroot\u4f1a\u6210\u4e3a\u5176\u4e0a\u4e00\u5c42\u6839\u8282\u70b9\\r\\n            } else {                  // \u904d\u5386\u53f3\u5b50\u6811\uff0c\u6ce8\u610froot\u8282\u70b9\u91cd\u65b0\u5165\u6808\\r\\n                stack.push(root);\\r\\n                root = root.right;\\r\\n            }\\r\\n        }\\r\\n        return res;\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n:::info\\r\\n\u540e\u5e8f\u904d\u5386\u8fd8\u6709\u4e00\u79cd\u501f\u9274\u4e24\u6b21\u7ffb\u8f6c\u601d\u60f3\u7684\u65b9\u5f0f\uff0c\u4ee5\u524d\u5e8f\u904d\u5386\u8fed\u4ee3\u4e3a\u57fa\u7840\u8fdb\u884c\u955c\u50cf\u7ffb\u8f6c\uff0c\u5373\u8bbf\u95ee\u987a\u5e8f\u4e3a\u6839\u8282\u70b9-\u53f3\u5b50\u6811-\u5de6\u5b50\u6811\uff0c\u5c06\u8fd4\u56de\u7ed3\u679c\u518d\u4e00\u6b21\u7ffb\u8f6c\u5373\u4e3a\u540e\u5e8f\u904d\u5386\u7684\u8bbf\u95ee\u7ed3\u679c\uff0c\u867d\u7136\u7ed3\u679c\u4e00\u6837\u4f46\u662f\u672c\u8d28\u4e0a\u8fd8\u662f\u4e00\u79cd\u524d\u5e8f\u904d\u5386\\r\\n:::\\r\\n\\r\\n## \u5c42\u5e8f\u904d\u5386\\r\\n\u5c42\u5e8f\u904d\u5386\u6309\u7167\u6bcf\u4e00\u5c42\u4ece\u5de6\u5230\u53f3\uff0c\u4ece\u4e0a\u5230\u4e0b\u904d\u5386\u5e76\u8fd4\u56de\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u672c\u8d28\u601d\u60f3\u662f\u4f7f\u7528\u961f\u5217\u8fdb\u884c\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u6bcf\u6b21\u4ece\u961f\u5217\u53d6\u51fa\u4e00\u4e2a\u8282\u70b9\u540e\uff0c\u5c06\u5176\u975e\u7a7a\u5de6\u53f3\u5b50\u8282\u70b9\u52a0\u5165\u961f\u5217\u3002\u4e3a\u4e86\u533a\u5206\u5c42\u4e0e\u5c42\uff0c\u4e00\u5f00\u59cb\u6dfb\u52a0\u4e00\u4e2a\u989d\u5916null\u8282\u70b9\u4f5c\u4e3a\u6807\u8bc6\\r\\n```java {21-23}\\r\\npublic List<List<Integer>> levelOrder(TreeNode root) {\\r\\n    List<List<Integer>> res = new ArrayList();\\r\\n\\r\\n    if(root == null)\\r\\n        return res;\\r\\n\\r\\n    Queue<TreeNode> queue = new LinkedList<>();\\r\\n    queue.offer(root);\\r\\n    queue.offer(null);\\r\\n\\r\\n    while(!queue.isEmpty()) {\\r\\n        List<Integer> level = new ArrayList<>();\\r\\n        while(queue.peek() != null) {\\r\\n            TreeNode node = queue.poll();\\r\\n            level.add(node.val);\\r\\n            if(node.left != null)\\r\\n                queue.offer(node.left);\\r\\n            if(node.right != null)\\r\\n                queue.offer(node.right);\\r\\n        }\\r\\n        queue.poll();             // \u5220\u9664null\u6807\u5fd7\u7136\u540e\u961f\u5c3e\u91cd\u65b0\u52a0\u4e0a\\r\\n        if(!queue.isEmpty())      // \u4e00\u5f00\u59cb\u76f4\u63a5\u91cd\u65b0\u63d2\u5165null\u5bfc\u81f4\u6b7b\u5faa\u73af\\r\\n            queue.offer(null);\\r\\n        res.add(level);\\r\\n    }\\r\\n    return res;\\r\\n}\\r\\n```\\r\\n\u4e00\u79cd\u66f4\u7b80\u6d01\u7684\u65b9\u5f0f\u662f\u904d\u5386\u4e4b\u524d\u4f7f\u7528\u5f53\u524d\u961f\u5217\u957f\u5ea6\uff0c**\u6ce8\u610f\u4e0d\u80fd\u4f7f\u7528isEmpty\u6765\u5224\u65ad\u662f\u5426\u5c42\u5e8f\u904d\u5386\u5b8c\uff0c\u56e0\u4e3a\u904d\u5386\u8fc7\u7a0b\u4e2d\u4f1a\u6dfb\u52a0\u4e0b\u4e00\u5c42\u8282\u70b9**\\r\\n```java\\r\\npublic List<List<Integer>> levelOrder(TreeNode root) {\\r\\n    List<List<Integer>> res = new ArrayList();\\r\\n\\r\\n    if(root == null)\\r\\n        return res;\\r\\n\\r\\n    Queue<TreeNode> queue = new LinkedList<>();\\r\\n    queue.offer(root);\\r\\n\\r\\n    while(!queue.isEmpty()) {\\r\\n        int levelSize = queue.size();\\r\\n        List<Integer> level = new ArrayList<>(levelSize);\\r\\n        for (int i = 0; i < levelSize; i++) {\\r\\n            TreeNode node = queue.poll();\\r\\n            level.add(node.val);\\r\\n            if(node.left != null)\\r\\n                queue.offer(node.left);\\r\\n            if(node.right != null)\\r\\n                queue.offer(node.right);\\r\\n        }\\r\\n        res.add(level);\\r\\n    }\\r\\n    return res;\\r\\n}\\r\\n```\\r\\n:::info \u603b\u7ed3\\r\\n\u4e8c\u53c9\u6811\u524d\u3001\u4e2d\u3001\u540e\u5e8f\u9012\u5f52\u904d\u5386\u5f88\u7b80\u5355\uff0c\u4e3b\u8981\u662f\u8981\u8bb0\u4f4f\u8fed\u4ee3\u904d\u5386\u601d\u8def\u3002\u524d\u3001\u4e2d\u5e8f\u8fed\u4ee3\u904d\u5386\u53ea\u662f\u8bbf\u95ee\u4ee3\u7801\u632a\u4e86\u4e0b\u4f4d\u7f6e\uff0c\u540e\u5e8f\u8fed\u4ee3\u904d\u5386\u4f1a\u66f4\u590d\u6742\u4e9b\uff0c\u7406\u6e05\u601d\u8def\u540e\u8981\u628a\u8fd9\u4e9b\u4ee3\u7801\u6a21\u677f\u90fd\u523b\u5728\u9aa8\u5b50\u91cc\uff0c\u4ee5\u4e0b\u662f\u529b\u6263\u9898\u76ee\u5730\u5740\uff0c\u8981\u6c42\u50cf\u80cc\u4e66\u4e00\u6837\u9a6c\u4e0a\u5199\u51fa\u6765:punch:\\r\\n- [\u524d\u5e8f\u904d\u5386](https://leetcode-cn.com/problems/binary-tree-preorder-traversal/)\\r\\n- [\u4e2d\u5e8f\u904d\u5386](https://leetcode-cn.com/problems/binary-tree-inorder-traversal/)\\r\\n- [\u540e\u5e8f\u904d\u5386](https://leetcode-cn.com/problems/binary-tree-postorder-traversal/)\\r\\n- [\u5c42\u5e8f\u904d\u5386](https://leetcode-cn.com/problems/binary-tree-level-order-traversal/)\\r\\n:::"},{"id":"/2021/08/01/SpringBoot\u53c2\u6570\u6ce8\u89e3","metadata":{"permalink":"/blog/2021/08/01/SpringBoot\u53c2\u6570\u6ce8\u89e3","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2021-08-01-SpringBoot\u53c2\u6570\u6ce8\u89e3.mdx","source":"@site/blog\\\\2021-08-01-SpringBoot\u53c2\u6570\u6ce8\u89e3.mdx","title":"Spring Boot\u5b66\u4e60(1)","description":"Spring Boot\u5e38\u7528\u53c2\u6570\u6ce8\u89e3\u4f7f\u7528","date":"2021-08-01T00:00:00.000Z","formattedDate":"August 1, 2021","tags":[{"label":"Spring Boot","permalink":"/blog/tags/spring-boot"}],"readingTime":7.125,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"Spring Boot\u5b66\u4e60(1)","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["Spring Boot"],"description":"Spring Boot\u5e38\u7528\u53c2\u6570\u6ce8\u89e3\u4f7f\u7528","hide_table_of_contents":false},"prevItem":{"title":"\u4e8c\u53c9\u6811\u904d\u5386","permalink":"/blog/2021/09/04/BiTreeTraversal"},"nextItem":{"title":"Spring Boot\u6e90\u7801\u5206\u6790(1)","permalink":"/blog/2021/08/01/SpringBoot\u6e90\u7801\u5206\u679001"}},"content":"\u4e0a\u624bSpring Boot\u5f88\u7b80\u5355\uff0c\u5199\u597d\u7c7b\u6253\u4e0a@Controller\u3001@Service\u6ce8\u89e3\uff0c\u524d\u8005\u518d\u7528@Autowire\u628a\u540e\u8005\u5bfc\u5165\uff0c\u7136\u540e\u53ea\u5728Service\u7c7b\u4e2d\u5199\u4e1a\u52a1\u903b\u8f91\u4ee3\u7801\u5373\u53ef\u3002\u4e3a\u4e86\u65b9\u4fbf\u83b7\u53d6\u524d\u7aef\u53c2\u6570\u5e76\u7b80\u5316\u4ee3\u7801\uff0c\u6211\u4eec\u9700\u8981\u5728Controller\u65b9\u6cd5\u5f62\u53c2\u5217\u8868\u4e2d\u52a0\u4e0a\u53c2\u6570\u6ce8\u89e3\uff0c\u8ba9Spring Boot\u81ea\u52a8\u628a\u524d\u7aef\u53c2\u6570\u5c01\u88c5\u6210\u5bf9\u5e94\u7684\u5bf9\u8c61\u3002\u90a3\u4e48\uff0cSpring Boot\u63d0\u4f9b\u7684\u5e38\u7528\u53c2\u6570\u6ce8\u89e3\u6709\u54ea\u4e9b\u5462\uff1f\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n## @PathVariable\uff1a\u83b7\u53d6\u8def\u5f84\u53d8\u91cf\\r\\n\\r\\n```java {5}\\r\\n@GetMapping(\\"/car/{id}/owner/{username}\\")\\r\\npublic Map<String, Object> getCar(\\r\\n  @PathVariable(\\"id\\") Integer id,\\r\\n  @PathVariable(\\"username\\") String name,\\r\\n  @PathVariable Map<String, String> kv) {\\r\\n  ...\\r\\n}\\r\\n```\\r\\n\\r\\n\u672c\u5730\u6d4b\u8bd5\u65f6\uff0c\u6d4f\u89c8\u5668\u8f93\u5165\u5730\u5740\u4e3a`localhost:8080/car/123/owner/kayhaw`\uff0c\u6b64\u65f6\u5728getCar\u65b9\u6cd5\u4e2d\u5f97\u5230\u53c2\u6570id\u503c\u4e3a123\uff0cname\u503c\u4e3akayhaw\u3002\u5176\u4e2d\uff0c\u8def\u5f84\u53d8\u91cf\u7684\u540d\u79f0\u663e\u793a\u6307\u5b9a\u4e3a`id`\u548c`username`\uff0c**\u82e5\u4e0d\u663e\u793a\u6307\u5b9a\u5219\u8def\u5f84\u53d8\u91cf\u540d\u7b49\u4e8e\u65b9\u6cd5\u5f62\u53c2\u540d**\uff0c\u5728\u5f00\u53d1\u4e2d\u9700\u8981\u6ce8\u610f@GetMapping\u6ce8\u89e3\u7684\u8def\u5f84\u53d8\u91cf\u5360\u4f4d\u7b26\u540d\u8981\u548c\u8def\u5f84\u53d8\u91cf\u540d\u4fdd\u6301\u4e00\u81f4\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u5728@PathVariable\u6ce8\u89e3\u7c7b\u7684\u6e90\u7801\u6ce8\u91ca\u4e2d\u63d0\u5230\\r\\n\\r\\n> If the method parameter is java.util.Map Map&lt;String, String&gt; then the map is populated with all path variable names and values.\\r\\n\\r\\n\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2aMap\u5bf9\u8c61\u6765\u5b58\u50a8\u6240\u6709\u8def\u5f84\u53d8\u91cf\u540d\u53ca\u5176\u503c\uff0c\u6b64\u65f6map\u5bf9\u8c61\u7684key\u503c\u662f@GetMapping\u4e2d\u8def\u5f84\u53d8\u91cf\u5360\u4f4d\u7b26\u7684\u540d\u79f0\\r\\n\\r\\n## @RequestHeader\uff1a\u83b7\u53d6\u8bf7\u6c42\u5934\u3002\\r\\n\\r\\n```java {4-5}\\r\\n@GetMapping(\\"/car/{id}/owner/{username}\\")\\r\\npublic Map<String, Object> getCar(\\r\\n  @RequestHeader(\\"User-Agent\\") String Pragma,\\r\\n  @RequestHeader Map<String, String> header,\\r\\n  @RequestHeader HttpHeaders headers) {\\r\\n  ...\\r\\n}\\r\\n```\\r\\n\\r\\n\u4f7f\u7528\u65b9\u6cd5\u548c@PathVariable\u7c7b\u4f3c\uff0c\u65e0\u8bf7\u6c42\u5934\u53c2\u6570\u540d\u9ed8\u8ba4\u4e3a\u65b9\u6cd5\u5f62\u53c2\u540d\u3002\u540c\u65f6\uff0c\u5728@RequestHeader\u6e90\u7801\u4e2d\u4e5f\u63d0\u5230\\r\\n\\r\\n> If the method parameter is java.util.Map Map&lt;String, String&gt;, org.springframework.util.MultiValueMap MultiValueMap&lt;String, String&gt;, or org.springframework.http.HttpHeaders HttpHeaders then the map is populated with all header names and values.\\r\\n\\r\\n\u56e0\u6b64\u53ef\u4ee5\u5c06\u65b9\u6cd5\u5f62\u53c2\u7c7b\u578b\u8bbe\u7f6e\u4e3aMap\u6216HttpHeaders\u5bf9\u8c61\u6765\u4e00\u6b21\u6027\u83b7\u53d6\u8bf7\u6c42\u5934\u6240\u6709\u4fe1\u606f\\r\\n\\r\\n## @RequestParam\uff1a\u83b7\u53d6\u8bf7\u6c42\u53c2\u6570\\r\\n\\r\\n```java {4}\\r\\n@GetMapping(\\"/car/{id}/owner/{username}\\")\\r\\npublic Map<String, Object> getCar(\\r\\n  @RequestParam(\\"age\\") Integer age,\\r\\n  @RequestParam(\\"inters\\") List<String> inters,\\r\\n  @RequestParam MultiValueMap<String, Object> params) {\\r\\n  ...\\r\\n}\\r\\n```\\r\\n\\r\\n\u672c\u5730\u6d4b\u8bd5\u5728\u6d4f\u89c8\u5668\u8f93\u5165\u5730\u5740\u4e3a`localhost:8080/car/123/owner/kayhaw?age=17&inters=123,3121`\uff0c\u6b64\u65f6\u83b7\u53d6age\u503c\u4e3a17\uff0cinters\u5217\u8868\u4e3a[123, 3121]\u3002\u540c\u6837\u5730\uff0c\u5728@RequestParam\u6e90\u7801\u6ce8\u91ca\u4e2d\u63d0\u5230\\r\\n\\r\\n> If the method parameter is `java.util.Map Map<String, String>` or `org.springframework.util.MultiValueMap MultiValueMap<String, String>` and a parameter name is not specified, then the map parameter is populated with all request parameter names and values.\\r\\n\\r\\n\u6ce8\u610f\u8fd9\u91cc\u51fa\u73b0\u4e86Spring\u81ea\u5b9a\u4e49\u5bb9\u5668\u7c7bMultiValueMap\uff0c\u5b83\u7684value\u503c\u662fArrayList\u5bf9\u8c61\u3002**\u6ce8\u610f\u5339\u914d\u8bf7\u6c42\u53c2\u6570\u540d\u662f\u533a\u5206\u5927\u5c0f\u5199\u7684**\\r\\n\\r\\n:::caution \u8b66\u544a\\r\\n\u5f53\u6211\u628a`RequestParam(\\"age\\")`\u6539\u6210`@RequestParam(\\"AGE\\")`\u65f6\uff0c\u5728\u6d4f\u89c8\u5668\u8f93\u5165`localhost:8080/car/123/owner/kayhaw?AGE=17&inters=123,3121`\uff0c\u8df3\u8f6c\u65f6\u4f1a\u81ea\u52a8\u628a\u5927\u5199\u7684AGE\u6539\u6210\u5c0f\u5199\u7684age\u7136\u540e\u53d1\u9001\u8bf7\u6c42\uff0c\u5bfc\u81f4\u62a5\u9519\u3002\\r\\n:::\\r\\n\\r\\n:::note \u63d0\u793a\\r\\nSpring Boot\u63a5\u53d7\u503c\u4e3a\u6570\u7ec4\u7684\u8bf7\u6c42\u53c2\u6570\uff0c\u8bf7\u6c42\u53c2\u6570\u7684\u5199\u6cd5\u662f`name=kay&name=haw`\u6216\u8005`name=kay,haw`\\r\\n:::\\r\\n\\r\\n## @CookieValue\uff1a\u83b7\u53d6Cookie\\r\\n\\r\\n```java {4}\\r\\n@GetMapping(\\"/car/{id}/owner/{username}\\")\\r\\npublic Map<String, Object> getCar(\\r\\n  @CookieValue(\\"id\\") String id,\\r\\n  @CookieValue(\\"id\\") Cookie _id) {\\r\\n  ...\\r\\n}\\r\\n```\\r\\n\\r\\nCookieValue\u6ce8\u89e3\u4fee\u9970\u7684\u53c2\u6570\u7c7b\u578b\u53ef\u4ee5\u662fCookie\u7c7b\u6216\u8005Cookie\u503c\u5bf9\u5e94\u7c7b\u578b\\r\\n> The method parameter may be declared as type `javax.servlet.http.Cookie` or as cookie value type (String, int, etc.).\\r\\n\\r\\n## @RequestBody\uff1a\u83b7\u53d6\u8bf7\u6c42\u4f53\\r\\n\\r\\n\u83b7\u53d6\u8bf7\u6c42\u4f53\u5185\u5bb9\uff0c\u6839\u636e\u8bf7\u6c42\u7684\u5185\u5bb9\u7c7b\u578b\u7531HttpMessageConverter\u5904\u7406\u8f6c\u6362\uff0c\u8be5\u6ce8\u89e3\u53ea\u6709\u4e00\u4e2arequired\u53c2\u6570\uff0c\u9ed8\u8ba4\u4e3atrue\u8868\u793a\u8bf7\u6c42\u4f53\u4e0d\u80fd\u4e3a\u7a7a\uff0c\u5426\u5219\u629b\u51fa\u5f02\u5e38\\r\\n\\r\\n## @RequestAttribute\uff1a\u83b7\u53d6Request\u5c5e\u6027\\r\\n\\r\\n```java {15}\\r\\n@Controller\\r\\npublic class RequestController {\\r\\n\\r\\n    // \u8fd9\u91cc\u4e0d\u8981\u52a0@ResponseBody\u6ce8\u89e3\\r\\n    @GetMapping(\\"/goto\\")\\r\\n    public String goToPage(HttpServletRequest request) {\\r\\n        request.setAttribute(\\"msg\\", \\"success\\");\\r\\n        request.setAttribute(\\"code\\", 200);\\r\\n        return \\"forward:success\\";\\r\\n    }\\r\\n\\r\\n    @ResponseBody\\r\\n    @GetMapping(\\"/success\\")\\r\\n    public Map success(@RequestAttribute(\\"msg\\") String msg,\\r\\n                       @RequestAttribute(\\"code\\") Integer code,\\r\\n                       HttpServletRequest request){\\r\\n\\r\\n        Object msg1 = request.getAttribute(\\"msg\\");\\r\\n        Map<String, Object> map = new HashMap<>();\\r\\n        map.put(\\"reqBody_msg\\", msg1);\\r\\n        map.put(\\"reqAttri_msg\\", msg);\\r\\n        map.put(\\"code\\", code);\\r\\n\\r\\n        return map;\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n\u4f7f\u7528\u65b9\u6cd5\u548c@RequestParam\u7c7b\u4f3c\uff0c\u5f53\u4e0d\u6307\u5b9a\u5c5e\u6027\u540d\u65f6\u9ed8\u8ba4\u4e3a\u5f62\u53c2\u540d\u3002\u4f46\u662f\uff0c@RequestAttribute\u4e0d\u652f\u6301\u5728\u5f62\u53c2\u7c7b\u578b\u4e3aMap\u81ea\u52a8\u8f6c\u5316\u7684\u529f\u80fd\uff0c\u56e0\u6b64`@RequestAttribute Map<String, String> attMap`\u4f1a\u62a5\u9519\u627e\u4e0d\u5230attMap\u5c5e\u6027\u3002\u8981\u60f3\u83b7\u53d6\u6240\u6709\u8bf7\u6c42\u5c5e\u6027\u5c01\u88c5\u5bf9\u8c61\uff0c\u58f0\u660e\u4e00\u4e2a`HttpServletRequest`\u5f62\u53c2\uff0c\u7136\u540e\u8c03\u7528\u5176getAttribute\u65b9\u6cd5\\r\\n\\r\\n:::note \u8bf7\u6c42\u53c2\u6570(Parameter)\u548c\u8bf7\u6c42\u5c5e\u6027(Attribute)\u7684\u5f02\u540c\\r\\n1. \u524d\u8005\u662f\u4eceweb\u7528\u6237\u7aef\u5230web\u670d\u52a1\u7aef\u4f20\u9012\u7684\u6570\u636e\uff0c\u540e\u8005\u662fweb\u670d\u52a1\u7aef\u5185\u90e8\u4f20\u9012\u7684\u6570\u636e\uff0c\u5728\u5177\u6709\u8f6c\u53d1\u5173\u7cfb\u4e4b\u95f4\u7684Web\u7ec4\u4ef6\u5171\u4eab\\r\\n2. \u8bf7\u6c42\u53c2\u6570\u53ea\u6709getter\u65b9\u6cd5\u6ca1\u6709setter\u65b9\u6cd5\u4e14\u8fd4\u56de\u503c\u4e3aString\u7c7b\u578b\uff0c\u8bf7\u6c42\u5c5e\u6027getter\u3001setter\u65b9\u6cd5\u90fd\u6709\uff0c\u53c2\u6570\u7c7b\u578b\u4e3aObject\\r\\n3. getParameter\u7528\u4e8e\u5ba2\u6237\u7aef\u91cd\u5b9a\u5411\u65f6\u63a5\u6536\u6570\u636e\uff0cgetAttribute\u7528\u6237\u670d\u52a1\u5668\u7aef\u91cd\u5b9a\u5411\u65f6\uff0c\u5373\u5728servlet\u4e2d\u4f7f\u7528\u4e86forward\u51fd\u6570\uff0cgetAttribute\u53ea\u80fd\u83b7\u53d6\u7528setAttribute\u8bbe\u7f6e\u7684\u503c\\r\\n:::\\r\\n\\r\\n## @MatrixVariable\uff1a\u83b7\u53d6\u77e9\u9635\u53d8\u91cf\\r\\n\\r\\n```java\\r\\n@ResponseBody\\r\\n@GetMapping(\\"/car/{path}\\")\\r\\npublic Map carsSell(\\r\\n  @MatrixVariable(value = \\"low\\", pathVar = \\"path\\") Integer low,\\r\\n  @MatrixVariable(\\"brand\\") List<String> brand,\\r\\n  @MatrixVariable Map<String, String> map,\\r\\n  @PathVariable(\\"path\\") String path) {\\r\\n  System.out.printf(\\"%d, %s, %s\\\\n\\", low, brand, path);\\r\\n  System.out.println(map);\\r\\n  return map;\\r\\n}\\r\\n```\\r\\n\\r\\n\u672c\u5730\u6d4b\u8bd5\u6d4f\u89c8\u5668\u5730\u5740\u680f\u8f93\u5165`http://localhost:8080/car/abc;low=12;brand=aodi,byd,yadi`\uff0c\u8def\u5f84\u53d8\u91cf\u548c\u77e9\u9635\u53d8\u91cf\u4e4b\u95f4\u4f7f\u7528\u5206\u53f7\u9694\u5f00\uff0c\u503c\u4e3a\u5217\u8868\u4f7f\u7528\u9017\u53f7\u9694\u5f00\u3002**\u77e9\u9635\u53d8\u91cf\u5fc5\u987b\u548c\u8def\u5f84\u53d8\u91cf\u7ed1\u5b9a**\uff0c\u5f53\u591a\u4e2a\u8def\u5f84\u53d8\u91cf\u540e\u7684\u77e9\u9635\u53d8\u91cf\u91cd\u540d\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7pathVar\u53c2\u6570\u6307\u5b9a\u8def\u5f84\u53d8\u91cf\u6765\u83b7\u53d6\u5bf9\u5e94\u7684\u77e9\u9635\u53d8\u91cf\u3002**\u6ce8\u610f\uff0c\u5f53\u77e9\u9635\u53d8\u91cf\u7ed1\u5b9a\u7684\u53c2\u6570\u7c7b\u578b\u4e3aMap\u6216MultiValueMap\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u8981\u83b7\u53d6\u7684\u77e9\u9635\u53d8\u91cf\u540d\uff0c\u6b64\u65f6map\u5305\u542b\u6240\u6709\u77e9\u9635\u53d8\u91cf\u4fe1\u606f\uff1b\u5982\u679c\u6307\u5b9a\u4e86\u77e9\u9635\u53d8\u91cf\u540d\uff0c\u4f1a\u5c1d\u8bd5\u628a\u540e\u9762\u7684\u503c\u8f6c\u4e3aMap\u7c7b\u578b**\\r\\n\\r\\n:::caution \u6ce8\u610f\\r\\nSpringBoot\u9ed8\u8ba4\u7981\u7528\u77e9\u9635\u53d8\u91cf\u529f\u80fd\uff0c\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u4e24\u79cd\u65b9\u5f0f\u5f00\u542f\uff0c\u4e24\u8005\u90fd\u662f\u5c06UrlPathHelper\u7ec4\u4ef6\u7684removeSemicolonContent\u5c5e\u6027\u8bbe\u7f6e\u4e3afalse(\u9ed8\u8ba4\u4e3atrue\u8868\u793a\u79fb\u9664\u8def\u5f84\u53d8\u91cf\u5206\u53f7\u540e\u7684\u5185\u5bb9)\\r\\n```java title=\\"\u65b9\u5f0f\u4e00\uff1a\u5b9e\u73b0WebMvcConfigurer\u5e76\u91cd\u5199\u65b9\u6cd5\\" {6}\\r\\n@Configuration(proxyBeanMethods = false)\\r\\npublic class WebConfig implements WebMvcConfigurer {\\r\\n    @Override\\r\\n    public void configurePathMatch(PathMatchConfigurer configurer) {\\r\\n        UrlPathHelper urlPathHelper = new UrlPathHelper();\\r\\n        urlPathHelper.setRemoveSemicolonContent(false);\\r\\n        configurer.setUrlPathHelper(urlPathHelper);\\r\\n    }\\r\\n}\\r\\n```\\r\\n```java title=\\"\u65b9\u5f0f\u4e8c\uff1a\u81ea\u5b9a\u4e49\u4e00\u4e2aWebMvcConfigurer\u7ec4\u4ef6\\" {9}\\r\\n@Configuration(proxyBeanMethods = false)\\r\\npublic class WebConfig {\\r\\n  @Bean\\r\\n  public WebMvcConfigurer webMvcConfigurer() {\\r\\n    return new WebMvcConfigurer() {\\r\\n      @Override\\r\\n      public void configurePathMatch(PathMatchConfigurer configurer) {\\r\\n        UrlPathHelper urlPathHelper = new UrlPathHelper();\\r\\n        urlPathHelper.setRemoveSemicolonContent(false);\\r\\n        configurer.setUrlPathHelper(urlPathHelper);\\r\\n      }\\r\\n    };\\r\\n  }\\r\\n}\\r\\n```\\r\\n:::"},{"id":"/2021/08/01/SpringBoot\u6e90\u7801\u5206\u679001","metadata":{"permalink":"/blog/2021/08/01/SpringBoot\u6e90\u7801\u5206\u679001","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2021-08-01-SpringBoot\u6e90\u7801\u5206\u679001.mdx","source":"@site/blog\\\\2021-08-01-SpringBoot\u6e90\u7801\u5206\u679001.mdx","title":"Spring Boot\u6e90\u7801\u5206\u6790(1)","description":"doDispatch","date":"2021-08-01T00:00:00.000Z","formattedDate":"August 1, 2021","tags":[{"label":"Spring Boot","permalink":"/blog/tags/spring-boot"}],"readingTime":3.755,"truncated":true,"authors":[{"name":"\u4f55\u8f72","title":"Never settle down","url":"https://github.com/kayhaw","imageURL":"https://avatars.githubusercontent.com/u/16892835?v=4"}],"frontMatter":{"title":"Spring Boot\u6e90\u7801\u5206\u6790(1)","author":"\u4f55\u8f72","author_title":"Never settle down","author_url":"https://github.com/kayhaw","author_image_url":"https://avatars.githubusercontent.com/u/16892835?v=4","tags":["Spring Boot"],"description":"doDispatch","hide_table_of_contents":false},"prevItem":{"title":"Spring Boot\u5b66\u4e60(1)","permalink":"/blog/2021/08/01/SpringBoot\u53c2\u6570\u6ce8\u89e3"},"nextItem":{"title":"deploy","permalink":"/blog/2021/06/22/deploy"}},"content":"\u7b80\u5355\u5730\u5206\u6790\u4e00\u4e0bHTTP\u8bf7\u6c42\u662f\u600e\u4e48\u843d\u5230DispatcherServlet\u7684doDispatch\u65b9\u6cd5\u5934\u4e0a\\r\\n\x3c!--truncate--\x3e\\r\\n:::info \u7248\u672c\u8bf4\u660e\\r\\n\u57fa\u4e8eSpring Boot 2.4.3\uff0c\u5bf9\u5e94Spring MVC 5.3.4\\r\\n:::\\r\\n\u9996\u5148\u7ed9\u51faDispatcherServlet\u7c7b\u7684\u7ee7\u627f\u5173\u7cfb\u56fe\uff0c\u6211\u4eec\u4e3b\u8981\u5173\u5fc3HttpServlet:arrow_right:HttpServletBean:arrow_right:FrameworkServlet:arrow_right:DispatcherServlet\u8fd9\u4e00\u6761\u7ee7\u627f\u5173\u7cfb\u7ebf\\r\\n\\r\\n![DispatcherServlet.png](/img/blog/SpringBoot/DispatcherServlet.png)\\r\\n\\r\\nHttpServlet\u4f5c\u4e3a\u62bd\u8c61\u7c7b\uff0c\u58f0\u660e\u5b9a\u4e49\u4e86doGet\u3001doPost\u3001doPut\u7b49\u65b9\u6cd5\u5904\u7406HTTP\u8bf7\u6c42(\u4ee5\u4e0b\u7edf\u79f0\u4e3adoXxx\u65b9\u6cd5)\uff0c\u7136\u800c\u5b83\u7684\u53cd\u5e94\u4e00\u5f8b\u662f\u201c\u4e0d\u597d\u610f\u601d\uff0c\u6211\u662f\u5e9f\u7269\uff0c\u4e0d\u652f\u6301\u5904\u7406xxx\u8fd9\u4e2aHTTP\u65b9\u6cd5\u201d\u3002\u56e0\u6b64\uff0c\u9700\u8981\u5176\u5b50\u7c7b\u6765\u91cd\u5199doXxx\u65b9\u6cd5\u6765\u5904\u7406\u8bf7\u6c42\\r\\n\\r\\n```java title=\\"javax/servlet/http/HttpServlet.java\\"\\r\\nprotected void doGet(HttpServletRequest req, HttpServletResponse resp)\\r\\n  throws ServletException, IOException\\r\\n{\\r\\n  String msg = lStrings.getString(\\"http.method_get_not_supported\\");\\r\\n  sendMethodNotAllowed(req, resp, msg);\\r\\n}\\r\\n\\r\\nprivate void sendMethodNotAllowed(HttpServletRequest req, HttpServletResponse resp, String msg) throws IOException {\\r\\n    String protocol = req.getProtocol();\\r\\n    // Note: Tomcat reports \\"\\" for HTTP/0.9 although some implementations\\r\\n    //       may report HTTP/0.9\\r\\n    if (protocol.length() == 0 || protocol.endsWith(\\"0.9\\") || protocol.endsWith(\\"1.0\\")) {\\r\\n      resp.sendError(HttpServletResponse.SC_BAD_REQUEST, msg;\\r\\n    } else {\\r\\n      resp.sendError(HttpServletResponseSC_METHOD_NOT_ALLOWED, msg);\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n:::note \u6316\u5751\\r\\n\u6ce8\u610f\u5230javax/servlet/http/HttpServlet.java\u6765\u81eatomcat-embed-core-9.0.43-sources.jar\u5305\uff0c\u518d\u5f80\u5916\u4e00\u5c42\u601d\u8003\uff0cweb\u5bb9\u5668\u662f\u600e\u4e48\u8c03\u7528\u8fd9\u4e9bdoXxx\u65b9\u6cd5\u7684\uff1f\\r\\n:::\\r\\n\\r\\n\u7136\u800c\u4f5c\u4e3aHttpServlet\u7684\u5b50\u7c7b\uff0cHttpServletBean\u5e76\u6ca1\u6709\u91cd\u5199doXxx\u65b9\u6cd5\uff0c\u5b83\u662fHttpServlet\u7684\u7b80\u5355\u6269\u5c55\uff0c\u7528\u4e8e\u5904\u7406web.xml\u4e2d\u7684serlvet\u914d\u7f6e\u53c2\u6570\\r\\n\\r\\n\u63a5\u7740\u6765\u5230HttpServletBean\u7684\u5b50\u7c7bFrameworkServlet\uff0c\u5b83\u7ec8\u4e8e\u91cd\u5199\u4e86\u6765\u81ea\u7237\u7237HttpServlet\u7684doXxx\u65b9\u6cd5\uff0c\u5e76\u4e14\u5b9e\u73b0\u5f88\u7b80\u5355\uff0c\u90fd\u8c03\u7528processRequest\u65b9\u6cd5\u4ee3\u4e3a\u5904\u7406\\r\\n\\r\\n```java title=\\"org/springframework/web/servlet/FrameworkServlet.java\\" {15}\\r\\n/**\\r\\n  * Delegate GET requests to processRequest/doService.\\r\\n  * <p>Will also be invoked by HttpServlet\'s default implementation of {@code doHead},\\r\\n  * with a {@code NoBodyResponse} that just captures the content length.\\r\\n  * @see #doService\\r\\n  * @see #doHead\\r\\n  */\\r\\n@Override\\r\\nprotected final void doGet(HttpServletRequest request, HttpServletResponse response)\\r\\n    throws ServletException, IOException {\\r\\n\\r\\n  processRequest(request, response);\\r\\n}\\r\\n```\\r\\n\\r\\n\u5728processRequest\u65b9\u6cd5\u4e2d\uff0c\u5b83\u53c8\u901a\u8fc7doService\u65b9\u6cd5\u5904\u7406\u8bf7\u6c42\u5e76\u6355\u83b7\u5904\u7406\u65f6\u629b\u51fa\u7684\u5f02\u5e38\uff0c\u7136\u540e\u8bb0\u5f55\u7ed3\u679c\u3001\u53d1\u5e03\u4e00\u4e2a\u8bf7\u6c42\u5df2\u5904\u7406\u4e8b\u4ef6\\r\\n\\r\\n```java title=\\"org/springframework/web/servlet/FrameworkServlet.java\\" {5}\\r\\nprotected final void processRequest(HttpServletRequest request, HttpServletResponse response)\\r\\n  throws ServletException, IOException {\\r\\n  ...   // \u4e00\u4e9b\u521d\u59cb\u5316\u4ee3\u7801\\r\\n  try {\\r\\n    doService(request, response);\\r\\n  }\\r\\n  catch (ServletException | IOException ex) {\\r\\n    failureCause = ex;\\r\\n    throw ex;\\r\\n  }\\r\\n  catch (Throwable ex) {\\r\\n    failureCause = ex;\\r\\n    throw new NestedServletException(\\"Request processing failed\\", ex);\\r\\n  }\\r\\n\\r\\n  finally {\\r\\n    resetContextHolders(request, previousLocaleContext, previousAttributes);\\r\\n    if (requestAttributes != null) {\\r\\n      requestAttributes.requestCompleted();\\r\\n    }\\r\\n    logResult(request, response, failureCause, asyncManager);\\r\\n    publishRequestHandledEvent(request, response, startTime, failureCause);\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n\u53efdoService\u8fd8\u662f\u4e0d\u4e2d\u7528\uff0c\u5b83\u662f\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5\uff0c\u56e0\u6b64\u8fd8\u662f\u9700\u8981FrameworkServlet\u7684\u5b50\u7c7b\u6765\u5b9e\u73b0doService\u65b9\u6cd5\u3002\u7ec8\u4e8e\uff0c\u8f6e\u5230DispatcherServlet\u51fa\u573a\u4e86\\r\\n\\r\\n```java\\r\\nprotected abstract void doService(HttpServletRequest request, HttpServletResponse response)\\r\\n  throws Exception;\\r\\n```\\r\\n\\r\\n\u4f5c\u4e3aFrameworkServlet\u7684\u5b50\u7c7b\uff0cDispatcherServlet\u7c7b\u5b9e\u73b0\u4e86doSerive\u65b9\u6cd5\uff0c\u5e76\u4e14\u5b83\u53c8\u5c06\u5904\u7406\u8bf7\u6c42\u53c8\u4ea4\u7ed9\u81ea\u5bb6\u7684doDispatch\u65b9\u6cd5\u53bb\u505a\u3002\u81f3\u6b64\uff0c\u8bf7\u6c42\u5904\u7406\u5230\u8fbe\u4e86\u6700\u6838\u5fc3\u7684\u4e00\u7ad9\\r\\n\\r\\n:::info \u603b\u7ed3\\r\\n\u8bf7\u6c42\u5904\u7406\u4e3b\u8981\u6d89\u53ca4\u4e2a\u7c7bHttpServlet\u3001HttpServletBean\u3001FrameworkServlet\u548cDispatcherServlet\u3002\u770b\u8d77\u6765\u4e00\u5c42\u5957\u4e00\u5c42\uff0c\u53c8\u662f\u5b50\u7c7b\u91cd\u5199\u7236\u7c7b\u65b9\u6cd5\uff0c\u53c8\u662f\u5b50\u7c7b\u5b9e\u73b0\u7236\u7c7b\u62bd\u8c61\u65b9\u6cd5\uff0c\u4f46\u662f\u6bcf\u4e00\u5c42\u90fd\u5e72\u4e86\u4e00\u70b9\u4e8b\uff1a\u6bd4\u5982HttpServletBean\u7c7b\u5904\u7406web.xml\u4e2d\u7684servlet\u914d\u7f6e\u53c2\u6570\uff0cFrameworkServlet\u662f\u53d1\u5e03\u8bf7\u6c42\u5904\u7406\u7684\u7ed3\u679c\u4e8b\u4ef6\uff0c\u6700\u540eDispatcherServlet\u5e72\u6700\u91cd\u8981\u7684\u6d3b\u3002\u4e00\u4e2a\u5e9e\u5927\u590d\u6742\u7684\u7cfb\u7edf\u6846\u67b6\u4e0d\u80fd\u901a\u8fc7\u4e00\u4e2a\u7c7b\u628a\u6240\u6709\u4e8b\u90fd\u5e72\u5b8c\u4e86\uff0c\u90a3\u6837\u4ee3\u7801\u81c3\u80bf\u5e76\u4e14\u7d27\u8026\u5408\u3002\u901a\u8fc7\u7c7b\u7ee7\u627f\uff0c\u6bcf\u4e00\u5c42\u5e72\u4e00\u70b9\u4e8b\uff0c\u6700\u540e\u5f62\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u7cfb\u7edf\\r\\n:::"},{"id":"/2021/06/22/deploy","metadata":{"permalink":"/blog/2021/06/22/deploy","editUrl":"https://github.com/kayhaw/kayhaw.github.io/edit/master/website/blog/blog/2021-06-22-deploy.mdx","source":"@site/blog/2021-06-22-deploy.mdx","title":"deploy","description":"\u5728github page\u4e0a\u90e8\u7f72docusaurus","date":"2021-06-22T00:00:00.000Z","formattedDate":"June 22, 2021","tags":[],"readingTime":0.035,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"Spring Boot\u6e90\u7801\u5206\u6790(1)","permalink":"/blog/2021/08/01/SpringBoot\u6e90\u7801\u5206\u679001"}},"content":"\u5728github page\u4e0a\u90e8\u7f72docusaurus"}]}')}}]);